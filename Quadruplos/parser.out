Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    FROM
    VAR_CHAR
    IFELSE
    FALSE
    TURTLE
    IMPORT
    TUR
    TRUE

Grammar

Rule 0     S' -> program
Rule 1     program -> START EDJO VAR_ID crea_primer_quadruple crea_funcion_global SEMICOLON Vars funciones Main
Rule 2     crea_primer_quadruple -> <empty>
Rule 3     crea_funcion_global -> <empty>
Rule 4     Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars
Rule 5     Vars -> <empty>
Rule 6     Tipo -> INT
Rule 7     Tipo -> DECIMAL
Rule 8     Tipo -> STRING
Rule 9     Tipo -> CHAR
Rule 10    Tipo -> BOOL
Rule 11    mas_vars -> COMMA VAR_ID mas_vars
Rule 12    mas_vars -> <empty>
Rule 13    agrega_var_funcion -> <empty>
Rule 14    Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
Rule 15    push_var_PilaOperandos -> <empty>
Rule 16    push_operador_PilaOperadores -> <empty>
Rule 17    resuelve_asignacion -> <empty>
Rule 18    ExpI -> ExpK resuelve_operadores_relacionales
Rule 19    ExpI -> ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
Rule 20    Operandos -> LT
Rule 21    Operandos -> GT
Rule 22    Operandos -> NE
Rule 23    Operandos -> LE
Rule 24    Operandos -> GE
Rule 25    Operandos -> EQ
Rule 26    resuelve_operadores_relacionales -> <empty>
Rule 27    ExpK -> ExpT resuelve_termino
Rule 28    ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
Rule 29    resuelve_termino -> <empty>
Rule 30    pos_SUMRES -> PLUS
Rule 31    pos_SUMRES -> MINUS
Rule 32    ExpT -> ExpF resuelve_factor
Rule 33    ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
Rule 34    resuelve_factor -> <empty>
Rule 35    pos_MULTDIV -> MULT
Rule 36    pos_MULTDIV -> DIV
Rule 37    ExpF -> VAR_CTE
Rule 38    ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso
Rule 39    ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo
Rule 40    ExpF -> llama_funcion
Rule 41    VAR_CTE -> VAR_INT push_int_PilaOperandos
Rule 42    VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos
Rule 43    push_int_PilaOperandos -> <empty>
Rule 44    push_decimal_PilaOperandos -> <empty>
Rule 45    agrega_falso -> <empty>
Rule 46    quita_falso -> <empty>
Rule 47    llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
Rule 48    checa_funcion_si_existe -> <empty>
Rule 49    argumentos -> ExpI resuelve_argumentos mas_argumentos
Rule 50    argumentos -> <empty>
Rule 51    mas_argumentos -> COMMA ExpI resuelve_argumentos mas_argumentos
Rule 52    mas_argumentos -> <empty>
Rule 53    resuelve_argumentos -> <empty>
Rule 54    resuelve_llamada_funcion -> <empty>
Rule 55    guarda_resultado_funcion -> <empty>
Rule 56    pos_arreglo -> SLBRACKET ExpI SRBRACKET
Rule 57    pos_arreglo -> <empty>
Rule 58    funciones -> FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_quad funciones
Rule 59    funciones -> <empty>
Rule 60    tipo_funcion -> VOID
Rule 61    tipo_funcion -> Tipo
Rule 62    param -> Tipo VAR_ID pos_commaf
Rule 63    param -> <empty>
Rule 64    pos_commaf -> COMMA Tipo VAR_ID pos_commaf
Rule 65    pos_commaf -> <empty>
Rule 66    agrega_funcion -> <empty>
Rule 67    fin_func_quad -> <empty>
Rule 68    reg_brack -> Estatutos reg_brack
Rule 69    reg_brack -> <empty>
Rule 70    Estatutos -> Condicion
Rule 71    Estatutos -> Ciclo
Rule 72    Estatutos -> Return
Rule 73    Estatutos -> Asignacion
Rule 74    Estatutos -> Print
Rule 75    Estatutos -> Llamada_Func
Rule 76    Estatutos -> TurtleMotion
Rule 77    Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
Rule 78    crea_GOTOF -> <empty>
Rule 79    llena_cuadruplo_if -> <empty>
Rule 80    pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET
Rule 81    pos_else -> <empty>
Rule 82    crea_else_cuadruplo -> <empty>
Rule 83    Return -> RETURN ExpI SEMICOLON resuelve_return
Rule 84    resuelve_return -> <empty>
Rule 85    Print -> PRINT LPAREN VAR_STRING RPAREN SEMICOLON
Rule 86    Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print
Rule 87    crea_print -> <empty>
Rule 88    Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON vtc_action
Rule 89    vtc_action -> <empty>
Rule 90    Ciclo -> For
Rule 91    Ciclo -> While
Rule 92    Ciclo -> DoWhile
Rule 93    While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
Rule 94    guarda_numero_cuadruplo -> <empty>
Rule 95    regresa_inicio_while -> <empty>
Rule 96    DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON
Rule 97    For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
Rule 98    Exp_ciclo -> PLUS VAR_INT
Rule 99    Exp_ciclo -> MINUS VAR_INT
Rule 100   Exp_ciclo -> MULT VAR_INT
Rule 101   Exp_ciclo -> DIV VAR_INT
Rule 102   Exp_ciclo -> PLUSPLUS
Rule 103   Exp_ciclo -> MINUSMINUS
Rule 104   TurtleMotion -> Position
Rule 105   TurtleMotion -> Right
Rule 106   TurtleMotion -> Left
Rule 107   TurtleMotion -> Forward
Rule 108   TurtleMotion -> Circle
Rule 109   Position -> VAR_ID POINT POS LPAREN RPAREN SEMICOLON
Rule 110   Forward -> VAR_ID POINT FORWARD LPAREN ExpI RPAREN SEMICOLON
Rule 111   Right -> VAR_ID POINT RIGHT LPAREN ExpI RPAREN SEMICOLON
Rule 112   Left -> VAR_ID POINT LEFT LPAREN ExpI RPAREN SEMICOLON
Rule 113   Circle -> VAR_ID POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON
Rule 114   Main -> MAIN agrega_main_funcion LPAREN RPAREN LBRACKET Vars reg_brack RET ZERO SEMICOLON RBRACKET
Rule 115   agrega_main_funcion -> <empty>

Terminals, with rules where they appear

ASSIGN               : 14 97
BOOL                 : 10
CHAR                 : 9
CIRCLE               : 113
COMMA                : 11 51 64
DECIMAL              : 7
DIV                  : 36 101
DO                   : 96
EDJO                 : 1
ELSE                 : 80
EQ                   : 25
FALSE                : 
FOR                  : 97
FORWARD              : 110
FROM                 : 
FUNC                 : 58
GE                   : 24
GT                   : 21
IF                   : 77
IFELSE               : 
IMPORT               : 
INT                  : 6
LBRACKET             : 58 77 80 93 96 97 114
LE                   : 23
LEFT                 : 112
LPAREN               : 38 47 58 77 85 86 88 93 96 97 109 110 111 112 113 114
LT                   : 20
MAIN                 : 114
MINUS                : 31 99
MINUSMINUS           : 103
MULT                 : 35 100
NE                   : 22
PLUS                 : 30 98
PLUSPLUS             : 102
POINT                : 109 110 111 112 113
POS                  : 109
PRINT                : 85 86
RBRACKET             : 58 77 80 93 96 97 114
RET                  : 114
RETURN               : 83
RIGHT                : 111
RPAREN               : 38 47 58 77 85 86 88 93 96 97 109 110 111 112 113 114
SEMICOLON            : 1 4 14 83 85 86 88 96 97 97 109 110 111 112 113 114
SLBRACKET            : 56
SRBRACKET            : 56
START                : 1
STRING               : 8
TRUE                 : 
TUR                  : 
TURTLE               : 
VAR_CHAR             : 
VAR_DECIMAL          : 42
VAR_ID               : 1 4 11 14 39 47 58 62 64 88 97 97 109 110 111 112 113
VAR_INT              : 41 98 99 100 101
VAR_STRING           : 85
VOID                 : 60
WHILE                : 93 96
ZERO                 : 114
error                : 

Nonterminals, with rules where they appear

Asignacion           : 73
Ciclo                : 71
Circle               : 108
Condicion            : 70
DoWhile              : 92
Estatutos            : 68
ExpF                 : 32 33
ExpI                 : 14 38 49 51 56 77 83 86 93 96 97 97 110 111 112 113
ExpK                 : 18 19 19 28
ExpT                 : 27 28 33
Exp_ciclo            : 97
For                  : 90
Forward              : 107
Left                 : 106
Llamada_Func         : 75
Main                 : 1
Operandos            : 19
Position             : 104
Print                : 74
Return               : 72
Right                : 105
Tipo                 : 4 61 62 64
TurtleMotion         : 76
VAR_CTE              : 37
Vars                 : 1 4 58 114
While                : 91
agrega_falso         : 38 47 88
agrega_funcion       : 58
agrega_main_funcion  : 114
agrega_var_funcion   : 4
argumentos           : 47 88
checa_funcion_si_existe : 47 88
crea_GOTOF           : 77 93
crea_else_cuadruplo  : 80
crea_funcion_global  : 1
crea_primer_quadruple : 1
crea_print           : 86
fin_func_quad        : 58
funciones            : 1 58
guarda_numero_cuadruplo : 93
guarda_resultado_funcion : 47
llama_funcion        : 40
llena_cuadruplo_if   : 77
mas_argumentos       : 49 51
mas_vars             : 4 11
param                : 58
pos_MULTDIV          : 33
pos_SUMRES           : 28
pos_arreglo          : 39
pos_commaf           : 62 64
pos_else             : 77
program              : 0
push_decimal_PilaOperandos : 42
push_int_PilaOperandos : 41
push_operador_PilaOperadores : 14 19 28 33
push_var_PilaOperandos : 14 39
quita_falso          : 38 47 88
reg_brack            : 58 68 77 80 93 96 97 114
regresa_inicio_while : 93
resuelve_argumentos  : 49 51
resuelve_asignacion  : 14
resuelve_factor      : 32 33
resuelve_llamada_funcion : 47 88
resuelve_operadores_relacionales : 18 19
resuelve_return      : 83
resuelve_termino     : 27 28
tipo_funcion         : 58
vtc_action           : 88

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . START EDJO VAR_ID crea_primer_quadruple crea_funcion_global SEMICOLON Vars funciones Main

    START           shift and go to state 1

    program                        shift and go to state 2

state 1

    (1) program -> START . EDJO VAR_ID crea_primer_quadruple crea_funcion_global SEMICOLON Vars funciones Main

    EDJO            shift and go to state 3


state 2

    (0) S' -> program .



state 3

    (1) program -> START EDJO . VAR_ID crea_primer_quadruple crea_funcion_global SEMICOLON Vars funciones Main

    VAR_ID          shift and go to state 4


state 4

    (1) program -> START EDJO VAR_ID . crea_primer_quadruple crea_funcion_global SEMICOLON Vars funciones Main
    (2) crea_primer_quadruple -> .

    SEMICOLON       reduce using rule 2 (crea_primer_quadruple -> .)

    crea_primer_quadruple          shift and go to state 5

state 5

    (1) program -> START EDJO VAR_ID crea_primer_quadruple . crea_funcion_global SEMICOLON Vars funciones Main
    (3) crea_funcion_global -> .

    SEMICOLON       reduce using rule 3 (crea_funcion_global -> .)

    crea_funcion_global            shift and go to state 6

state 6

    (1) program -> START EDJO VAR_ID crea_primer_quadruple crea_funcion_global . SEMICOLON Vars funciones Main

    SEMICOLON       shift and go to state 7


state 7

    (1) program -> START EDJO VAR_ID crea_primer_quadruple crea_funcion_global SEMICOLON . Vars funciones Main
    (4) Vars -> . Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars
    (5) Vars -> .
    (6) Tipo -> . INT
    (7) Tipo -> . DECIMAL
    (8) Tipo -> . STRING
    (9) Tipo -> . CHAR
    (10) Tipo -> . BOOL

    FUNC            reduce using rule 5 (Vars -> .)
    MAIN            reduce using rule 5 (Vars -> .)
    INT             shift and go to state 9
    DECIMAL         shift and go to state 8
    STRING          shift and go to state 13
    CHAR            shift and go to state 12
    BOOL            shift and go to state 11

    Tipo                           shift and go to state 14
    Vars                           shift and go to state 10

state 8

    (7) Tipo -> DECIMAL .

    VAR_ID          reduce using rule 7 (Tipo -> DECIMAL .)


state 9

    (6) Tipo -> INT .

    VAR_ID          reduce using rule 6 (Tipo -> INT .)


state 10

    (1) program -> START EDJO VAR_ID crea_primer_quadruple crea_funcion_global SEMICOLON Vars . funciones Main
    (58) funciones -> . FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_quad funciones
    (59) funciones -> .

    FUNC            shift and go to state 15
    MAIN            reduce using rule 59 (funciones -> .)

    funciones                      shift and go to state 16

state 11

    (10) Tipo -> BOOL .

    VAR_ID          reduce using rule 10 (Tipo -> BOOL .)


state 12

    (9) Tipo -> CHAR .

    VAR_ID          reduce using rule 9 (Tipo -> CHAR .)


state 13

    (8) Tipo -> STRING .

    VAR_ID          reduce using rule 8 (Tipo -> STRING .)


state 14

    (4) Vars -> Tipo . VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars

    VAR_ID          shift and go to state 17


state 15

    (58) funciones -> FUNC . tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_quad funciones
    (60) tipo_funcion -> . VOID
    (61) tipo_funcion -> . Tipo
    (6) Tipo -> . INT
    (7) Tipo -> . DECIMAL
    (8) Tipo -> . STRING
    (9) Tipo -> . CHAR
    (10) Tipo -> . BOOL

    VOID            shift and go to state 20
    INT             shift and go to state 9
    DECIMAL         shift and go to state 8
    STRING          shift and go to state 13
    CHAR            shift and go to state 12
    BOOL            shift and go to state 11

    Tipo                           shift and go to state 18
    tipo_funcion                   shift and go to state 19

state 16

    (1) program -> START EDJO VAR_ID crea_primer_quadruple crea_funcion_global SEMICOLON Vars funciones . Main
    (114) Main -> . MAIN agrega_main_funcion LPAREN RPAREN LBRACKET Vars reg_brack RET ZERO SEMICOLON RBRACKET

    MAIN            shift and go to state 22

    Main                           shift and go to state 21

state 17

    (4) Vars -> Tipo VAR_ID . mas_vars agrega_var_funcion SEMICOLON Vars
    (11) mas_vars -> . COMMA VAR_ID mas_vars
    (12) mas_vars -> .

    COMMA           shift and go to state 23
    SEMICOLON       reduce using rule 12 (mas_vars -> .)

    mas_vars                       shift and go to state 24

state 18

    (61) tipo_funcion -> Tipo .

    VAR_ID          reduce using rule 61 (tipo_funcion -> Tipo .)


state 19

    (58) funciones -> FUNC tipo_funcion . VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_quad funciones

    VAR_ID          shift and go to state 25


state 20

    (60) tipo_funcion -> VOID .

    VAR_ID          reduce using rule 60 (tipo_funcion -> VOID .)


state 21

    (1) program -> START EDJO VAR_ID crea_primer_quadruple crea_funcion_global SEMICOLON Vars funciones Main .

    $end            reduce using rule 1 (program -> START EDJO VAR_ID crea_primer_quadruple crea_funcion_global SEMICOLON Vars funciones Main .)


state 22

    (114) Main -> MAIN . agrega_main_funcion LPAREN RPAREN LBRACKET Vars reg_brack RET ZERO SEMICOLON RBRACKET
    (115) agrega_main_funcion -> .

    LPAREN          reduce using rule 115 (agrega_main_funcion -> .)

    agrega_main_funcion            shift and go to state 26

state 23

    (11) mas_vars -> COMMA . VAR_ID mas_vars

    VAR_ID          shift and go to state 27


state 24

    (4) Vars -> Tipo VAR_ID mas_vars . agrega_var_funcion SEMICOLON Vars
    (13) agrega_var_funcion -> .

    SEMICOLON       reduce using rule 13 (agrega_var_funcion -> .)

    agrega_var_funcion             shift and go to state 28

state 25

    (58) funciones -> FUNC tipo_funcion VAR_ID . LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_quad funciones

    LPAREN          shift and go to state 29


state 26

    (114) Main -> MAIN agrega_main_funcion . LPAREN RPAREN LBRACKET Vars reg_brack RET ZERO SEMICOLON RBRACKET

    LPAREN          shift and go to state 30


state 27

    (11) mas_vars -> COMMA VAR_ID . mas_vars
    (11) mas_vars -> . COMMA VAR_ID mas_vars
    (12) mas_vars -> .

    COMMA           shift and go to state 23
    SEMICOLON       reduce using rule 12 (mas_vars -> .)

    mas_vars                       shift and go to state 31

state 28

    (4) Vars -> Tipo VAR_ID mas_vars agrega_var_funcion . SEMICOLON Vars

    SEMICOLON       shift and go to state 32


state 29

    (58) funciones -> FUNC tipo_funcion VAR_ID LPAREN . param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_quad funciones
    (62) param -> . Tipo VAR_ID pos_commaf
    (63) param -> .
    (6) Tipo -> . INT
    (7) Tipo -> . DECIMAL
    (8) Tipo -> . STRING
    (9) Tipo -> . CHAR
    (10) Tipo -> . BOOL

    RPAREN          reduce using rule 63 (param -> .)
    INT             shift and go to state 9
    DECIMAL         shift and go to state 8
    STRING          shift and go to state 13
    CHAR            shift and go to state 12
    BOOL            shift and go to state 11

    Tipo                           shift and go to state 33
    param                          shift and go to state 34

state 30

    (114) Main -> MAIN agrega_main_funcion LPAREN . RPAREN LBRACKET Vars reg_brack RET ZERO SEMICOLON RBRACKET

    RPAREN          shift and go to state 35


state 31

    (11) mas_vars -> COMMA VAR_ID mas_vars .

    SEMICOLON       reduce using rule 11 (mas_vars -> COMMA VAR_ID mas_vars .)


state 32

    (4) Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON . Vars
    (4) Vars -> . Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars
    (5) Vars -> .
    (6) Tipo -> . INT
    (7) Tipo -> . DECIMAL
    (8) Tipo -> . STRING
    (9) Tipo -> . CHAR
    (10) Tipo -> . BOOL

    FUNC            reduce using rule 5 (Vars -> .)
    MAIN            reduce using rule 5 (Vars -> .)
    IF              reduce using rule 5 (Vars -> .)
    RETURN          reduce using rule 5 (Vars -> .)
    VAR_ID          reduce using rule 5 (Vars -> .)
    PRINT           reduce using rule 5 (Vars -> .)
    FOR             reduce using rule 5 (Vars -> .)
    WHILE           reduce using rule 5 (Vars -> .)
    DO              reduce using rule 5 (Vars -> .)
    RET             reduce using rule 5 (Vars -> .)
    RBRACKET        reduce using rule 5 (Vars -> .)
    INT             shift and go to state 9
    DECIMAL         shift and go to state 8
    STRING          shift and go to state 13
    CHAR            shift and go to state 12
    BOOL            shift and go to state 11

    Vars                           shift and go to state 36
    Tipo                           shift and go to state 14

state 33

    (62) param -> Tipo . VAR_ID pos_commaf

    VAR_ID          shift and go to state 37


state 34

    (58) funciones -> FUNC tipo_funcion VAR_ID LPAREN param . RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_quad funciones

    RPAREN          shift and go to state 38


state 35

    (114) Main -> MAIN agrega_main_funcion LPAREN RPAREN . LBRACKET Vars reg_brack RET ZERO SEMICOLON RBRACKET

    LBRACKET        shift and go to state 39


state 36

    (4) Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .

    IF              reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)
    RETURN          reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)
    VAR_ID          reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)
    PRINT           reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)
    FOR             reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)
    WHILE           reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)
    DO              reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)
    RET             reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)
    FUNC            reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)
    MAIN            reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)
    RBRACKET        reduce using rule 4 (Vars -> Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars .)


state 37

    (62) param -> Tipo VAR_ID . pos_commaf
    (64) pos_commaf -> . COMMA Tipo VAR_ID pos_commaf
    (65) pos_commaf -> .

    COMMA           shift and go to state 41
    RPAREN          reduce using rule 65 (pos_commaf -> .)

    pos_commaf                     shift and go to state 40

state 38

    (58) funciones -> FUNC tipo_funcion VAR_ID LPAREN param RPAREN . agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_quad funciones
    (66) agrega_funcion -> .

    LBRACKET        reduce using rule 66 (agrega_funcion -> .)

    agrega_funcion                 shift and go to state 42

state 39

    (114) Main -> MAIN agrega_main_funcion LPAREN RPAREN LBRACKET . Vars reg_brack RET ZERO SEMICOLON RBRACKET
    (4) Vars -> . Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars
    (5) Vars -> .
    (6) Tipo -> . INT
    (7) Tipo -> . DECIMAL
    (8) Tipo -> . STRING
    (9) Tipo -> . CHAR
    (10) Tipo -> . BOOL

    IF              reduce using rule 5 (Vars -> .)
    RETURN          reduce using rule 5 (Vars -> .)
    VAR_ID          reduce using rule 5 (Vars -> .)
    PRINT           reduce using rule 5 (Vars -> .)
    FOR             reduce using rule 5 (Vars -> .)
    WHILE           reduce using rule 5 (Vars -> .)
    DO              reduce using rule 5 (Vars -> .)
    RET             reduce using rule 5 (Vars -> .)
    INT             shift and go to state 9
    DECIMAL         shift and go to state 8
    STRING          shift and go to state 13
    CHAR            shift and go to state 12
    BOOL            shift and go to state 11

    Vars                           shift and go to state 43
    Tipo                           shift and go to state 14

state 40

    (62) param -> Tipo VAR_ID pos_commaf .

    RPAREN          reduce using rule 62 (param -> Tipo VAR_ID pos_commaf .)


state 41

    (64) pos_commaf -> COMMA . Tipo VAR_ID pos_commaf
    (6) Tipo -> . INT
    (7) Tipo -> . DECIMAL
    (8) Tipo -> . STRING
    (9) Tipo -> . CHAR
    (10) Tipo -> . BOOL

    INT             shift and go to state 9
    DECIMAL         shift and go to state 8
    STRING          shift and go to state 13
    CHAR            shift and go to state 12
    BOOL            shift and go to state 11

    Tipo                           shift and go to state 44

state 42

    (58) funciones -> FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion . LBRACKET Vars reg_brack RBRACKET fin_func_quad funciones

    LBRACKET        shift and go to state 45


state 43

    (114) Main -> MAIN agrega_main_funcion LPAREN RPAREN LBRACKET Vars . reg_brack RET ZERO SEMICOLON RBRACKET
    (68) reg_brack -> . Estatutos reg_brack
    (69) reg_brack -> .
    (70) Estatutos -> . Condicion
    (71) Estatutos -> . Ciclo
    (72) Estatutos -> . Return
    (73) Estatutos -> . Asignacion
    (74) Estatutos -> . Print
    (75) Estatutos -> . Llamada_Func
    (76) Estatutos -> . TurtleMotion
    (77) Condicion -> . IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
    (90) Ciclo -> . For
    (91) Ciclo -> . While
    (92) Ciclo -> . DoWhile
    (83) Return -> . RETURN ExpI SEMICOLON resuelve_return
    (14) Asignacion -> . VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
    (85) Print -> . PRINT LPAREN VAR_STRING RPAREN SEMICOLON
    (86) Print -> . PRINT LPAREN ExpI RPAREN SEMICOLON crea_print
    (88) Llamada_Func -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON vtc_action
    (104) TurtleMotion -> . Position
    (105) TurtleMotion -> . Right
    (106) TurtleMotion -> . Left
    (107) TurtleMotion -> . Forward
    (108) TurtleMotion -> . Circle
    (97) For -> . FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (93) While -> . WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (96) DoWhile -> . DO LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON
    (109) Position -> . VAR_ID POINT POS LPAREN RPAREN SEMICOLON
    (111) Right -> . VAR_ID POINT RIGHT LPAREN ExpI RPAREN SEMICOLON
    (112) Left -> . VAR_ID POINT LEFT LPAREN ExpI RPAREN SEMICOLON
    (110) Forward -> . VAR_ID POINT FORWARD LPAREN ExpI RPAREN SEMICOLON
    (113) Circle -> . VAR_ID POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON

    RET             reduce using rule 69 (reg_brack -> .)
    IF              shift and go to state 61
    RETURN          shift and go to state 64
    VAR_ID          shift and go to state 66
    PRINT           shift and go to state 53
    FOR             shift and go to state 63
    WHILE           shift and go to state 62
    DO              shift and go to state 57

    Right                          shift and go to state 54
    Llamada_Func                   shift and go to state 47
    Forward                        shift and go to state 55
    Circle                         shift and go to state 46
    Ciclo                          shift and go to state 56
    Return                         shift and go to state 58
    reg_brack                      shift and go to state 65
    DoWhile                        shift and go to state 48
    For                            shift and go to state 49
    Print                          shift and go to state 52
    While                          shift and go to state 50
    Left                           shift and go to state 59
    Estatutos                      shift and go to state 51
    Condicion                      shift and go to state 67
    Position                       shift and go to state 68
    Asignacion                     shift and go to state 60
    TurtleMotion                   shift and go to state 69

state 44

    (64) pos_commaf -> COMMA Tipo . VAR_ID pos_commaf

    VAR_ID          shift and go to state 70


state 45

    (58) funciones -> FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET . Vars reg_brack RBRACKET fin_func_quad funciones
    (4) Vars -> . Tipo VAR_ID mas_vars agrega_var_funcion SEMICOLON Vars
    (5) Vars -> .
    (6) Tipo -> . INT
    (7) Tipo -> . DECIMAL
    (8) Tipo -> . STRING
    (9) Tipo -> . CHAR
    (10) Tipo -> . BOOL

    IF              reduce using rule 5 (Vars -> .)
    RETURN          reduce using rule 5 (Vars -> .)
    VAR_ID          reduce using rule 5 (Vars -> .)
    PRINT           reduce using rule 5 (Vars -> .)
    FOR             reduce using rule 5 (Vars -> .)
    WHILE           reduce using rule 5 (Vars -> .)
    DO              reduce using rule 5 (Vars -> .)
    RBRACKET        reduce using rule 5 (Vars -> .)
    INT             shift and go to state 9
    DECIMAL         shift and go to state 8
    STRING          shift and go to state 13
    CHAR            shift and go to state 12
    BOOL            shift and go to state 11

    Tipo                           shift and go to state 14
    Vars                           shift and go to state 71

state 46

    (108) TurtleMotion -> Circle .

    IF              reduce using rule 108 (TurtleMotion -> Circle .)
    RETURN          reduce using rule 108 (TurtleMotion -> Circle .)
    VAR_ID          reduce using rule 108 (TurtleMotion -> Circle .)
    PRINT           reduce using rule 108 (TurtleMotion -> Circle .)
    FOR             reduce using rule 108 (TurtleMotion -> Circle .)
    WHILE           reduce using rule 108 (TurtleMotion -> Circle .)
    DO              reduce using rule 108 (TurtleMotion -> Circle .)
    RET             reduce using rule 108 (TurtleMotion -> Circle .)
    RBRACKET        reduce using rule 108 (TurtleMotion -> Circle .)


state 47

    (75) Estatutos -> Llamada_Func .

    IF              reduce using rule 75 (Estatutos -> Llamada_Func .)
    RETURN          reduce using rule 75 (Estatutos -> Llamada_Func .)
    VAR_ID          reduce using rule 75 (Estatutos -> Llamada_Func .)
    PRINT           reduce using rule 75 (Estatutos -> Llamada_Func .)
    FOR             reduce using rule 75 (Estatutos -> Llamada_Func .)
    WHILE           reduce using rule 75 (Estatutos -> Llamada_Func .)
    DO              reduce using rule 75 (Estatutos -> Llamada_Func .)
    RBRACKET        reduce using rule 75 (Estatutos -> Llamada_Func .)
    RET             reduce using rule 75 (Estatutos -> Llamada_Func .)


state 48

    (92) Ciclo -> DoWhile .

    IF              reduce using rule 92 (Ciclo -> DoWhile .)
    RETURN          reduce using rule 92 (Ciclo -> DoWhile .)
    VAR_ID          reduce using rule 92 (Ciclo -> DoWhile .)
    PRINT           reduce using rule 92 (Ciclo -> DoWhile .)
    FOR             reduce using rule 92 (Ciclo -> DoWhile .)
    WHILE           reduce using rule 92 (Ciclo -> DoWhile .)
    DO              reduce using rule 92 (Ciclo -> DoWhile .)
    RET             reduce using rule 92 (Ciclo -> DoWhile .)
    RBRACKET        reduce using rule 92 (Ciclo -> DoWhile .)


state 49

    (90) Ciclo -> For .

    IF              reduce using rule 90 (Ciclo -> For .)
    RETURN          reduce using rule 90 (Ciclo -> For .)
    VAR_ID          reduce using rule 90 (Ciclo -> For .)
    PRINT           reduce using rule 90 (Ciclo -> For .)
    FOR             reduce using rule 90 (Ciclo -> For .)
    WHILE           reduce using rule 90 (Ciclo -> For .)
    DO              reduce using rule 90 (Ciclo -> For .)
    RET             reduce using rule 90 (Ciclo -> For .)
    RBRACKET        reduce using rule 90 (Ciclo -> For .)


state 50

    (91) Ciclo -> While .

    IF              reduce using rule 91 (Ciclo -> While .)
    RETURN          reduce using rule 91 (Ciclo -> While .)
    VAR_ID          reduce using rule 91 (Ciclo -> While .)
    PRINT           reduce using rule 91 (Ciclo -> While .)
    FOR             reduce using rule 91 (Ciclo -> While .)
    WHILE           reduce using rule 91 (Ciclo -> While .)
    DO              reduce using rule 91 (Ciclo -> While .)
    RET             reduce using rule 91 (Ciclo -> While .)
    RBRACKET        reduce using rule 91 (Ciclo -> While .)


state 51

    (68) reg_brack -> Estatutos . reg_brack
    (68) reg_brack -> . Estatutos reg_brack
    (69) reg_brack -> .
    (70) Estatutos -> . Condicion
    (71) Estatutos -> . Ciclo
    (72) Estatutos -> . Return
    (73) Estatutos -> . Asignacion
    (74) Estatutos -> . Print
    (75) Estatutos -> . Llamada_Func
    (76) Estatutos -> . TurtleMotion
    (77) Condicion -> . IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
    (90) Ciclo -> . For
    (91) Ciclo -> . While
    (92) Ciclo -> . DoWhile
    (83) Return -> . RETURN ExpI SEMICOLON resuelve_return
    (14) Asignacion -> . VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
    (85) Print -> . PRINT LPAREN VAR_STRING RPAREN SEMICOLON
    (86) Print -> . PRINT LPAREN ExpI RPAREN SEMICOLON crea_print
    (88) Llamada_Func -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON vtc_action
    (104) TurtleMotion -> . Position
    (105) TurtleMotion -> . Right
    (106) TurtleMotion -> . Left
    (107) TurtleMotion -> . Forward
    (108) TurtleMotion -> . Circle
    (97) For -> . FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (93) While -> . WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (96) DoWhile -> . DO LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON
    (109) Position -> . VAR_ID POINT POS LPAREN RPAREN SEMICOLON
    (111) Right -> . VAR_ID POINT RIGHT LPAREN ExpI RPAREN SEMICOLON
    (112) Left -> . VAR_ID POINT LEFT LPAREN ExpI RPAREN SEMICOLON
    (110) Forward -> . VAR_ID POINT FORWARD LPAREN ExpI RPAREN SEMICOLON
    (113) Circle -> . VAR_ID POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON

    RET             reduce using rule 69 (reg_brack -> .)
    RBRACKET        reduce using rule 69 (reg_brack -> .)
    IF              shift and go to state 61
    RETURN          shift and go to state 64
    VAR_ID          shift and go to state 66
    PRINT           shift and go to state 53
    FOR             shift and go to state 63
    WHILE           shift and go to state 62
    DO              shift and go to state 57

    Right                          shift and go to state 54
    Llamada_Func                   shift and go to state 47
    Forward                        shift and go to state 55
    Circle                         shift and go to state 46
    Ciclo                          shift and go to state 56
    Return                         shift and go to state 58
    reg_brack                      shift and go to state 72
    DoWhile                        shift and go to state 48
    For                            shift and go to state 49
    Print                          shift and go to state 52
    TurtleMotion                   shift and go to state 69
    While                          shift and go to state 50
    Left                           shift and go to state 59
    Estatutos                      shift and go to state 51
    Condicion                      shift and go to state 67
    Position                       shift and go to state 68
    Asignacion                     shift and go to state 60

state 52

    (74) Estatutos -> Print .

    IF              reduce using rule 74 (Estatutos -> Print .)
    RETURN          reduce using rule 74 (Estatutos -> Print .)
    VAR_ID          reduce using rule 74 (Estatutos -> Print .)
    PRINT           reduce using rule 74 (Estatutos -> Print .)
    FOR             reduce using rule 74 (Estatutos -> Print .)
    WHILE           reduce using rule 74 (Estatutos -> Print .)
    DO              reduce using rule 74 (Estatutos -> Print .)
    RBRACKET        reduce using rule 74 (Estatutos -> Print .)
    RET             reduce using rule 74 (Estatutos -> Print .)


state 53

    (85) Print -> PRINT . LPAREN VAR_STRING RPAREN SEMICOLON
    (86) Print -> PRINT . LPAREN ExpI RPAREN SEMICOLON crea_print

    LPAREN          shift and go to state 73


state 54

    (105) TurtleMotion -> Right .

    IF              reduce using rule 105 (TurtleMotion -> Right .)
    RETURN          reduce using rule 105 (TurtleMotion -> Right .)
    VAR_ID          reduce using rule 105 (TurtleMotion -> Right .)
    PRINT           reduce using rule 105 (TurtleMotion -> Right .)
    FOR             reduce using rule 105 (TurtleMotion -> Right .)
    WHILE           reduce using rule 105 (TurtleMotion -> Right .)
    DO              reduce using rule 105 (TurtleMotion -> Right .)
    RET             reduce using rule 105 (TurtleMotion -> Right .)
    RBRACKET        reduce using rule 105 (TurtleMotion -> Right .)


state 55

    (107) TurtleMotion -> Forward .

    IF              reduce using rule 107 (TurtleMotion -> Forward .)
    RETURN          reduce using rule 107 (TurtleMotion -> Forward .)
    VAR_ID          reduce using rule 107 (TurtleMotion -> Forward .)
    PRINT           reduce using rule 107 (TurtleMotion -> Forward .)
    FOR             reduce using rule 107 (TurtleMotion -> Forward .)
    WHILE           reduce using rule 107 (TurtleMotion -> Forward .)
    DO              reduce using rule 107 (TurtleMotion -> Forward .)
    RET             reduce using rule 107 (TurtleMotion -> Forward .)
    RBRACKET        reduce using rule 107 (TurtleMotion -> Forward .)


state 56

    (71) Estatutos -> Ciclo .

    IF              reduce using rule 71 (Estatutos -> Ciclo .)
    RETURN          reduce using rule 71 (Estatutos -> Ciclo .)
    VAR_ID          reduce using rule 71 (Estatutos -> Ciclo .)
    PRINT           reduce using rule 71 (Estatutos -> Ciclo .)
    FOR             reduce using rule 71 (Estatutos -> Ciclo .)
    WHILE           reduce using rule 71 (Estatutos -> Ciclo .)
    DO              reduce using rule 71 (Estatutos -> Ciclo .)
    RBRACKET        reduce using rule 71 (Estatutos -> Ciclo .)
    RET             reduce using rule 71 (Estatutos -> Ciclo .)


state 57

    (96) DoWhile -> DO . LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON

    LBRACKET        shift and go to state 74


state 58

    (72) Estatutos -> Return .

    IF              reduce using rule 72 (Estatutos -> Return .)
    RETURN          reduce using rule 72 (Estatutos -> Return .)
    VAR_ID          reduce using rule 72 (Estatutos -> Return .)
    PRINT           reduce using rule 72 (Estatutos -> Return .)
    FOR             reduce using rule 72 (Estatutos -> Return .)
    WHILE           reduce using rule 72 (Estatutos -> Return .)
    DO              reduce using rule 72 (Estatutos -> Return .)
    RBRACKET        reduce using rule 72 (Estatutos -> Return .)
    RET             reduce using rule 72 (Estatutos -> Return .)


state 59

    (106) TurtleMotion -> Left .

    IF              reduce using rule 106 (TurtleMotion -> Left .)
    RETURN          reduce using rule 106 (TurtleMotion -> Left .)
    VAR_ID          reduce using rule 106 (TurtleMotion -> Left .)
    PRINT           reduce using rule 106 (TurtleMotion -> Left .)
    FOR             reduce using rule 106 (TurtleMotion -> Left .)
    WHILE           reduce using rule 106 (TurtleMotion -> Left .)
    DO              reduce using rule 106 (TurtleMotion -> Left .)
    RET             reduce using rule 106 (TurtleMotion -> Left .)
    RBRACKET        reduce using rule 106 (TurtleMotion -> Left .)


state 60

    (73) Estatutos -> Asignacion .

    IF              reduce using rule 73 (Estatutos -> Asignacion .)
    RETURN          reduce using rule 73 (Estatutos -> Asignacion .)
    VAR_ID          reduce using rule 73 (Estatutos -> Asignacion .)
    PRINT           reduce using rule 73 (Estatutos -> Asignacion .)
    FOR             reduce using rule 73 (Estatutos -> Asignacion .)
    WHILE           reduce using rule 73 (Estatutos -> Asignacion .)
    DO              reduce using rule 73 (Estatutos -> Asignacion .)
    RBRACKET        reduce using rule 73 (Estatutos -> Asignacion .)
    RET             reduce using rule 73 (Estatutos -> Asignacion .)


state 61

    (77) Condicion -> IF . LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if

    LPAREN          shift and go to state 75


state 62

    (93) While -> WHILE . guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (94) guarda_numero_cuadruplo -> .

    LPAREN          reduce using rule 94 (guarda_numero_cuadruplo -> .)

    guarda_numero_cuadruplo        shift and go to state 76

state 63

    (97) For -> FOR . LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET

    LPAREN          shift and go to state 77


state 64

    (83) Return -> RETURN . ExpI SEMICOLON resuelve_return
    (18) ExpI -> . ExpK resuelve_operadores_relacionales
    (19) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (27) ExpK -> . ExpT resuelve_termino
    (28) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (32) ExpT -> . ExpF resuelve_factor
    (33) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (37) ExpF -> . VAR_CTE
    (38) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (39) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (40) ExpF -> . llama_funcion
    (41) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (42) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (47) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion

    LPAREN          shift and go to state 81
    VAR_ID          shift and go to state 85
    VAR_INT         shift and go to state 83
    VAR_DECIMAL     shift and go to state 86

    ExpK                           shift and go to state 78
    llama_funcion                  shift and go to state 84
    ExpT                           shift and go to state 79
    VAR_CTE                        shift and go to state 80
    ExpF                           shift and go to state 82
    ExpI                           shift and go to state 87

state 65

    (114) Main -> MAIN agrega_main_funcion LPAREN RPAREN LBRACKET Vars reg_brack . RET ZERO SEMICOLON RBRACKET

    RET             shift and go to state 88


state 66

    (14) Asignacion -> VAR_ID . push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
    (88) Llamada_Func -> VAR_ID . LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON vtc_action
    (109) Position -> VAR_ID . POINT POS LPAREN RPAREN SEMICOLON
    (111) Right -> VAR_ID . POINT RIGHT LPAREN ExpI RPAREN SEMICOLON
    (112) Left -> VAR_ID . POINT LEFT LPAREN ExpI RPAREN SEMICOLON
    (110) Forward -> VAR_ID . POINT FORWARD LPAREN ExpI RPAREN SEMICOLON
    (113) Circle -> VAR_ID . POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON
    (15) push_var_PilaOperandos -> .

    LPAREN          shift and go to state 91
    POINT           shift and go to state 89
    ASSIGN          reduce using rule 15 (push_var_PilaOperandos -> .)

    push_var_PilaOperandos         shift and go to state 90

state 67

    (70) Estatutos -> Condicion .

    IF              reduce using rule 70 (Estatutos -> Condicion .)
    RETURN          reduce using rule 70 (Estatutos -> Condicion .)
    VAR_ID          reduce using rule 70 (Estatutos -> Condicion .)
    PRINT           reduce using rule 70 (Estatutos -> Condicion .)
    FOR             reduce using rule 70 (Estatutos -> Condicion .)
    WHILE           reduce using rule 70 (Estatutos -> Condicion .)
    DO              reduce using rule 70 (Estatutos -> Condicion .)
    RBRACKET        reduce using rule 70 (Estatutos -> Condicion .)
    RET             reduce using rule 70 (Estatutos -> Condicion .)


state 68

    (104) TurtleMotion -> Position .

    IF              reduce using rule 104 (TurtleMotion -> Position .)
    RETURN          reduce using rule 104 (TurtleMotion -> Position .)
    VAR_ID          reduce using rule 104 (TurtleMotion -> Position .)
    PRINT           reduce using rule 104 (TurtleMotion -> Position .)
    FOR             reduce using rule 104 (TurtleMotion -> Position .)
    WHILE           reduce using rule 104 (TurtleMotion -> Position .)
    DO              reduce using rule 104 (TurtleMotion -> Position .)
    RET             reduce using rule 104 (TurtleMotion -> Position .)
    RBRACKET        reduce using rule 104 (TurtleMotion -> Position .)


state 69

    (76) Estatutos -> TurtleMotion .

    IF              reduce using rule 76 (Estatutos -> TurtleMotion .)
    RETURN          reduce using rule 76 (Estatutos -> TurtleMotion .)
    VAR_ID          reduce using rule 76 (Estatutos -> TurtleMotion .)
    PRINT           reduce using rule 76 (Estatutos -> TurtleMotion .)
    FOR             reduce using rule 76 (Estatutos -> TurtleMotion .)
    WHILE           reduce using rule 76 (Estatutos -> TurtleMotion .)
    DO              reduce using rule 76 (Estatutos -> TurtleMotion .)
    RBRACKET        reduce using rule 76 (Estatutos -> TurtleMotion .)
    RET             reduce using rule 76 (Estatutos -> TurtleMotion .)


state 70

    (64) pos_commaf -> COMMA Tipo VAR_ID . pos_commaf
    (64) pos_commaf -> . COMMA Tipo VAR_ID pos_commaf
    (65) pos_commaf -> .

    COMMA           shift and go to state 41
    RPAREN          reduce using rule 65 (pos_commaf -> .)

    pos_commaf                     shift and go to state 92

state 71

    (58) funciones -> FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars . reg_brack RBRACKET fin_func_quad funciones
    (68) reg_brack -> . Estatutos reg_brack
    (69) reg_brack -> .
    (70) Estatutos -> . Condicion
    (71) Estatutos -> . Ciclo
    (72) Estatutos -> . Return
    (73) Estatutos -> . Asignacion
    (74) Estatutos -> . Print
    (75) Estatutos -> . Llamada_Func
    (76) Estatutos -> . TurtleMotion
    (77) Condicion -> . IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
    (90) Ciclo -> . For
    (91) Ciclo -> . While
    (92) Ciclo -> . DoWhile
    (83) Return -> . RETURN ExpI SEMICOLON resuelve_return
    (14) Asignacion -> . VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
    (85) Print -> . PRINT LPAREN VAR_STRING RPAREN SEMICOLON
    (86) Print -> . PRINT LPAREN ExpI RPAREN SEMICOLON crea_print
    (88) Llamada_Func -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON vtc_action
    (104) TurtleMotion -> . Position
    (105) TurtleMotion -> . Right
    (106) TurtleMotion -> . Left
    (107) TurtleMotion -> . Forward
    (108) TurtleMotion -> . Circle
    (97) For -> . FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (93) While -> . WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (96) DoWhile -> . DO LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON
    (109) Position -> . VAR_ID POINT POS LPAREN RPAREN SEMICOLON
    (111) Right -> . VAR_ID POINT RIGHT LPAREN ExpI RPAREN SEMICOLON
    (112) Left -> . VAR_ID POINT LEFT LPAREN ExpI RPAREN SEMICOLON
    (110) Forward -> . VAR_ID POINT FORWARD LPAREN ExpI RPAREN SEMICOLON
    (113) Circle -> . VAR_ID POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON

    RBRACKET        reduce using rule 69 (reg_brack -> .)
    IF              shift and go to state 61
    RETURN          shift and go to state 64
    VAR_ID          shift and go to state 66
    PRINT           shift and go to state 53
    FOR             shift and go to state 63
    WHILE           shift and go to state 62
    DO              shift and go to state 57

    Right                          shift and go to state 54
    Llamada_Func                   shift and go to state 47
    Forward                        shift and go to state 55
    Circle                         shift and go to state 46
    Ciclo                          shift and go to state 56
    Return                         shift and go to state 58
    reg_brack                      shift and go to state 93
    DoWhile                        shift and go to state 48
    For                            shift and go to state 49
    Print                          shift and go to state 52
    TurtleMotion                   shift and go to state 69
    While                          shift and go to state 50
    Left                           shift and go to state 59
    Estatutos                      shift and go to state 51
    Condicion                      shift and go to state 67
    Position                       shift and go to state 68
    Asignacion                     shift and go to state 60

state 72

    (68) reg_brack -> Estatutos reg_brack .

    RBRACKET        reduce using rule 68 (reg_brack -> Estatutos reg_brack .)
    RET             reduce using rule 68 (reg_brack -> Estatutos reg_brack .)


state 73

    (85) Print -> PRINT LPAREN . VAR_STRING RPAREN SEMICOLON
    (86) Print -> PRINT LPAREN . ExpI RPAREN SEMICOLON crea_print
    (18) ExpI -> . ExpK resuelve_operadores_relacionales
    (19) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (27) ExpK -> . ExpT resuelve_termino
    (28) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (32) ExpT -> . ExpF resuelve_factor
    (33) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (37) ExpF -> . VAR_CTE
    (38) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (39) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (40) ExpF -> . llama_funcion
    (41) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (42) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (47) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion

    VAR_STRING      shift and go to state 94
    LPAREN          shift and go to state 81
    VAR_ID          shift and go to state 85
    VAR_INT         shift and go to state 83
    VAR_DECIMAL     shift and go to state 86

    ExpK                           shift and go to state 78
    llama_funcion                  shift and go to state 84
    ExpT                           shift and go to state 79
    VAR_CTE                        shift and go to state 80
    ExpF                           shift and go to state 82
    ExpI                           shift and go to state 95

state 74

    (96) DoWhile -> DO LBRACKET . reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON
    (68) reg_brack -> . Estatutos reg_brack
    (69) reg_brack -> .
    (70) Estatutos -> . Condicion
    (71) Estatutos -> . Ciclo
    (72) Estatutos -> . Return
    (73) Estatutos -> . Asignacion
    (74) Estatutos -> . Print
    (75) Estatutos -> . Llamada_Func
    (76) Estatutos -> . TurtleMotion
    (77) Condicion -> . IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
    (90) Ciclo -> . For
    (91) Ciclo -> . While
    (92) Ciclo -> . DoWhile
    (83) Return -> . RETURN ExpI SEMICOLON resuelve_return
    (14) Asignacion -> . VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
    (85) Print -> . PRINT LPAREN VAR_STRING RPAREN SEMICOLON
    (86) Print -> . PRINT LPAREN ExpI RPAREN SEMICOLON crea_print
    (88) Llamada_Func -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON vtc_action
    (104) TurtleMotion -> . Position
    (105) TurtleMotion -> . Right
    (106) TurtleMotion -> . Left
    (107) TurtleMotion -> . Forward
    (108) TurtleMotion -> . Circle
    (97) For -> . FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (93) While -> . WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (96) DoWhile -> . DO LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON
    (109) Position -> . VAR_ID POINT POS LPAREN RPAREN SEMICOLON
    (111) Right -> . VAR_ID POINT RIGHT LPAREN ExpI RPAREN SEMICOLON
    (112) Left -> . VAR_ID POINT LEFT LPAREN ExpI RPAREN SEMICOLON
    (110) Forward -> . VAR_ID POINT FORWARD LPAREN ExpI RPAREN SEMICOLON
    (113) Circle -> . VAR_ID POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON

    RBRACKET        reduce using rule 69 (reg_brack -> .)
    IF              shift and go to state 61
    RETURN          shift and go to state 64
    VAR_ID          shift and go to state 66
    PRINT           shift and go to state 53
    FOR             shift and go to state 63
    WHILE           shift and go to state 62
    DO              shift and go to state 57

    Right                          shift and go to state 54
    Llamada_Func                   shift and go to state 47
    Forward                        shift and go to state 55
    Circle                         shift and go to state 46
    Ciclo                          shift and go to state 56
    Return                         shift and go to state 58
    reg_brack                      shift and go to state 96
    DoWhile                        shift and go to state 48
    For                            shift and go to state 49
    Print                          shift and go to state 52
    TurtleMotion                   shift and go to state 69
    While                          shift and go to state 50
    Left                           shift and go to state 59
    Estatutos                      shift and go to state 51
    Condicion                      shift and go to state 67
    Position                       shift and go to state 68
    Asignacion                     shift and go to state 60

state 75

    (77) Condicion -> IF LPAREN . ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
    (18) ExpI -> . ExpK resuelve_operadores_relacionales
    (19) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (27) ExpK -> . ExpT resuelve_termino
    (28) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (32) ExpT -> . ExpF resuelve_factor
    (33) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (37) ExpF -> . VAR_CTE
    (38) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (39) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (40) ExpF -> . llama_funcion
    (41) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (42) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (47) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion

    LPAREN          shift and go to state 81
    VAR_ID          shift and go to state 85
    VAR_INT         shift and go to state 83
    VAR_DECIMAL     shift and go to state 86

    ExpK                           shift and go to state 78
    llama_funcion                  shift and go to state 84
    ExpT                           shift and go to state 79
    VAR_CTE                        shift and go to state 80
    ExpF                           shift and go to state 82
    ExpI                           shift and go to state 97

state 76

    (93) While -> WHILE guarda_numero_cuadruplo . LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while

    LPAREN          shift and go to state 98


state 77

    (97) For -> FOR LPAREN . VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET

    VAR_ID          shift and go to state 99


state 78

    (18) ExpI -> ExpK . resuelve_operadores_relacionales
    (19) ExpI -> ExpK . Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (26) resuelve_operadores_relacionales -> .
    (20) Operandos -> . LT
    (21) Operandos -> . GT
    (22) Operandos -> . NE
    (23) Operandos -> . LE
    (24) Operandos -> . GE
    (25) Operandos -> . EQ

    SEMICOLON       reduce using rule 26 (resuelve_operadores_relacionales -> .)
    RPAREN          reduce using rule 26 (resuelve_operadores_relacionales -> .)
    SRBRACKET       reduce using rule 26 (resuelve_operadores_relacionales -> .)
    COMMA           reduce using rule 26 (resuelve_operadores_relacionales -> .)
    LT              shift and go to state 101
    GT              shift and go to state 103
    NE              shift and go to state 107
    LE              shift and go to state 106
    GE              shift and go to state 104
    EQ              shift and go to state 105

    resuelve_operadores_relacionales shift and go to state 100
    Operandos                      shift and go to state 102

state 79

    (27) ExpK -> ExpT . resuelve_termino
    (28) ExpK -> ExpT . resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (29) resuelve_termino -> .

    PLUS            reduce using rule 29 (resuelve_termino -> .)
    MINUS           reduce using rule 29 (resuelve_termino -> .)
    LT              reduce using rule 29 (resuelve_termino -> .)
    GT              reduce using rule 29 (resuelve_termino -> .)
    NE              reduce using rule 29 (resuelve_termino -> .)
    LE              reduce using rule 29 (resuelve_termino -> .)
    GE              reduce using rule 29 (resuelve_termino -> .)
    EQ              reduce using rule 29 (resuelve_termino -> .)
    SEMICOLON       reduce using rule 29 (resuelve_termino -> .)
    RPAREN          reduce using rule 29 (resuelve_termino -> .)
    SRBRACKET       reduce using rule 29 (resuelve_termino -> .)
    COMMA           reduce using rule 29 (resuelve_termino -> .)

    resuelve_termino               shift and go to state 108

state 80

    (37) ExpF -> VAR_CTE .

    MULT            reduce using rule 37 (ExpF -> VAR_CTE .)
    DIV             reduce using rule 37 (ExpF -> VAR_CTE .)
    PLUS            reduce using rule 37 (ExpF -> VAR_CTE .)
    MINUS           reduce using rule 37 (ExpF -> VAR_CTE .)
    LT              reduce using rule 37 (ExpF -> VAR_CTE .)
    GT              reduce using rule 37 (ExpF -> VAR_CTE .)
    NE              reduce using rule 37 (ExpF -> VAR_CTE .)
    LE              reduce using rule 37 (ExpF -> VAR_CTE .)
    GE              reduce using rule 37 (ExpF -> VAR_CTE .)
    EQ              reduce using rule 37 (ExpF -> VAR_CTE .)
    SEMICOLON       reduce using rule 37 (ExpF -> VAR_CTE .)
    RPAREN          reduce using rule 37 (ExpF -> VAR_CTE .)
    SRBRACKET       reduce using rule 37 (ExpF -> VAR_CTE .)
    COMMA           reduce using rule 37 (ExpF -> VAR_CTE .)


state 81

    (38) ExpF -> LPAREN . agrega_falso ExpI RPAREN quita_falso
    (45) agrega_falso -> .

    LPAREN          reduce using rule 45 (agrega_falso -> .)
    VAR_ID          reduce using rule 45 (agrega_falso -> .)
    VAR_INT         reduce using rule 45 (agrega_falso -> .)
    VAR_DECIMAL     reduce using rule 45 (agrega_falso -> .)

    agrega_falso                   shift and go to state 109

state 82

    (32) ExpT -> ExpF . resuelve_factor
    (33) ExpT -> ExpF . resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (34) resuelve_factor -> .

    MULT            reduce using rule 34 (resuelve_factor -> .)
    DIV             reduce using rule 34 (resuelve_factor -> .)
    PLUS            reduce using rule 34 (resuelve_factor -> .)
    MINUS           reduce using rule 34 (resuelve_factor -> .)
    LT              reduce using rule 34 (resuelve_factor -> .)
    GT              reduce using rule 34 (resuelve_factor -> .)
    NE              reduce using rule 34 (resuelve_factor -> .)
    LE              reduce using rule 34 (resuelve_factor -> .)
    GE              reduce using rule 34 (resuelve_factor -> .)
    EQ              reduce using rule 34 (resuelve_factor -> .)
    SEMICOLON       reduce using rule 34 (resuelve_factor -> .)
    RPAREN          reduce using rule 34 (resuelve_factor -> .)
    SRBRACKET       reduce using rule 34 (resuelve_factor -> .)
    COMMA           reduce using rule 34 (resuelve_factor -> .)

    resuelve_factor                shift and go to state 110

state 83

    (41) VAR_CTE -> VAR_INT . push_int_PilaOperandos
    (43) push_int_PilaOperandos -> .

    MULT            reduce using rule 43 (push_int_PilaOperandos -> .)
    DIV             reduce using rule 43 (push_int_PilaOperandos -> .)
    PLUS            reduce using rule 43 (push_int_PilaOperandos -> .)
    MINUS           reduce using rule 43 (push_int_PilaOperandos -> .)
    LT              reduce using rule 43 (push_int_PilaOperandos -> .)
    GT              reduce using rule 43 (push_int_PilaOperandos -> .)
    NE              reduce using rule 43 (push_int_PilaOperandos -> .)
    LE              reduce using rule 43 (push_int_PilaOperandos -> .)
    GE              reduce using rule 43 (push_int_PilaOperandos -> .)
    EQ              reduce using rule 43 (push_int_PilaOperandos -> .)
    SEMICOLON       reduce using rule 43 (push_int_PilaOperandos -> .)
    RPAREN          reduce using rule 43 (push_int_PilaOperandos -> .)
    SRBRACKET       reduce using rule 43 (push_int_PilaOperandos -> .)
    COMMA           reduce using rule 43 (push_int_PilaOperandos -> .)

    push_int_PilaOperandos         shift and go to state 111

state 84

    (40) ExpF -> llama_funcion .

    MULT            reduce using rule 40 (ExpF -> llama_funcion .)
    DIV             reduce using rule 40 (ExpF -> llama_funcion .)
    PLUS            reduce using rule 40 (ExpF -> llama_funcion .)
    MINUS           reduce using rule 40 (ExpF -> llama_funcion .)
    LT              reduce using rule 40 (ExpF -> llama_funcion .)
    GT              reduce using rule 40 (ExpF -> llama_funcion .)
    NE              reduce using rule 40 (ExpF -> llama_funcion .)
    LE              reduce using rule 40 (ExpF -> llama_funcion .)
    GE              reduce using rule 40 (ExpF -> llama_funcion .)
    EQ              reduce using rule 40 (ExpF -> llama_funcion .)
    SEMICOLON       reduce using rule 40 (ExpF -> llama_funcion .)
    RPAREN          reduce using rule 40 (ExpF -> llama_funcion .)
    SRBRACKET       reduce using rule 40 (ExpF -> llama_funcion .)
    COMMA           reduce using rule 40 (ExpF -> llama_funcion .)


state 85

    (39) ExpF -> VAR_ID . push_var_PilaOperandos pos_arreglo
    (47) llama_funcion -> VAR_ID . LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (15) push_var_PilaOperandos -> .

    LPAREN          shift and go to state 112
    SLBRACKET       reduce using rule 15 (push_var_PilaOperandos -> .)
    MULT            reduce using rule 15 (push_var_PilaOperandos -> .)
    DIV             reduce using rule 15 (push_var_PilaOperandos -> .)
    PLUS            reduce using rule 15 (push_var_PilaOperandos -> .)
    MINUS           reduce using rule 15 (push_var_PilaOperandos -> .)
    LT              reduce using rule 15 (push_var_PilaOperandos -> .)
    GT              reduce using rule 15 (push_var_PilaOperandos -> .)
    NE              reduce using rule 15 (push_var_PilaOperandos -> .)
    LE              reduce using rule 15 (push_var_PilaOperandos -> .)
    GE              reduce using rule 15 (push_var_PilaOperandos -> .)
    EQ              reduce using rule 15 (push_var_PilaOperandos -> .)
    SEMICOLON       reduce using rule 15 (push_var_PilaOperandos -> .)
    RPAREN          reduce using rule 15 (push_var_PilaOperandos -> .)
    SRBRACKET       reduce using rule 15 (push_var_PilaOperandos -> .)
    COMMA           reduce using rule 15 (push_var_PilaOperandos -> .)

    push_var_PilaOperandos         shift and go to state 113

state 86

    (42) VAR_CTE -> VAR_DECIMAL . push_decimal_PilaOperandos
    (44) push_decimal_PilaOperandos -> .

    MULT            reduce using rule 44 (push_decimal_PilaOperandos -> .)
    DIV             reduce using rule 44 (push_decimal_PilaOperandos -> .)
    PLUS            reduce using rule 44 (push_decimal_PilaOperandos -> .)
    MINUS           reduce using rule 44 (push_decimal_PilaOperandos -> .)
    LT              reduce using rule 44 (push_decimal_PilaOperandos -> .)
    GT              reduce using rule 44 (push_decimal_PilaOperandos -> .)
    NE              reduce using rule 44 (push_decimal_PilaOperandos -> .)
    LE              reduce using rule 44 (push_decimal_PilaOperandos -> .)
    GE              reduce using rule 44 (push_decimal_PilaOperandos -> .)
    EQ              reduce using rule 44 (push_decimal_PilaOperandos -> .)
    SEMICOLON       reduce using rule 44 (push_decimal_PilaOperandos -> .)
    RPAREN          reduce using rule 44 (push_decimal_PilaOperandos -> .)
    SRBRACKET       reduce using rule 44 (push_decimal_PilaOperandos -> .)
    COMMA           reduce using rule 44 (push_decimal_PilaOperandos -> .)

    push_decimal_PilaOperandos     shift and go to state 114

state 87

    (83) Return -> RETURN ExpI . SEMICOLON resuelve_return

    SEMICOLON       shift and go to state 115


state 88

    (114) Main -> MAIN agrega_main_funcion LPAREN RPAREN LBRACKET Vars reg_brack RET . ZERO SEMICOLON RBRACKET

    ZERO            shift and go to state 116


state 89

    (109) Position -> VAR_ID POINT . POS LPAREN RPAREN SEMICOLON
    (111) Right -> VAR_ID POINT . RIGHT LPAREN ExpI RPAREN SEMICOLON
    (112) Left -> VAR_ID POINT . LEFT LPAREN ExpI RPAREN SEMICOLON
    (110) Forward -> VAR_ID POINT . FORWARD LPAREN ExpI RPAREN SEMICOLON
    (113) Circle -> VAR_ID POINT . CIRCLE LPAREN ExpI RPAREN SEMICOLON

    POS             shift and go to state 121
    RIGHT           shift and go to state 120
    LEFT            shift and go to state 118
    FORWARD         shift and go to state 117
    CIRCLE          shift and go to state 119


state 90

    (14) Asignacion -> VAR_ID push_var_PilaOperandos . ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion

    ASSIGN          shift and go to state 122


state 91

    (88) Llamada_Func -> VAR_ID LPAREN . agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON vtc_action
    (45) agrega_falso -> .

    LPAREN          reduce using rule 45 (agrega_falso -> .)
    VAR_ID          reduce using rule 45 (agrega_falso -> .)
    VAR_INT         reduce using rule 45 (agrega_falso -> .)
    VAR_DECIMAL     reduce using rule 45 (agrega_falso -> .)
    RPAREN          reduce using rule 45 (agrega_falso -> .)

    agrega_falso                   shift and go to state 123

state 92

    (64) pos_commaf -> COMMA Tipo VAR_ID pos_commaf .

    RPAREN          reduce using rule 64 (pos_commaf -> COMMA Tipo VAR_ID pos_commaf .)


state 93

    (58) funciones -> FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack . RBRACKET fin_func_quad funciones

    RBRACKET        shift and go to state 124


state 94

    (85) Print -> PRINT LPAREN VAR_STRING . RPAREN SEMICOLON

    RPAREN          shift and go to state 125


state 95

    (86) Print -> PRINT LPAREN ExpI . RPAREN SEMICOLON crea_print

    RPAREN          shift and go to state 126


state 96

    (96) DoWhile -> DO LBRACKET reg_brack . RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON

    RBRACKET        shift and go to state 127


state 97

    (77) Condicion -> IF LPAREN ExpI . RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if

    RPAREN          shift and go to state 128


state 98

    (93) While -> WHILE guarda_numero_cuadruplo LPAREN . ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (18) ExpI -> . ExpK resuelve_operadores_relacionales
    (19) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (27) ExpK -> . ExpT resuelve_termino
    (28) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (32) ExpT -> . ExpF resuelve_factor
    (33) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (37) ExpF -> . VAR_CTE
    (38) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (39) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (40) ExpF -> . llama_funcion
    (41) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (42) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (47) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion

    LPAREN          shift and go to state 81
    VAR_ID          shift and go to state 85
    VAR_INT         shift and go to state 83
    VAR_DECIMAL     shift and go to state 86

    ExpK                           shift and go to state 78
    llama_funcion                  shift and go to state 84
    ExpT                           shift and go to state 79
    VAR_CTE                        shift and go to state 80
    ExpF                           shift and go to state 82
    ExpI                           shift and go to state 129

state 99

    (97) For -> FOR LPAREN VAR_ID . ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET

    ASSIGN          shift and go to state 130


state 100

    (18) ExpI -> ExpK resuelve_operadores_relacionales .

    RPAREN          reduce using rule 18 (ExpI -> ExpK resuelve_operadores_relacionales .)
    COMMA           reduce using rule 18 (ExpI -> ExpK resuelve_operadores_relacionales .)
    SEMICOLON       reduce using rule 18 (ExpI -> ExpK resuelve_operadores_relacionales .)
    SRBRACKET       reduce using rule 18 (ExpI -> ExpK resuelve_operadores_relacionales .)


state 101

    (20) Operandos -> LT .

    LPAREN          reduce using rule 20 (Operandos -> LT .)
    VAR_ID          reduce using rule 20 (Operandos -> LT .)
    VAR_INT         reduce using rule 20 (Operandos -> LT .)
    VAR_DECIMAL     reduce using rule 20 (Operandos -> LT .)


state 102

    (19) ExpI -> ExpK Operandos . push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (16) push_operador_PilaOperadores -> .

    LPAREN          reduce using rule 16 (push_operador_PilaOperadores -> .)
    VAR_ID          reduce using rule 16 (push_operador_PilaOperadores -> .)
    VAR_INT         reduce using rule 16 (push_operador_PilaOperadores -> .)
    VAR_DECIMAL     reduce using rule 16 (push_operador_PilaOperadores -> .)

    push_operador_PilaOperadores   shift and go to state 131

state 103

    (21) Operandos -> GT .

    LPAREN          reduce using rule 21 (Operandos -> GT .)
    VAR_ID          reduce using rule 21 (Operandos -> GT .)
    VAR_INT         reduce using rule 21 (Operandos -> GT .)
    VAR_DECIMAL     reduce using rule 21 (Operandos -> GT .)


state 104

    (24) Operandos -> GE .

    LPAREN          reduce using rule 24 (Operandos -> GE .)
    VAR_ID          reduce using rule 24 (Operandos -> GE .)
    VAR_INT         reduce using rule 24 (Operandos -> GE .)
    VAR_DECIMAL     reduce using rule 24 (Operandos -> GE .)


state 105

    (25) Operandos -> EQ .

    LPAREN          reduce using rule 25 (Operandos -> EQ .)
    VAR_ID          reduce using rule 25 (Operandos -> EQ .)
    VAR_INT         reduce using rule 25 (Operandos -> EQ .)
    VAR_DECIMAL     reduce using rule 25 (Operandos -> EQ .)


state 106

    (23) Operandos -> LE .

    LPAREN          reduce using rule 23 (Operandos -> LE .)
    VAR_ID          reduce using rule 23 (Operandos -> LE .)
    VAR_INT         reduce using rule 23 (Operandos -> LE .)
    VAR_DECIMAL     reduce using rule 23 (Operandos -> LE .)


state 107

    (22) Operandos -> NE .

    LPAREN          reduce using rule 22 (Operandos -> NE .)
    VAR_ID          reduce using rule 22 (Operandos -> NE .)
    VAR_INT         reduce using rule 22 (Operandos -> NE .)
    VAR_DECIMAL     reduce using rule 22 (Operandos -> NE .)


state 108

    (27) ExpK -> ExpT resuelve_termino .
    (28) ExpK -> ExpT resuelve_termino . pos_SUMRES push_operador_PilaOperadores ExpK
    (30) pos_SUMRES -> . PLUS
    (31) pos_SUMRES -> . MINUS

    LT              reduce using rule 27 (ExpK -> ExpT resuelve_termino .)
    GT              reduce using rule 27 (ExpK -> ExpT resuelve_termino .)
    NE              reduce using rule 27 (ExpK -> ExpT resuelve_termino .)
    LE              reduce using rule 27 (ExpK -> ExpT resuelve_termino .)
    GE              reduce using rule 27 (ExpK -> ExpT resuelve_termino .)
    EQ              reduce using rule 27 (ExpK -> ExpT resuelve_termino .)
    COMMA           reduce using rule 27 (ExpK -> ExpT resuelve_termino .)
    RPAREN          reduce using rule 27 (ExpK -> ExpT resuelve_termino .)
    SEMICOLON       reduce using rule 27 (ExpK -> ExpT resuelve_termino .)
    SRBRACKET       reduce using rule 27 (ExpK -> ExpT resuelve_termino .)
    PLUS            shift and go to state 134
    MINUS           shift and go to state 133

    pos_SUMRES                     shift and go to state 132

state 109

    (38) ExpF -> LPAREN agrega_falso . ExpI RPAREN quita_falso
    (18) ExpI -> . ExpK resuelve_operadores_relacionales
    (19) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (27) ExpK -> . ExpT resuelve_termino
    (28) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (32) ExpT -> . ExpF resuelve_factor
    (33) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (37) ExpF -> . VAR_CTE
    (38) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (39) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (40) ExpF -> . llama_funcion
    (41) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (42) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (47) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion

    LPAREN          shift and go to state 81
    VAR_ID          shift and go to state 85
    VAR_INT         shift and go to state 83
    VAR_DECIMAL     shift and go to state 86

    ExpK                           shift and go to state 78
    llama_funcion                  shift and go to state 84
    ExpT                           shift and go to state 79
    VAR_CTE                        shift and go to state 80
    ExpF                           shift and go to state 82
    ExpI                           shift and go to state 135

state 110

    (32) ExpT -> ExpF resuelve_factor .
    (33) ExpT -> ExpF resuelve_factor . pos_MULTDIV push_operador_PilaOperadores ExpT
    (35) pos_MULTDIV -> . MULT
    (36) pos_MULTDIV -> . DIV

    PLUS            reduce using rule 32 (ExpT -> ExpF resuelve_factor .)
    MINUS           reduce using rule 32 (ExpT -> ExpF resuelve_factor .)
    LT              reduce using rule 32 (ExpT -> ExpF resuelve_factor .)
    GT              reduce using rule 32 (ExpT -> ExpF resuelve_factor .)
    NE              reduce using rule 32 (ExpT -> ExpF resuelve_factor .)
    LE              reduce using rule 32 (ExpT -> ExpF resuelve_factor .)
    GE              reduce using rule 32 (ExpT -> ExpF resuelve_factor .)
    EQ              reduce using rule 32 (ExpT -> ExpF resuelve_factor .)
    RPAREN          reduce using rule 32 (ExpT -> ExpF resuelve_factor .)
    COMMA           reduce using rule 32 (ExpT -> ExpF resuelve_factor .)
    SEMICOLON       reduce using rule 32 (ExpT -> ExpF resuelve_factor .)
    SRBRACKET       reduce using rule 32 (ExpT -> ExpF resuelve_factor .)
    MULT            shift and go to state 137
    DIV             shift and go to state 136

    pos_MULTDIV                    shift and go to state 138

state 111

    (41) VAR_CTE -> VAR_INT push_int_PilaOperandos .

    MULT            reduce using rule 41 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    DIV             reduce using rule 41 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    PLUS            reduce using rule 41 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    MINUS           reduce using rule 41 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    LT              reduce using rule 41 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    GT              reduce using rule 41 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    NE              reduce using rule 41 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    LE              reduce using rule 41 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    GE              reduce using rule 41 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    EQ              reduce using rule 41 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    SEMICOLON       reduce using rule 41 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    RPAREN          reduce using rule 41 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    SRBRACKET       reduce using rule 41 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)
    COMMA           reduce using rule 41 (VAR_CTE -> VAR_INT push_int_PilaOperandos .)


state 112

    (47) llama_funcion -> VAR_ID LPAREN . agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (45) agrega_falso -> .

    LPAREN          reduce using rule 45 (agrega_falso -> .)
    VAR_ID          reduce using rule 45 (agrega_falso -> .)
    VAR_INT         reduce using rule 45 (agrega_falso -> .)
    VAR_DECIMAL     reduce using rule 45 (agrega_falso -> .)
    RPAREN          reduce using rule 45 (agrega_falso -> .)

    agrega_falso                   shift and go to state 139

state 113

    (39) ExpF -> VAR_ID push_var_PilaOperandos . pos_arreglo
    (56) pos_arreglo -> . SLBRACKET ExpI SRBRACKET
    (57) pos_arreglo -> .

    SLBRACKET       shift and go to state 141
    MULT            reduce using rule 57 (pos_arreglo -> .)
    DIV             reduce using rule 57 (pos_arreglo -> .)
    PLUS            reduce using rule 57 (pos_arreglo -> .)
    MINUS           reduce using rule 57 (pos_arreglo -> .)
    LT              reduce using rule 57 (pos_arreglo -> .)
    GT              reduce using rule 57 (pos_arreglo -> .)
    NE              reduce using rule 57 (pos_arreglo -> .)
    LE              reduce using rule 57 (pos_arreglo -> .)
    GE              reduce using rule 57 (pos_arreglo -> .)
    EQ              reduce using rule 57 (pos_arreglo -> .)
    SEMICOLON       reduce using rule 57 (pos_arreglo -> .)
    RPAREN          reduce using rule 57 (pos_arreglo -> .)
    SRBRACKET       reduce using rule 57 (pos_arreglo -> .)
    COMMA           reduce using rule 57 (pos_arreglo -> .)

    pos_arreglo                    shift and go to state 140

state 114

    (42) VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .

    MULT            reduce using rule 42 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    DIV             reduce using rule 42 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    PLUS            reduce using rule 42 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    MINUS           reduce using rule 42 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    LT              reduce using rule 42 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    GT              reduce using rule 42 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    NE              reduce using rule 42 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    LE              reduce using rule 42 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    GE              reduce using rule 42 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    EQ              reduce using rule 42 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    SEMICOLON       reduce using rule 42 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    RPAREN          reduce using rule 42 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    SRBRACKET       reduce using rule 42 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)
    COMMA           reduce using rule 42 (VAR_CTE -> VAR_DECIMAL push_decimal_PilaOperandos .)


state 115

    (83) Return -> RETURN ExpI SEMICOLON . resuelve_return
    (84) resuelve_return -> .

    IF              reduce using rule 84 (resuelve_return -> .)
    RETURN          reduce using rule 84 (resuelve_return -> .)
    VAR_ID          reduce using rule 84 (resuelve_return -> .)
    PRINT           reduce using rule 84 (resuelve_return -> .)
    FOR             reduce using rule 84 (resuelve_return -> .)
    WHILE           reduce using rule 84 (resuelve_return -> .)
    DO              reduce using rule 84 (resuelve_return -> .)
    RET             reduce using rule 84 (resuelve_return -> .)
    RBRACKET        reduce using rule 84 (resuelve_return -> .)

    resuelve_return                shift and go to state 142

state 116

    (114) Main -> MAIN agrega_main_funcion LPAREN RPAREN LBRACKET Vars reg_brack RET ZERO . SEMICOLON RBRACKET

    SEMICOLON       shift and go to state 143


state 117

    (110) Forward -> VAR_ID POINT FORWARD . LPAREN ExpI RPAREN SEMICOLON

    LPAREN          shift and go to state 144


state 118

    (112) Left -> VAR_ID POINT LEFT . LPAREN ExpI RPAREN SEMICOLON

    LPAREN          shift and go to state 145


state 119

    (113) Circle -> VAR_ID POINT CIRCLE . LPAREN ExpI RPAREN SEMICOLON

    LPAREN          shift and go to state 146


state 120

    (111) Right -> VAR_ID POINT RIGHT . LPAREN ExpI RPAREN SEMICOLON

    LPAREN          shift and go to state 147


state 121

    (109) Position -> VAR_ID POINT POS . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 148


state 122

    (14) Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN . push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
    (16) push_operador_PilaOperadores -> .

    LPAREN          reduce using rule 16 (push_operador_PilaOperadores -> .)
    VAR_ID          reduce using rule 16 (push_operador_PilaOperadores -> .)
    VAR_INT         reduce using rule 16 (push_operador_PilaOperadores -> .)
    VAR_DECIMAL     reduce using rule 16 (push_operador_PilaOperadores -> .)

    push_operador_PilaOperadores   shift and go to state 149

state 123

    (88) Llamada_Func -> VAR_ID LPAREN agrega_falso . checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON vtc_action
    (48) checa_funcion_si_existe -> .

    LPAREN          reduce using rule 48 (checa_funcion_si_existe -> .)
    VAR_ID          reduce using rule 48 (checa_funcion_si_existe -> .)
    VAR_INT         reduce using rule 48 (checa_funcion_si_existe -> .)
    VAR_DECIMAL     reduce using rule 48 (checa_funcion_si_existe -> .)
    RPAREN          reduce using rule 48 (checa_funcion_si_existe -> .)

    checa_funcion_si_existe        shift and go to state 150

state 124

    (58) funciones -> FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET . fin_func_quad funciones
    (67) fin_func_quad -> .

    FUNC            reduce using rule 67 (fin_func_quad -> .)
    MAIN            reduce using rule 67 (fin_func_quad -> .)

    fin_func_quad                  shift and go to state 151

state 125

    (85) Print -> PRINT LPAREN VAR_STRING RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 152


state 126

    (86) Print -> PRINT LPAREN ExpI RPAREN . SEMICOLON crea_print

    SEMICOLON       shift and go to state 153


state 127

    (96) DoWhile -> DO LBRACKET reg_brack RBRACKET . WHILE LPAREN ExpI RPAREN SEMICOLON

    WHILE           shift and go to state 154


state 128

    (77) Condicion -> IF LPAREN ExpI RPAREN . crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
    (78) crea_GOTOF -> .

    LBRACKET        reduce using rule 78 (crea_GOTOF -> .)

    crea_GOTOF                     shift and go to state 155

state 129

    (93) While -> WHILE guarda_numero_cuadruplo LPAREN ExpI . RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while

    RPAREN          shift and go to state 156


state 130

    (97) For -> FOR LPAREN VAR_ID ASSIGN . ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (18) ExpI -> . ExpK resuelve_operadores_relacionales
    (19) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (27) ExpK -> . ExpT resuelve_termino
    (28) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (32) ExpT -> . ExpF resuelve_factor
    (33) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (37) ExpF -> . VAR_CTE
    (38) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (39) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (40) ExpF -> . llama_funcion
    (41) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (42) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (47) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion

    LPAREN          shift and go to state 81
    VAR_ID          shift and go to state 85
    VAR_INT         shift and go to state 83
    VAR_DECIMAL     shift and go to state 86

    ExpK                           shift and go to state 78
    llama_funcion                  shift and go to state 84
    ExpT                           shift and go to state 79
    VAR_CTE                        shift and go to state 80
    ExpF                           shift and go to state 82
    ExpI                           shift and go to state 157

state 131

    (19) ExpI -> ExpK Operandos push_operador_PilaOperadores . ExpK resuelve_operadores_relacionales
    (27) ExpK -> . ExpT resuelve_termino
    (28) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (32) ExpT -> . ExpF resuelve_factor
    (33) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (37) ExpF -> . VAR_CTE
    (38) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (39) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (40) ExpF -> . llama_funcion
    (41) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (42) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (47) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion

    LPAREN          shift and go to state 81
    VAR_ID          shift and go to state 85
    VAR_INT         shift and go to state 83
    VAR_DECIMAL     shift and go to state 86

    ExpK                           shift and go to state 158
    llama_funcion                  shift and go to state 84
    ExpT                           shift and go to state 79
    VAR_CTE                        shift and go to state 80
    ExpF                           shift and go to state 82

state 132

    (28) ExpK -> ExpT resuelve_termino pos_SUMRES . push_operador_PilaOperadores ExpK
    (16) push_operador_PilaOperadores -> .

    LPAREN          reduce using rule 16 (push_operador_PilaOperadores -> .)
    VAR_ID          reduce using rule 16 (push_operador_PilaOperadores -> .)
    VAR_INT         reduce using rule 16 (push_operador_PilaOperadores -> .)
    VAR_DECIMAL     reduce using rule 16 (push_operador_PilaOperadores -> .)

    push_operador_PilaOperadores   shift and go to state 159

state 133

    (31) pos_SUMRES -> MINUS .

    LPAREN          reduce using rule 31 (pos_SUMRES -> MINUS .)
    VAR_ID          reduce using rule 31 (pos_SUMRES -> MINUS .)
    VAR_INT         reduce using rule 31 (pos_SUMRES -> MINUS .)
    VAR_DECIMAL     reduce using rule 31 (pos_SUMRES -> MINUS .)


state 134

    (30) pos_SUMRES -> PLUS .

    LPAREN          reduce using rule 30 (pos_SUMRES -> PLUS .)
    VAR_ID          reduce using rule 30 (pos_SUMRES -> PLUS .)
    VAR_INT         reduce using rule 30 (pos_SUMRES -> PLUS .)
    VAR_DECIMAL     reduce using rule 30 (pos_SUMRES -> PLUS .)


state 135

    (38) ExpF -> LPAREN agrega_falso ExpI . RPAREN quita_falso

    RPAREN          shift and go to state 160


state 136

    (36) pos_MULTDIV -> DIV .

    LPAREN          reduce using rule 36 (pos_MULTDIV -> DIV .)
    VAR_ID          reduce using rule 36 (pos_MULTDIV -> DIV .)
    VAR_INT         reduce using rule 36 (pos_MULTDIV -> DIV .)
    VAR_DECIMAL     reduce using rule 36 (pos_MULTDIV -> DIV .)


state 137

    (35) pos_MULTDIV -> MULT .

    LPAREN          reduce using rule 35 (pos_MULTDIV -> MULT .)
    VAR_ID          reduce using rule 35 (pos_MULTDIV -> MULT .)
    VAR_INT         reduce using rule 35 (pos_MULTDIV -> MULT .)
    VAR_DECIMAL     reduce using rule 35 (pos_MULTDIV -> MULT .)


state 138

    (33) ExpT -> ExpF resuelve_factor pos_MULTDIV . push_operador_PilaOperadores ExpT
    (16) push_operador_PilaOperadores -> .

    LPAREN          reduce using rule 16 (push_operador_PilaOperadores -> .)
    VAR_ID          reduce using rule 16 (push_operador_PilaOperadores -> .)
    VAR_INT         reduce using rule 16 (push_operador_PilaOperadores -> .)
    VAR_DECIMAL     reduce using rule 16 (push_operador_PilaOperadores -> .)

    push_operador_PilaOperadores   shift and go to state 161

state 139

    (47) llama_funcion -> VAR_ID LPAREN agrega_falso . checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (48) checa_funcion_si_existe -> .

    LPAREN          reduce using rule 48 (checa_funcion_si_existe -> .)
    VAR_ID          reduce using rule 48 (checa_funcion_si_existe -> .)
    VAR_INT         reduce using rule 48 (checa_funcion_si_existe -> .)
    VAR_DECIMAL     reduce using rule 48 (checa_funcion_si_existe -> .)
    RPAREN          reduce using rule 48 (checa_funcion_si_existe -> .)

    checa_funcion_si_existe        shift and go to state 162

state 140

    (39) ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .

    MULT            reduce using rule 39 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    DIV             reduce using rule 39 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    PLUS            reduce using rule 39 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    MINUS           reduce using rule 39 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    LT              reduce using rule 39 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    GT              reduce using rule 39 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    NE              reduce using rule 39 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    LE              reduce using rule 39 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    GE              reduce using rule 39 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    EQ              reduce using rule 39 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    SEMICOLON       reduce using rule 39 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    RPAREN          reduce using rule 39 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    SRBRACKET       reduce using rule 39 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)
    COMMA           reduce using rule 39 (ExpF -> VAR_ID push_var_PilaOperandos pos_arreglo .)


state 141

    (56) pos_arreglo -> SLBRACKET . ExpI SRBRACKET
    (18) ExpI -> . ExpK resuelve_operadores_relacionales
    (19) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (27) ExpK -> . ExpT resuelve_termino
    (28) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (32) ExpT -> . ExpF resuelve_factor
    (33) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (37) ExpF -> . VAR_CTE
    (38) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (39) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (40) ExpF -> . llama_funcion
    (41) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (42) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (47) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion

    LPAREN          shift and go to state 81
    VAR_ID          shift and go to state 85
    VAR_INT         shift and go to state 83
    VAR_DECIMAL     shift and go to state 86

    ExpK                           shift and go to state 78
    llama_funcion                  shift and go to state 84
    ExpT                           shift and go to state 79
    VAR_CTE                        shift and go to state 80
    ExpF                           shift and go to state 82
    ExpI                           shift and go to state 163

state 142

    (83) Return -> RETURN ExpI SEMICOLON resuelve_return .

    IF              reduce using rule 83 (Return -> RETURN ExpI SEMICOLON resuelve_return .)
    RETURN          reduce using rule 83 (Return -> RETURN ExpI SEMICOLON resuelve_return .)
    VAR_ID          reduce using rule 83 (Return -> RETURN ExpI SEMICOLON resuelve_return .)
    PRINT           reduce using rule 83 (Return -> RETURN ExpI SEMICOLON resuelve_return .)
    FOR             reduce using rule 83 (Return -> RETURN ExpI SEMICOLON resuelve_return .)
    WHILE           reduce using rule 83 (Return -> RETURN ExpI SEMICOLON resuelve_return .)
    DO              reduce using rule 83 (Return -> RETURN ExpI SEMICOLON resuelve_return .)
    RBRACKET        reduce using rule 83 (Return -> RETURN ExpI SEMICOLON resuelve_return .)
    RET             reduce using rule 83 (Return -> RETURN ExpI SEMICOLON resuelve_return .)


state 143

    (114) Main -> MAIN agrega_main_funcion LPAREN RPAREN LBRACKET Vars reg_brack RET ZERO SEMICOLON . RBRACKET

    RBRACKET        shift and go to state 164


state 144

    (110) Forward -> VAR_ID POINT FORWARD LPAREN . ExpI RPAREN SEMICOLON
    (18) ExpI -> . ExpK resuelve_operadores_relacionales
    (19) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (27) ExpK -> . ExpT resuelve_termino
    (28) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (32) ExpT -> . ExpF resuelve_factor
    (33) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (37) ExpF -> . VAR_CTE
    (38) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (39) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (40) ExpF -> . llama_funcion
    (41) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (42) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (47) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion

    LPAREN          shift and go to state 81
    VAR_ID          shift and go to state 85
    VAR_INT         shift and go to state 83
    VAR_DECIMAL     shift and go to state 86

    ExpK                           shift and go to state 78
    llama_funcion                  shift and go to state 84
    ExpT                           shift and go to state 79
    VAR_CTE                        shift and go to state 80
    ExpF                           shift and go to state 82
    ExpI                           shift and go to state 165

state 145

    (112) Left -> VAR_ID POINT LEFT LPAREN . ExpI RPAREN SEMICOLON
    (18) ExpI -> . ExpK resuelve_operadores_relacionales
    (19) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (27) ExpK -> . ExpT resuelve_termino
    (28) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (32) ExpT -> . ExpF resuelve_factor
    (33) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (37) ExpF -> . VAR_CTE
    (38) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (39) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (40) ExpF -> . llama_funcion
    (41) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (42) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (47) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion

    LPAREN          shift and go to state 81
    VAR_ID          shift and go to state 85
    VAR_INT         shift and go to state 83
    VAR_DECIMAL     shift and go to state 86

    ExpK                           shift and go to state 78
    llama_funcion                  shift and go to state 84
    ExpT                           shift and go to state 79
    VAR_CTE                        shift and go to state 80
    ExpF                           shift and go to state 82
    ExpI                           shift and go to state 166

state 146

    (113) Circle -> VAR_ID POINT CIRCLE LPAREN . ExpI RPAREN SEMICOLON
    (18) ExpI -> . ExpK resuelve_operadores_relacionales
    (19) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (27) ExpK -> . ExpT resuelve_termino
    (28) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (32) ExpT -> . ExpF resuelve_factor
    (33) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (37) ExpF -> . VAR_CTE
    (38) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (39) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (40) ExpF -> . llama_funcion
    (41) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (42) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (47) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion

    LPAREN          shift and go to state 81
    VAR_ID          shift and go to state 85
    VAR_INT         shift and go to state 83
    VAR_DECIMAL     shift and go to state 86

    ExpK                           shift and go to state 78
    llama_funcion                  shift and go to state 84
    ExpT                           shift and go to state 79
    VAR_CTE                        shift and go to state 80
    ExpF                           shift and go to state 82
    ExpI                           shift and go to state 167

state 147

    (111) Right -> VAR_ID POINT RIGHT LPAREN . ExpI RPAREN SEMICOLON
    (18) ExpI -> . ExpK resuelve_operadores_relacionales
    (19) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (27) ExpK -> . ExpT resuelve_termino
    (28) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (32) ExpT -> . ExpF resuelve_factor
    (33) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (37) ExpF -> . VAR_CTE
    (38) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (39) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (40) ExpF -> . llama_funcion
    (41) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (42) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (47) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion

    LPAREN          shift and go to state 81
    VAR_ID          shift and go to state 85
    VAR_INT         shift and go to state 83
    VAR_DECIMAL     shift and go to state 86

    ExpK                           shift and go to state 78
    llama_funcion                  shift and go to state 84
    ExpT                           shift and go to state 79
    VAR_CTE                        shift and go to state 80
    ExpF                           shift and go to state 82
    ExpI                           shift and go to state 168

state 148

    (109) Position -> VAR_ID POINT POS LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 169


state 149

    (14) Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores . ExpI SEMICOLON resuelve_asignacion
    (18) ExpI -> . ExpK resuelve_operadores_relacionales
    (19) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (27) ExpK -> . ExpT resuelve_termino
    (28) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (32) ExpT -> . ExpF resuelve_factor
    (33) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (37) ExpF -> . VAR_CTE
    (38) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (39) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (40) ExpF -> . llama_funcion
    (41) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (42) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (47) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion

    LPAREN          shift and go to state 81
    VAR_ID          shift and go to state 85
    VAR_INT         shift and go to state 83
    VAR_DECIMAL     shift and go to state 86

    ExpK                           shift and go to state 78
    llama_funcion                  shift and go to state 84
    ExpT                           shift and go to state 79
    VAR_CTE                        shift and go to state 80
    ExpF                           shift and go to state 82
    ExpI                           shift and go to state 170

state 150

    (88) Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe . argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON vtc_action
    (49) argumentos -> . ExpI resuelve_argumentos mas_argumentos
    (50) argumentos -> .
    (18) ExpI -> . ExpK resuelve_operadores_relacionales
    (19) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (27) ExpK -> . ExpT resuelve_termino
    (28) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (32) ExpT -> . ExpF resuelve_factor
    (33) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (37) ExpF -> . VAR_CTE
    (38) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (39) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (40) ExpF -> . llama_funcion
    (41) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (42) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (47) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion

    RPAREN          reduce using rule 50 (argumentos -> .)
    LPAREN          shift and go to state 81
    VAR_ID          shift and go to state 85
    VAR_INT         shift and go to state 83
    VAR_DECIMAL     shift and go to state 86

    ExpK                           shift and go to state 78
    ExpT                           shift and go to state 79
    VAR_CTE                        shift and go to state 80
    argumentos                     shift and go to state 171
    ExpF                           shift and go to state 82
    llama_funcion                  shift and go to state 84
    ExpI                           shift and go to state 172

state 151

    (58) funciones -> FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_quad . funciones
    (58) funciones -> . FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_quad funciones
    (59) funciones -> .

    FUNC            shift and go to state 15
    MAIN            reduce using rule 59 (funciones -> .)

    funciones                      shift and go to state 173

state 152

    (85) Print -> PRINT LPAREN VAR_STRING RPAREN SEMICOLON .

    IF              reduce using rule 85 (Print -> PRINT LPAREN VAR_STRING RPAREN SEMICOLON .)
    RETURN          reduce using rule 85 (Print -> PRINT LPAREN VAR_STRING RPAREN SEMICOLON .)
    VAR_ID          reduce using rule 85 (Print -> PRINT LPAREN VAR_STRING RPAREN SEMICOLON .)
    PRINT           reduce using rule 85 (Print -> PRINT LPAREN VAR_STRING RPAREN SEMICOLON .)
    FOR             reduce using rule 85 (Print -> PRINT LPAREN VAR_STRING RPAREN SEMICOLON .)
    WHILE           reduce using rule 85 (Print -> PRINT LPAREN VAR_STRING RPAREN SEMICOLON .)
    DO              reduce using rule 85 (Print -> PRINT LPAREN VAR_STRING RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 85 (Print -> PRINT LPAREN VAR_STRING RPAREN SEMICOLON .)
    RET             reduce using rule 85 (Print -> PRINT LPAREN VAR_STRING RPAREN SEMICOLON .)


state 153

    (86) Print -> PRINT LPAREN ExpI RPAREN SEMICOLON . crea_print
    (87) crea_print -> .

    IF              reduce using rule 87 (crea_print -> .)
    RETURN          reduce using rule 87 (crea_print -> .)
    VAR_ID          reduce using rule 87 (crea_print -> .)
    PRINT           reduce using rule 87 (crea_print -> .)
    FOR             reduce using rule 87 (crea_print -> .)
    WHILE           reduce using rule 87 (crea_print -> .)
    DO              reduce using rule 87 (crea_print -> .)
    RET             reduce using rule 87 (crea_print -> .)
    RBRACKET        reduce using rule 87 (crea_print -> .)

    crea_print                     shift and go to state 174

state 154

    (96) DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE . LPAREN ExpI RPAREN SEMICOLON

    LPAREN          shift and go to state 175


state 155

    (77) Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF . LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if

    LBRACKET        shift and go to state 176


state 156

    (93) While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN . crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (78) crea_GOTOF -> .

    LBRACKET        reduce using rule 78 (crea_GOTOF -> .)

    crea_GOTOF                     shift and go to state 177

state 157

    (97) For -> FOR LPAREN VAR_ID ASSIGN ExpI . SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET

    SEMICOLON       shift and go to state 178


state 158

    (19) ExpI -> ExpK Operandos push_operador_PilaOperadores ExpK . resuelve_operadores_relacionales
    (26) resuelve_operadores_relacionales -> .

    SEMICOLON       reduce using rule 26 (resuelve_operadores_relacionales -> .)
    RPAREN          reduce using rule 26 (resuelve_operadores_relacionales -> .)
    SRBRACKET       reduce using rule 26 (resuelve_operadores_relacionales -> .)
    COMMA           reduce using rule 26 (resuelve_operadores_relacionales -> .)

    resuelve_operadores_relacionales shift and go to state 179

state 159

    (28) ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores . ExpK
    (27) ExpK -> . ExpT resuelve_termino
    (28) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (32) ExpT -> . ExpF resuelve_factor
    (33) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (37) ExpF -> . VAR_CTE
    (38) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (39) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (40) ExpF -> . llama_funcion
    (41) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (42) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (47) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion

    LPAREN          shift and go to state 81
    VAR_ID          shift and go to state 85
    VAR_INT         shift and go to state 83
    VAR_DECIMAL     shift and go to state 86

    ExpF                           shift and go to state 82
    ExpK                           shift and go to state 180
    ExpT                           shift and go to state 79
    llama_funcion                  shift and go to state 84
    VAR_CTE                        shift and go to state 80

state 160

    (38) ExpF -> LPAREN agrega_falso ExpI RPAREN . quita_falso
    (46) quita_falso -> .

    MULT            reduce using rule 46 (quita_falso -> .)
    DIV             reduce using rule 46 (quita_falso -> .)
    PLUS            reduce using rule 46 (quita_falso -> .)
    MINUS           reduce using rule 46 (quita_falso -> .)
    LT              reduce using rule 46 (quita_falso -> .)
    GT              reduce using rule 46 (quita_falso -> .)
    NE              reduce using rule 46 (quita_falso -> .)
    LE              reduce using rule 46 (quita_falso -> .)
    GE              reduce using rule 46 (quita_falso -> .)
    EQ              reduce using rule 46 (quita_falso -> .)
    SEMICOLON       reduce using rule 46 (quita_falso -> .)
    RPAREN          reduce using rule 46 (quita_falso -> .)
    SRBRACKET       reduce using rule 46 (quita_falso -> .)
    COMMA           reduce using rule 46 (quita_falso -> .)

    quita_falso                    shift and go to state 181

state 161

    (33) ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores . ExpT
    (32) ExpT -> . ExpF resuelve_factor
    (33) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (37) ExpF -> . VAR_CTE
    (38) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (39) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (40) ExpF -> . llama_funcion
    (41) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (42) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (47) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion

    LPAREN          shift and go to state 81
    VAR_ID          shift and go to state 85
    VAR_INT         shift and go to state 83
    VAR_DECIMAL     shift and go to state 86

    llama_funcion                  shift and go to state 84
    ExpT                           shift and go to state 182
    VAR_CTE                        shift and go to state 80
    ExpF                           shift and go to state 82

state 162

    (47) llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe . argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (49) argumentos -> . ExpI resuelve_argumentos mas_argumentos
    (50) argumentos -> .
    (18) ExpI -> . ExpK resuelve_operadores_relacionales
    (19) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (27) ExpK -> . ExpT resuelve_termino
    (28) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (32) ExpT -> . ExpF resuelve_factor
    (33) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (37) ExpF -> . VAR_CTE
    (38) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (39) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (40) ExpF -> . llama_funcion
    (41) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (42) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (47) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion

    RPAREN          reduce using rule 50 (argumentos -> .)
    LPAREN          shift and go to state 81
    VAR_ID          shift and go to state 85
    VAR_INT         shift and go to state 83
    VAR_DECIMAL     shift and go to state 86

    ExpK                           shift and go to state 78
    ExpT                           shift and go to state 79
    VAR_CTE                        shift and go to state 80
    argumentos                     shift and go to state 183
    ExpF                           shift and go to state 82
    llama_funcion                  shift and go to state 84
    ExpI                           shift and go to state 172

state 163

    (56) pos_arreglo -> SLBRACKET ExpI . SRBRACKET

    SRBRACKET       shift and go to state 184


state 164

    (114) Main -> MAIN agrega_main_funcion LPAREN RPAREN LBRACKET Vars reg_brack RET ZERO SEMICOLON RBRACKET .

    $end            reduce using rule 114 (Main -> MAIN agrega_main_funcion LPAREN RPAREN LBRACKET Vars reg_brack RET ZERO SEMICOLON RBRACKET .)


state 165

    (110) Forward -> VAR_ID POINT FORWARD LPAREN ExpI . RPAREN SEMICOLON

    RPAREN          shift and go to state 185


state 166

    (112) Left -> VAR_ID POINT LEFT LPAREN ExpI . RPAREN SEMICOLON

    RPAREN          shift and go to state 186


state 167

    (113) Circle -> VAR_ID POINT CIRCLE LPAREN ExpI . RPAREN SEMICOLON

    RPAREN          shift and go to state 187


state 168

    (111) Right -> VAR_ID POINT RIGHT LPAREN ExpI . RPAREN SEMICOLON

    RPAREN          shift and go to state 188


state 169

    (109) Position -> VAR_ID POINT POS LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 189


state 170

    (14) Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI . SEMICOLON resuelve_asignacion

    SEMICOLON       shift and go to state 190


state 171

    (88) Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos . RPAREN quita_falso resuelve_llamada_funcion SEMICOLON vtc_action

    RPAREN          shift and go to state 191


state 172

    (49) argumentos -> ExpI . resuelve_argumentos mas_argumentos
    (53) resuelve_argumentos -> .

    COMMA           reduce using rule 53 (resuelve_argumentos -> .)
    RPAREN          reduce using rule 53 (resuelve_argumentos -> .)

    resuelve_argumentos            shift and go to state 192

state 173

    (58) funciones -> FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_quad funciones .

    MAIN            reduce using rule 58 (funciones -> FUNC tipo_funcion VAR_ID LPAREN param RPAREN agrega_funcion LBRACKET Vars reg_brack RBRACKET fin_func_quad funciones .)


state 174

    (86) Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print .

    IF              reduce using rule 86 (Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print .)
    RETURN          reduce using rule 86 (Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print .)
    VAR_ID          reduce using rule 86 (Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print .)
    PRINT           reduce using rule 86 (Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print .)
    FOR             reduce using rule 86 (Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print .)
    WHILE           reduce using rule 86 (Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print .)
    DO              reduce using rule 86 (Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print .)
    RBRACKET        reduce using rule 86 (Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print .)
    RET             reduce using rule 86 (Print -> PRINT LPAREN ExpI RPAREN SEMICOLON crea_print .)


state 175

    (96) DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN . ExpI RPAREN SEMICOLON
    (18) ExpI -> . ExpK resuelve_operadores_relacionales
    (19) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (27) ExpK -> . ExpT resuelve_termino
    (28) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (32) ExpT -> . ExpF resuelve_factor
    (33) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (37) ExpF -> . VAR_CTE
    (38) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (39) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (40) ExpF -> . llama_funcion
    (41) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (42) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (47) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion

    LPAREN          shift and go to state 81
    VAR_ID          shift and go to state 85
    VAR_INT         shift and go to state 83
    VAR_DECIMAL     shift and go to state 86

    ExpK                           shift and go to state 78
    llama_funcion                  shift and go to state 84
    ExpT                           shift and go to state 79
    VAR_CTE                        shift and go to state 80
    ExpF                           shift and go to state 82
    ExpI                           shift and go to state 193

state 176

    (77) Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET . reg_brack RBRACKET pos_else llena_cuadruplo_if
    (68) reg_brack -> . Estatutos reg_brack
    (69) reg_brack -> .
    (70) Estatutos -> . Condicion
    (71) Estatutos -> . Ciclo
    (72) Estatutos -> . Return
    (73) Estatutos -> . Asignacion
    (74) Estatutos -> . Print
    (75) Estatutos -> . Llamada_Func
    (76) Estatutos -> . TurtleMotion
    (77) Condicion -> . IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
    (90) Ciclo -> . For
    (91) Ciclo -> . While
    (92) Ciclo -> . DoWhile
    (83) Return -> . RETURN ExpI SEMICOLON resuelve_return
    (14) Asignacion -> . VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
    (85) Print -> . PRINT LPAREN VAR_STRING RPAREN SEMICOLON
    (86) Print -> . PRINT LPAREN ExpI RPAREN SEMICOLON crea_print
    (88) Llamada_Func -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON vtc_action
    (104) TurtleMotion -> . Position
    (105) TurtleMotion -> . Right
    (106) TurtleMotion -> . Left
    (107) TurtleMotion -> . Forward
    (108) TurtleMotion -> . Circle
    (97) For -> . FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (93) While -> . WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (96) DoWhile -> . DO LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON
    (109) Position -> . VAR_ID POINT POS LPAREN RPAREN SEMICOLON
    (111) Right -> . VAR_ID POINT RIGHT LPAREN ExpI RPAREN SEMICOLON
    (112) Left -> . VAR_ID POINT LEFT LPAREN ExpI RPAREN SEMICOLON
    (110) Forward -> . VAR_ID POINT FORWARD LPAREN ExpI RPAREN SEMICOLON
    (113) Circle -> . VAR_ID POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON

    RBRACKET        reduce using rule 69 (reg_brack -> .)
    IF              shift and go to state 61
    RETURN          shift and go to state 64
    VAR_ID          shift and go to state 66
    PRINT           shift and go to state 53
    FOR             shift and go to state 63
    WHILE           shift and go to state 62
    DO              shift and go to state 57

    Right                          shift and go to state 54
    Llamada_Func                   shift and go to state 47
    Forward                        shift and go to state 55
    Circle                         shift and go to state 46
    Return                         shift and go to state 58
    reg_brack                      shift and go to state 194
    DoWhile                        shift and go to state 48
    For                            shift and go to state 49
    Print                          shift and go to state 52
    TurtleMotion                   shift and go to state 69
    While                          shift and go to state 50
    Left                           shift and go to state 59
    Estatutos                      shift and go to state 51
    Condicion                      shift and go to state 67
    Position                       shift and go to state 68
    Ciclo                          shift and go to state 56
    Asignacion                     shift and go to state 60

state 177

    (93) While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF . LBRACKET reg_brack RBRACKET regresa_inicio_while

    LBRACKET        shift and go to state 195


state 178

    (97) For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON . ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (18) ExpI -> . ExpK resuelve_operadores_relacionales
    (19) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (27) ExpK -> . ExpT resuelve_termino
    (28) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (32) ExpT -> . ExpF resuelve_factor
    (33) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (37) ExpF -> . VAR_CTE
    (38) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (39) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (40) ExpF -> . llama_funcion
    (41) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (42) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (47) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion

    LPAREN          shift and go to state 81
    VAR_ID          shift and go to state 85
    VAR_INT         shift and go to state 83
    VAR_DECIMAL     shift and go to state 86

    ExpK                           shift and go to state 78
    llama_funcion                  shift and go to state 84
    ExpT                           shift and go to state 79
    VAR_CTE                        shift and go to state 80
    ExpF                           shift and go to state 82
    ExpI                           shift and go to state 196

state 179

    (19) ExpI -> ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales .

    RPAREN          reduce using rule 19 (ExpI -> ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales .)
    COMMA           reduce using rule 19 (ExpI -> ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales .)
    SEMICOLON       reduce using rule 19 (ExpI -> ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales .)
    SRBRACKET       reduce using rule 19 (ExpI -> ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales .)


state 180

    (28) ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .

    LT              reduce using rule 28 (ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .)
    GT              reduce using rule 28 (ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .)
    NE              reduce using rule 28 (ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .)
    LE              reduce using rule 28 (ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .)
    GE              reduce using rule 28 (ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .)
    EQ              reduce using rule 28 (ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .)
    COMMA           reduce using rule 28 (ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .)
    RPAREN          reduce using rule 28 (ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .)
    SEMICOLON       reduce using rule 28 (ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .)
    SRBRACKET       reduce using rule 28 (ExpK -> ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK .)


state 181

    (38) ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .

    MULT            reduce using rule 38 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    DIV             reduce using rule 38 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    PLUS            reduce using rule 38 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    MINUS           reduce using rule 38 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    LT              reduce using rule 38 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    GT              reduce using rule 38 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    NE              reduce using rule 38 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    LE              reduce using rule 38 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    GE              reduce using rule 38 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    EQ              reduce using rule 38 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    SEMICOLON       reduce using rule 38 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    RPAREN          reduce using rule 38 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    SRBRACKET       reduce using rule 38 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)
    COMMA           reduce using rule 38 (ExpF -> LPAREN agrega_falso ExpI RPAREN quita_falso .)


state 182

    (33) ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .

    PLUS            reduce using rule 33 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    MINUS           reduce using rule 33 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    LT              reduce using rule 33 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    GT              reduce using rule 33 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    NE              reduce using rule 33 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    LE              reduce using rule 33 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    GE              reduce using rule 33 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    EQ              reduce using rule 33 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    RPAREN          reduce using rule 33 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    COMMA           reduce using rule 33 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    SEMICOLON       reduce using rule 33 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)
    SRBRACKET       reduce using rule 33 (ExpT -> ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT .)


state 183

    (47) llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos . RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion

    RPAREN          shift and go to state 197


state 184

    (56) pos_arreglo -> SLBRACKET ExpI SRBRACKET .

    MULT            reduce using rule 56 (pos_arreglo -> SLBRACKET ExpI SRBRACKET .)
    DIV             reduce using rule 56 (pos_arreglo -> SLBRACKET ExpI SRBRACKET .)
    PLUS            reduce using rule 56 (pos_arreglo -> SLBRACKET ExpI SRBRACKET .)
    MINUS           reduce using rule 56 (pos_arreglo -> SLBRACKET ExpI SRBRACKET .)
    LT              reduce using rule 56 (pos_arreglo -> SLBRACKET ExpI SRBRACKET .)
    GT              reduce using rule 56 (pos_arreglo -> SLBRACKET ExpI SRBRACKET .)
    NE              reduce using rule 56 (pos_arreglo -> SLBRACKET ExpI SRBRACKET .)
    LE              reduce using rule 56 (pos_arreglo -> SLBRACKET ExpI SRBRACKET .)
    GE              reduce using rule 56 (pos_arreglo -> SLBRACKET ExpI SRBRACKET .)
    EQ              reduce using rule 56 (pos_arreglo -> SLBRACKET ExpI SRBRACKET .)
    SEMICOLON       reduce using rule 56 (pos_arreglo -> SLBRACKET ExpI SRBRACKET .)
    RPAREN          reduce using rule 56 (pos_arreglo -> SLBRACKET ExpI SRBRACKET .)
    SRBRACKET       reduce using rule 56 (pos_arreglo -> SLBRACKET ExpI SRBRACKET .)
    COMMA           reduce using rule 56 (pos_arreglo -> SLBRACKET ExpI SRBRACKET .)


state 185

    (110) Forward -> VAR_ID POINT FORWARD LPAREN ExpI RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 198


state 186

    (112) Left -> VAR_ID POINT LEFT LPAREN ExpI RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 199


state 187

    (113) Circle -> VAR_ID POINT CIRCLE LPAREN ExpI RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 200


state 188

    (111) Right -> VAR_ID POINT RIGHT LPAREN ExpI RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 201


state 189

    (109) Position -> VAR_ID POINT POS LPAREN RPAREN SEMICOLON .

    IF              reduce using rule 109 (Position -> VAR_ID POINT POS LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 109 (Position -> VAR_ID POINT POS LPAREN RPAREN SEMICOLON .)
    VAR_ID          reduce using rule 109 (Position -> VAR_ID POINT POS LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 109 (Position -> VAR_ID POINT POS LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 109 (Position -> VAR_ID POINT POS LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 109 (Position -> VAR_ID POINT POS LPAREN RPAREN SEMICOLON .)
    DO              reduce using rule 109 (Position -> VAR_ID POINT POS LPAREN RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 109 (Position -> VAR_ID POINT POS LPAREN RPAREN SEMICOLON .)
    RET             reduce using rule 109 (Position -> VAR_ID POINT POS LPAREN RPAREN SEMICOLON .)


state 190

    (14) Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON . resuelve_asignacion
    (17) resuelve_asignacion -> .

    IF              reduce using rule 17 (resuelve_asignacion -> .)
    RETURN          reduce using rule 17 (resuelve_asignacion -> .)
    VAR_ID          reduce using rule 17 (resuelve_asignacion -> .)
    PRINT           reduce using rule 17 (resuelve_asignacion -> .)
    FOR             reduce using rule 17 (resuelve_asignacion -> .)
    WHILE           reduce using rule 17 (resuelve_asignacion -> .)
    DO              reduce using rule 17 (resuelve_asignacion -> .)
    RET             reduce using rule 17 (resuelve_asignacion -> .)
    RBRACKET        reduce using rule 17 (resuelve_asignacion -> .)

    resuelve_asignacion            shift and go to state 202

state 191

    (88) Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN . quita_falso resuelve_llamada_funcion SEMICOLON vtc_action
    (46) quita_falso -> .

    SEMICOLON       reduce using rule 46 (quita_falso -> .)

    quita_falso                    shift and go to state 203

state 192

    (49) argumentos -> ExpI resuelve_argumentos . mas_argumentos
    (51) mas_argumentos -> . COMMA ExpI resuelve_argumentos mas_argumentos
    (52) mas_argumentos -> .

    COMMA           shift and go to state 204
    RPAREN          reduce using rule 52 (mas_argumentos -> .)

    mas_argumentos                 shift and go to state 205

state 193

    (96) DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI . RPAREN SEMICOLON

    RPAREN          shift and go to state 206


state 194

    (77) Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack . RBRACKET pos_else llena_cuadruplo_if

    RBRACKET        shift and go to state 207


state 195

    (93) While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET . reg_brack RBRACKET regresa_inicio_while
    (68) reg_brack -> . Estatutos reg_brack
    (69) reg_brack -> .
    (70) Estatutos -> . Condicion
    (71) Estatutos -> . Ciclo
    (72) Estatutos -> . Return
    (73) Estatutos -> . Asignacion
    (74) Estatutos -> . Print
    (75) Estatutos -> . Llamada_Func
    (76) Estatutos -> . TurtleMotion
    (77) Condicion -> . IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
    (90) Ciclo -> . For
    (91) Ciclo -> . While
    (92) Ciclo -> . DoWhile
    (83) Return -> . RETURN ExpI SEMICOLON resuelve_return
    (14) Asignacion -> . VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
    (85) Print -> . PRINT LPAREN VAR_STRING RPAREN SEMICOLON
    (86) Print -> . PRINT LPAREN ExpI RPAREN SEMICOLON crea_print
    (88) Llamada_Func -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON vtc_action
    (104) TurtleMotion -> . Position
    (105) TurtleMotion -> . Right
    (106) TurtleMotion -> . Left
    (107) TurtleMotion -> . Forward
    (108) TurtleMotion -> . Circle
    (97) For -> . FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (93) While -> . WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (96) DoWhile -> . DO LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON
    (109) Position -> . VAR_ID POINT POS LPAREN RPAREN SEMICOLON
    (111) Right -> . VAR_ID POINT RIGHT LPAREN ExpI RPAREN SEMICOLON
    (112) Left -> . VAR_ID POINT LEFT LPAREN ExpI RPAREN SEMICOLON
    (110) Forward -> . VAR_ID POINT FORWARD LPAREN ExpI RPAREN SEMICOLON
    (113) Circle -> . VAR_ID POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON

    RBRACKET        reduce using rule 69 (reg_brack -> .)
    IF              shift and go to state 61
    RETURN          shift and go to state 64
    VAR_ID          shift and go to state 66
    PRINT           shift and go to state 53
    FOR             shift and go to state 63
    WHILE           shift and go to state 62
    DO              shift and go to state 57

    Right                          shift and go to state 54
    Llamada_Func                   shift and go to state 47
    Forward                        shift and go to state 55
    Circle                         shift and go to state 46
    Return                         shift and go to state 58
    reg_brack                      shift and go to state 208
    DoWhile                        shift and go to state 48
    Asignacion                     shift and go to state 60
    For                            shift and go to state 49
    Print                          shift and go to state 52
    TurtleMotion                   shift and go to state 69
    While                          shift and go to state 50
    Left                           shift and go to state 59
    Estatutos                      shift and go to state 51
    Condicion                      shift and go to state 67
    Position                       shift and go to state 68
    Ciclo                          shift and go to state 56

state 196

    (97) For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI . SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET

    SEMICOLON       shift and go to state 209


state 197

    (47) llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN . quita_falso resuelve_llamada_funcion guarda_resultado_funcion
    (46) quita_falso -> .

    MULT            reduce using rule 46 (quita_falso -> .)
    DIV             reduce using rule 46 (quita_falso -> .)
    PLUS            reduce using rule 46 (quita_falso -> .)
    MINUS           reduce using rule 46 (quita_falso -> .)
    LT              reduce using rule 46 (quita_falso -> .)
    GT              reduce using rule 46 (quita_falso -> .)
    NE              reduce using rule 46 (quita_falso -> .)
    LE              reduce using rule 46 (quita_falso -> .)
    GE              reduce using rule 46 (quita_falso -> .)
    EQ              reduce using rule 46 (quita_falso -> .)
    SEMICOLON       reduce using rule 46 (quita_falso -> .)
    RPAREN          reduce using rule 46 (quita_falso -> .)
    SRBRACKET       reduce using rule 46 (quita_falso -> .)
    COMMA           reduce using rule 46 (quita_falso -> .)

    quita_falso                    shift and go to state 210

state 198

    (110) Forward -> VAR_ID POINT FORWARD LPAREN ExpI RPAREN SEMICOLON .

    IF              reduce using rule 110 (Forward -> VAR_ID POINT FORWARD LPAREN ExpI RPAREN SEMICOLON .)
    RETURN          reduce using rule 110 (Forward -> VAR_ID POINT FORWARD LPAREN ExpI RPAREN SEMICOLON .)
    VAR_ID          reduce using rule 110 (Forward -> VAR_ID POINT FORWARD LPAREN ExpI RPAREN SEMICOLON .)
    PRINT           reduce using rule 110 (Forward -> VAR_ID POINT FORWARD LPAREN ExpI RPAREN SEMICOLON .)
    FOR             reduce using rule 110 (Forward -> VAR_ID POINT FORWARD LPAREN ExpI RPAREN SEMICOLON .)
    WHILE           reduce using rule 110 (Forward -> VAR_ID POINT FORWARD LPAREN ExpI RPAREN SEMICOLON .)
    DO              reduce using rule 110 (Forward -> VAR_ID POINT FORWARD LPAREN ExpI RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 110 (Forward -> VAR_ID POINT FORWARD LPAREN ExpI RPAREN SEMICOLON .)
    RET             reduce using rule 110 (Forward -> VAR_ID POINT FORWARD LPAREN ExpI RPAREN SEMICOLON .)


state 199

    (112) Left -> VAR_ID POINT LEFT LPAREN ExpI RPAREN SEMICOLON .

    IF              reduce using rule 112 (Left -> VAR_ID POINT LEFT LPAREN ExpI RPAREN SEMICOLON .)
    RETURN          reduce using rule 112 (Left -> VAR_ID POINT LEFT LPAREN ExpI RPAREN SEMICOLON .)
    VAR_ID          reduce using rule 112 (Left -> VAR_ID POINT LEFT LPAREN ExpI RPAREN SEMICOLON .)
    PRINT           reduce using rule 112 (Left -> VAR_ID POINT LEFT LPAREN ExpI RPAREN SEMICOLON .)
    FOR             reduce using rule 112 (Left -> VAR_ID POINT LEFT LPAREN ExpI RPAREN SEMICOLON .)
    WHILE           reduce using rule 112 (Left -> VAR_ID POINT LEFT LPAREN ExpI RPAREN SEMICOLON .)
    DO              reduce using rule 112 (Left -> VAR_ID POINT LEFT LPAREN ExpI RPAREN SEMICOLON .)
    RET             reduce using rule 112 (Left -> VAR_ID POINT LEFT LPAREN ExpI RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 112 (Left -> VAR_ID POINT LEFT LPAREN ExpI RPAREN SEMICOLON .)


state 200

    (113) Circle -> VAR_ID POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON .

    IF              reduce using rule 113 (Circle -> VAR_ID POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON .)
    RETURN          reduce using rule 113 (Circle -> VAR_ID POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON .)
    VAR_ID          reduce using rule 113 (Circle -> VAR_ID POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON .)
    PRINT           reduce using rule 113 (Circle -> VAR_ID POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON .)
    FOR             reduce using rule 113 (Circle -> VAR_ID POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON .)
    WHILE           reduce using rule 113 (Circle -> VAR_ID POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON .)
    DO              reduce using rule 113 (Circle -> VAR_ID POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 113 (Circle -> VAR_ID POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON .)
    RET             reduce using rule 113 (Circle -> VAR_ID POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON .)


state 201

    (111) Right -> VAR_ID POINT RIGHT LPAREN ExpI RPAREN SEMICOLON .

    IF              reduce using rule 111 (Right -> VAR_ID POINT RIGHT LPAREN ExpI RPAREN SEMICOLON .)
    RETURN          reduce using rule 111 (Right -> VAR_ID POINT RIGHT LPAREN ExpI RPAREN SEMICOLON .)
    VAR_ID          reduce using rule 111 (Right -> VAR_ID POINT RIGHT LPAREN ExpI RPAREN SEMICOLON .)
    PRINT           reduce using rule 111 (Right -> VAR_ID POINT RIGHT LPAREN ExpI RPAREN SEMICOLON .)
    FOR             reduce using rule 111 (Right -> VAR_ID POINT RIGHT LPAREN ExpI RPAREN SEMICOLON .)
    WHILE           reduce using rule 111 (Right -> VAR_ID POINT RIGHT LPAREN ExpI RPAREN SEMICOLON .)
    DO              reduce using rule 111 (Right -> VAR_ID POINT RIGHT LPAREN ExpI RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 111 (Right -> VAR_ID POINT RIGHT LPAREN ExpI RPAREN SEMICOLON .)
    RET             reduce using rule 111 (Right -> VAR_ID POINT RIGHT LPAREN ExpI RPAREN SEMICOLON .)


state 202

    (14) Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion .

    IF              reduce using rule 14 (Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion .)
    RETURN          reduce using rule 14 (Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion .)
    VAR_ID          reduce using rule 14 (Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion .)
    PRINT           reduce using rule 14 (Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion .)
    FOR             reduce using rule 14 (Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion .)
    WHILE           reduce using rule 14 (Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion .)
    DO              reduce using rule 14 (Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion .)
    RBRACKET        reduce using rule 14 (Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion .)
    RET             reduce using rule 14 (Asignacion -> VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion .)


state 203

    (88) Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso . resuelve_llamada_funcion SEMICOLON vtc_action
    (54) resuelve_llamada_funcion -> .

    SEMICOLON       reduce using rule 54 (resuelve_llamada_funcion -> .)

    resuelve_llamada_funcion       shift and go to state 211

state 204

    (51) mas_argumentos -> COMMA . ExpI resuelve_argumentos mas_argumentos
    (18) ExpI -> . ExpK resuelve_operadores_relacionales
    (19) ExpI -> . ExpK Operandos push_operador_PilaOperadores ExpK resuelve_operadores_relacionales
    (27) ExpK -> . ExpT resuelve_termino
    (28) ExpK -> . ExpT resuelve_termino pos_SUMRES push_operador_PilaOperadores ExpK
    (32) ExpT -> . ExpF resuelve_factor
    (33) ExpT -> . ExpF resuelve_factor pos_MULTDIV push_operador_PilaOperadores ExpT
    (37) ExpF -> . VAR_CTE
    (38) ExpF -> . LPAREN agrega_falso ExpI RPAREN quita_falso
    (39) ExpF -> . VAR_ID push_var_PilaOperandos pos_arreglo
    (40) ExpF -> . llama_funcion
    (41) VAR_CTE -> . VAR_INT push_int_PilaOperandos
    (42) VAR_CTE -> . VAR_DECIMAL push_decimal_PilaOperandos
    (47) llama_funcion -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion

    LPAREN          shift and go to state 81
    VAR_ID          shift and go to state 85
    VAR_INT         shift and go to state 83
    VAR_DECIMAL     shift and go to state 86

    ExpK                           shift and go to state 78
    llama_funcion                  shift and go to state 84
    ExpT                           shift and go to state 79
    VAR_CTE                        shift and go to state 80
    ExpF                           shift and go to state 82
    ExpI                           shift and go to state 212

state 205

    (49) argumentos -> ExpI resuelve_argumentos mas_argumentos .

    RPAREN          reduce using rule 49 (argumentos -> ExpI resuelve_argumentos mas_argumentos .)


state 206

    (96) DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 213


state 207

    (77) Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET . pos_else llena_cuadruplo_if
    (80) pos_else -> . ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET
    (81) pos_else -> .

    ELSE            shift and go to state 215
    IF              reduce using rule 81 (pos_else -> .)
    RETURN          reduce using rule 81 (pos_else -> .)
    VAR_ID          reduce using rule 81 (pos_else -> .)
    PRINT           reduce using rule 81 (pos_else -> .)
    FOR             reduce using rule 81 (pos_else -> .)
    WHILE           reduce using rule 81 (pos_else -> .)
    DO              reduce using rule 81 (pos_else -> .)
    RET             reduce using rule 81 (pos_else -> .)
    RBRACKET        reduce using rule 81 (pos_else -> .)

    pos_else                       shift and go to state 214

state 208

    (93) While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack . RBRACKET regresa_inicio_while

    RBRACKET        shift and go to state 216


state 209

    (97) For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON . VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET

    VAR_ID          shift and go to state 217


state 210

    (47) llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso . resuelve_llamada_funcion guarda_resultado_funcion
    (54) resuelve_llamada_funcion -> .

    MULT            reduce using rule 54 (resuelve_llamada_funcion -> .)
    DIV             reduce using rule 54 (resuelve_llamada_funcion -> .)
    PLUS            reduce using rule 54 (resuelve_llamada_funcion -> .)
    MINUS           reduce using rule 54 (resuelve_llamada_funcion -> .)
    LT              reduce using rule 54 (resuelve_llamada_funcion -> .)
    GT              reduce using rule 54 (resuelve_llamada_funcion -> .)
    NE              reduce using rule 54 (resuelve_llamada_funcion -> .)
    LE              reduce using rule 54 (resuelve_llamada_funcion -> .)
    GE              reduce using rule 54 (resuelve_llamada_funcion -> .)
    EQ              reduce using rule 54 (resuelve_llamada_funcion -> .)
    SEMICOLON       reduce using rule 54 (resuelve_llamada_funcion -> .)
    RPAREN          reduce using rule 54 (resuelve_llamada_funcion -> .)
    SRBRACKET       reduce using rule 54 (resuelve_llamada_funcion -> .)
    COMMA           reduce using rule 54 (resuelve_llamada_funcion -> .)

    resuelve_llamada_funcion       shift and go to state 218

state 211

    (88) Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion . SEMICOLON vtc_action

    SEMICOLON       shift and go to state 219


state 212

    (51) mas_argumentos -> COMMA ExpI . resuelve_argumentos mas_argumentos
    (53) resuelve_argumentos -> .

    COMMA           reduce using rule 53 (resuelve_argumentos -> .)
    RPAREN          reduce using rule 53 (resuelve_argumentos -> .)

    resuelve_argumentos            shift and go to state 220

state 213

    (96) DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON .

    IF              reduce using rule 96 (DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON .)
    RETURN          reduce using rule 96 (DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON .)
    VAR_ID          reduce using rule 96 (DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON .)
    PRINT           reduce using rule 96 (DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON .)
    FOR             reduce using rule 96 (DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON .)
    WHILE           reduce using rule 96 (DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON .)
    DO              reduce using rule 96 (DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 96 (DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON .)
    RET             reduce using rule 96 (DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON .)


state 214

    (77) Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else . llena_cuadruplo_if
    (79) llena_cuadruplo_if -> .

    IF              reduce using rule 79 (llena_cuadruplo_if -> .)
    RETURN          reduce using rule 79 (llena_cuadruplo_if -> .)
    VAR_ID          reduce using rule 79 (llena_cuadruplo_if -> .)
    PRINT           reduce using rule 79 (llena_cuadruplo_if -> .)
    FOR             reduce using rule 79 (llena_cuadruplo_if -> .)
    WHILE           reduce using rule 79 (llena_cuadruplo_if -> .)
    DO              reduce using rule 79 (llena_cuadruplo_if -> .)
    RET             reduce using rule 79 (llena_cuadruplo_if -> .)
    RBRACKET        reduce using rule 79 (llena_cuadruplo_if -> .)

    llena_cuadruplo_if             shift and go to state 221

state 215

    (80) pos_else -> ELSE . crea_else_cuadruplo LBRACKET reg_brack RBRACKET
    (82) crea_else_cuadruplo -> .

    LBRACKET        reduce using rule 82 (crea_else_cuadruplo -> .)

    crea_else_cuadruplo            shift and go to state 222

state 216

    (93) While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET . regresa_inicio_while
    (95) regresa_inicio_while -> .

    IF              reduce using rule 95 (regresa_inicio_while -> .)
    RETURN          reduce using rule 95 (regresa_inicio_while -> .)
    VAR_ID          reduce using rule 95 (regresa_inicio_while -> .)
    PRINT           reduce using rule 95 (regresa_inicio_while -> .)
    FOR             reduce using rule 95 (regresa_inicio_while -> .)
    WHILE           reduce using rule 95 (regresa_inicio_while -> .)
    DO              reduce using rule 95 (regresa_inicio_while -> .)
    RET             reduce using rule 95 (regresa_inicio_while -> .)
    RBRACKET        reduce using rule 95 (regresa_inicio_while -> .)

    regresa_inicio_while           shift and go to state 223

state 217

    (97) For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID . Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (98) Exp_ciclo -> . PLUS VAR_INT
    (99) Exp_ciclo -> . MINUS VAR_INT
    (100) Exp_ciclo -> . MULT VAR_INT
    (101) Exp_ciclo -> . DIV VAR_INT
    (102) Exp_ciclo -> . PLUSPLUS
    (103) Exp_ciclo -> . MINUSMINUS

    PLUS            shift and go to state 229
    MINUS           shift and go to state 230
    MULT            shift and go to state 226
    DIV             shift and go to state 224
    PLUSPLUS        shift and go to state 227
    MINUSMINUS      shift and go to state 225

    Exp_ciclo                      shift and go to state 228

state 218

    (47) llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion . guarda_resultado_funcion
    (55) guarda_resultado_funcion -> .

    MULT            reduce using rule 55 (guarda_resultado_funcion -> .)
    DIV             reduce using rule 55 (guarda_resultado_funcion -> .)
    PLUS            reduce using rule 55 (guarda_resultado_funcion -> .)
    MINUS           reduce using rule 55 (guarda_resultado_funcion -> .)
    LT              reduce using rule 55 (guarda_resultado_funcion -> .)
    GT              reduce using rule 55 (guarda_resultado_funcion -> .)
    NE              reduce using rule 55 (guarda_resultado_funcion -> .)
    LE              reduce using rule 55 (guarda_resultado_funcion -> .)
    GE              reduce using rule 55 (guarda_resultado_funcion -> .)
    EQ              reduce using rule 55 (guarda_resultado_funcion -> .)
    SEMICOLON       reduce using rule 55 (guarda_resultado_funcion -> .)
    RPAREN          reduce using rule 55 (guarda_resultado_funcion -> .)
    SRBRACKET       reduce using rule 55 (guarda_resultado_funcion -> .)
    COMMA           reduce using rule 55 (guarda_resultado_funcion -> .)

    guarda_resultado_funcion       shift and go to state 231

state 219

    (88) Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON . vtc_action
    (89) vtc_action -> .

    IF              reduce using rule 89 (vtc_action -> .)
    RETURN          reduce using rule 89 (vtc_action -> .)
    VAR_ID          reduce using rule 89 (vtc_action -> .)
    PRINT           reduce using rule 89 (vtc_action -> .)
    FOR             reduce using rule 89 (vtc_action -> .)
    WHILE           reduce using rule 89 (vtc_action -> .)
    DO              reduce using rule 89 (vtc_action -> .)
    RET             reduce using rule 89 (vtc_action -> .)
    RBRACKET        reduce using rule 89 (vtc_action -> .)

    vtc_action                     shift and go to state 232

state 220

    (51) mas_argumentos -> COMMA ExpI resuelve_argumentos . mas_argumentos
    (51) mas_argumentos -> . COMMA ExpI resuelve_argumentos mas_argumentos
    (52) mas_argumentos -> .

    COMMA           shift and go to state 204
    RPAREN          reduce using rule 52 (mas_argumentos -> .)

    mas_argumentos                 shift and go to state 233

state 221

    (77) Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if .

    IF              reduce using rule 77 (Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if .)
    RETURN          reduce using rule 77 (Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if .)
    VAR_ID          reduce using rule 77 (Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if .)
    PRINT           reduce using rule 77 (Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if .)
    FOR             reduce using rule 77 (Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if .)
    WHILE           reduce using rule 77 (Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if .)
    DO              reduce using rule 77 (Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if .)
    RBRACKET        reduce using rule 77 (Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if .)
    RET             reduce using rule 77 (Condicion -> IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if .)


state 222

    (80) pos_else -> ELSE crea_else_cuadruplo . LBRACKET reg_brack RBRACKET

    LBRACKET        shift and go to state 234


state 223

    (93) While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while .

    IF              reduce using rule 93 (While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while .)
    RETURN          reduce using rule 93 (While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while .)
    VAR_ID          reduce using rule 93 (While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while .)
    PRINT           reduce using rule 93 (While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while .)
    FOR             reduce using rule 93 (While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while .)
    WHILE           reduce using rule 93 (While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while .)
    DO              reduce using rule 93 (While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while .)
    RET             reduce using rule 93 (While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while .)
    RBRACKET        reduce using rule 93 (While -> WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while .)


state 224

    (101) Exp_ciclo -> DIV . VAR_INT

    VAR_INT         shift and go to state 235


state 225

    (103) Exp_ciclo -> MINUSMINUS .

    RPAREN          reduce using rule 103 (Exp_ciclo -> MINUSMINUS .)


state 226

    (100) Exp_ciclo -> MULT . VAR_INT

    VAR_INT         shift and go to state 236


state 227

    (102) Exp_ciclo -> PLUSPLUS .

    RPAREN          reduce using rule 102 (Exp_ciclo -> PLUSPLUS .)


state 228

    (97) For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo . RPAREN LBRACKET reg_brack RBRACKET

    RPAREN          shift and go to state 237


state 229

    (98) Exp_ciclo -> PLUS . VAR_INT

    VAR_INT         shift and go to state 238


state 230

    (99) Exp_ciclo -> MINUS . VAR_INT

    VAR_INT         shift and go to state 239


state 231

    (47) llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .

    MULT            reduce using rule 47 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    DIV             reduce using rule 47 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    PLUS            reduce using rule 47 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    MINUS           reduce using rule 47 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    LT              reduce using rule 47 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    GT              reduce using rule 47 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    NE              reduce using rule 47 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    LE              reduce using rule 47 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    GE              reduce using rule 47 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    EQ              reduce using rule 47 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    SEMICOLON       reduce using rule 47 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    RPAREN          reduce using rule 47 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    SRBRACKET       reduce using rule 47 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)
    COMMA           reduce using rule 47 (llama_funcion -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion guarda_resultado_funcion .)


state 232

    (88) Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON vtc_action .

    IF              reduce using rule 88 (Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON vtc_action .)
    RETURN          reduce using rule 88 (Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON vtc_action .)
    VAR_ID          reduce using rule 88 (Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON vtc_action .)
    PRINT           reduce using rule 88 (Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON vtc_action .)
    FOR             reduce using rule 88 (Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON vtc_action .)
    WHILE           reduce using rule 88 (Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON vtc_action .)
    DO              reduce using rule 88 (Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON vtc_action .)
    RBRACKET        reduce using rule 88 (Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON vtc_action .)
    RET             reduce using rule 88 (Llamada_Func -> VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON vtc_action .)


state 233

    (51) mas_argumentos -> COMMA ExpI resuelve_argumentos mas_argumentos .

    RPAREN          reduce using rule 51 (mas_argumentos -> COMMA ExpI resuelve_argumentos mas_argumentos .)


state 234

    (80) pos_else -> ELSE crea_else_cuadruplo LBRACKET . reg_brack RBRACKET
    (68) reg_brack -> . Estatutos reg_brack
    (69) reg_brack -> .
    (70) Estatutos -> . Condicion
    (71) Estatutos -> . Ciclo
    (72) Estatutos -> . Return
    (73) Estatutos -> . Asignacion
    (74) Estatutos -> . Print
    (75) Estatutos -> . Llamada_Func
    (76) Estatutos -> . TurtleMotion
    (77) Condicion -> . IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
    (90) Ciclo -> . For
    (91) Ciclo -> . While
    (92) Ciclo -> . DoWhile
    (83) Return -> . RETURN ExpI SEMICOLON resuelve_return
    (14) Asignacion -> . VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
    (85) Print -> . PRINT LPAREN VAR_STRING RPAREN SEMICOLON
    (86) Print -> . PRINT LPAREN ExpI RPAREN SEMICOLON crea_print
    (88) Llamada_Func -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON vtc_action
    (104) TurtleMotion -> . Position
    (105) TurtleMotion -> . Right
    (106) TurtleMotion -> . Left
    (107) TurtleMotion -> . Forward
    (108) TurtleMotion -> . Circle
    (97) For -> . FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (93) While -> . WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (96) DoWhile -> . DO LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON
    (109) Position -> . VAR_ID POINT POS LPAREN RPAREN SEMICOLON
    (111) Right -> . VAR_ID POINT RIGHT LPAREN ExpI RPAREN SEMICOLON
    (112) Left -> . VAR_ID POINT LEFT LPAREN ExpI RPAREN SEMICOLON
    (110) Forward -> . VAR_ID POINT FORWARD LPAREN ExpI RPAREN SEMICOLON
    (113) Circle -> . VAR_ID POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON

    RBRACKET        reduce using rule 69 (reg_brack -> .)
    IF              shift and go to state 61
    RETURN          shift and go to state 64
    VAR_ID          shift and go to state 66
    PRINT           shift and go to state 53
    FOR             shift and go to state 63
    WHILE           shift and go to state 62
    DO              shift and go to state 57

    Right                          shift and go to state 54
    Llamada_Func                   shift and go to state 47
    Forward                        shift and go to state 55
    Circle                         shift and go to state 46
    Ciclo                          shift and go to state 56
    Return                         shift and go to state 58
    reg_brack                      shift and go to state 240
    DoWhile                        shift and go to state 48
    For                            shift and go to state 49
    Print                          shift and go to state 52
    While                          shift and go to state 50
    Left                           shift and go to state 59
    TurtleMotion                   shift and go to state 69
    Condicion                      shift and go to state 67
    Position                       shift and go to state 68
    Estatutos                      shift and go to state 51
    Asignacion                     shift and go to state 60

state 235

    (101) Exp_ciclo -> DIV VAR_INT .

    RPAREN          reduce using rule 101 (Exp_ciclo -> DIV VAR_INT .)


state 236

    (100) Exp_ciclo -> MULT VAR_INT .

    RPAREN          reduce using rule 100 (Exp_ciclo -> MULT VAR_INT .)


state 237

    (97) For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN . LBRACKET reg_brack RBRACKET

    LBRACKET        shift and go to state 241


state 238

    (98) Exp_ciclo -> PLUS VAR_INT .

    RPAREN          reduce using rule 98 (Exp_ciclo -> PLUS VAR_INT .)


state 239

    (99) Exp_ciclo -> MINUS VAR_INT .

    RPAREN          reduce using rule 99 (Exp_ciclo -> MINUS VAR_INT .)


state 240

    (80) pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack . RBRACKET

    RBRACKET        shift and go to state 242


state 241

    (97) For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET . reg_brack RBRACKET
    (68) reg_brack -> . Estatutos reg_brack
    (69) reg_brack -> .
    (70) Estatutos -> . Condicion
    (71) Estatutos -> . Ciclo
    (72) Estatutos -> . Return
    (73) Estatutos -> . Asignacion
    (74) Estatutos -> . Print
    (75) Estatutos -> . Llamada_Func
    (76) Estatutos -> . TurtleMotion
    (77) Condicion -> . IF LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET pos_else llena_cuadruplo_if
    (90) Ciclo -> . For
    (91) Ciclo -> . While
    (92) Ciclo -> . DoWhile
    (83) Return -> . RETURN ExpI SEMICOLON resuelve_return
    (14) Asignacion -> . VAR_ID push_var_PilaOperandos ASSIGN push_operador_PilaOperadores ExpI SEMICOLON resuelve_asignacion
    (85) Print -> . PRINT LPAREN VAR_STRING RPAREN SEMICOLON
    (86) Print -> . PRINT LPAREN ExpI RPAREN SEMICOLON crea_print
    (88) Llamada_Func -> . VAR_ID LPAREN agrega_falso checa_funcion_si_existe argumentos RPAREN quita_falso resuelve_llamada_funcion SEMICOLON vtc_action
    (104) TurtleMotion -> . Position
    (105) TurtleMotion -> . Right
    (106) TurtleMotion -> . Left
    (107) TurtleMotion -> . Forward
    (108) TurtleMotion -> . Circle
    (97) For -> . FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (93) While -> . WHILE guarda_numero_cuadruplo LPAREN ExpI RPAREN crea_GOTOF LBRACKET reg_brack RBRACKET regresa_inicio_while
    (96) DoWhile -> . DO LBRACKET reg_brack RBRACKET WHILE LPAREN ExpI RPAREN SEMICOLON
    (109) Position -> . VAR_ID POINT POS LPAREN RPAREN SEMICOLON
    (111) Right -> . VAR_ID POINT RIGHT LPAREN ExpI RPAREN SEMICOLON
    (112) Left -> . VAR_ID POINT LEFT LPAREN ExpI RPAREN SEMICOLON
    (110) Forward -> . VAR_ID POINT FORWARD LPAREN ExpI RPAREN SEMICOLON
    (113) Circle -> . VAR_ID POINT CIRCLE LPAREN ExpI RPAREN SEMICOLON

    RBRACKET        reduce using rule 69 (reg_brack -> .)
    IF              shift and go to state 61
    RETURN          shift and go to state 64
    VAR_ID          shift and go to state 66
    PRINT           shift and go to state 53
    FOR             shift and go to state 63
    WHILE           shift and go to state 62
    DO              shift and go to state 57

    Right                          shift and go to state 54
    Llamada_Func                   shift and go to state 47
    Forward                        shift and go to state 55
    Circle                         shift and go to state 46
    Ciclo                          shift and go to state 56
    Return                         shift and go to state 58
    reg_brack                      shift and go to state 243
    DoWhile                        shift and go to state 48
    Asignacion                     shift and go to state 60
    For                            shift and go to state 49
    Print                          shift and go to state 52
    While                          shift and go to state 50
    Left                           shift and go to state 59
    Estatutos                      shift and go to state 51
    TurtleMotion                   shift and go to state 69
    Condicion                      shift and go to state 67
    Position                       shift and go to state 68

state 242

    (80) pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET .

    IF              reduce using rule 80 (pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET .)
    RETURN          reduce using rule 80 (pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET .)
    VAR_ID          reduce using rule 80 (pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET .)
    PRINT           reduce using rule 80 (pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET .)
    FOR             reduce using rule 80 (pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET .)
    WHILE           reduce using rule 80 (pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET .)
    DO              reduce using rule 80 (pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET .)
    RET             reduce using rule 80 (pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET .)
    RBRACKET        reduce using rule 80 (pos_else -> ELSE crea_else_cuadruplo LBRACKET reg_brack RBRACKET .)


state 243

    (97) For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack . RBRACKET

    RBRACKET        shift and go to state 244


state 244

    (97) For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .

    IF              reduce using rule 97 (For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    RETURN          reduce using rule 97 (For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    VAR_ID          reduce using rule 97 (For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    PRINT           reduce using rule 97 (For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    FOR             reduce using rule 97 (For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    WHILE           reduce using rule 97 (For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    DO              reduce using rule 97 (For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    RBRACKET        reduce using rule 97 (For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    RET             reduce using rule 97 (For -> FOR LPAREN VAR_ID ASSIGN ExpI SEMICOLON ExpI SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)

