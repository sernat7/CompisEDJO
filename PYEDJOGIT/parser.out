Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    VAR_CHAR
    TRUE
    IFELSE
    FALSE

Grammar

Rule 0     S' -> program
Rule 1     program -> START EDJO VAR_ID SEMICOLON LibreriaT vars_o_espacio tipo_funciones Main
Rule 2     LibreriaT -> FROM TUR IMPORT TURTLE SEMICOLON
Rule 3     vars_o_espacio -> Vars vars_o_espacio
Rule 4     vars_o_espacio -> <empty>
Rule 5     Vars -> Tipo reglas_var SEMICOLON
Rule 6     Tipo -> INT
Rule 7     Tipo -> DECIMAL
Rule 8     Tipo -> STRING
Rule 9     Tipo -> CHAR
Rule 10    Tipo -> BOOL
Rule 11    reglas_var -> VAR_ID pos_vec pos_comma
Rule 12    pos_vec -> SLBRACKET VAR_INT SRBRACKET
Rule 13    pos_vec -> <empty>
Rule 14    pos_comma -> COMMA reglas_var
Rule 15    pos_comma -> <empty>
Rule 16    Exp -> ExpI pos_igual
Rule 17    pos_igual -> ASSIGN ExpI
Rule 18    pos_igual -> <empty>
Rule 19    ExpI -> ExpK pos_Operandos
Rule 20    pos_Operandos -> Operandos ExpI
Rule 21    pos_Operandos -> <empty>
Rule 22    Operandos -> LT
Rule 23    Operandos -> GT
Rule 24    Operandos -> NE
Rule 25    Operandos -> LE
Rule 26    Operandos -> GE
Rule 27    Operandos -> EQ
Rule 28    ExpK -> ExpT pos_SUMRES
Rule 29    pos_SUMRES -> PLUS ExpK
Rule 30    pos_SUMRES -> MINUS ExpK
Rule 31    pos_SUMRES -> <empty>
Rule 32    ExpT -> ExpF pos_MULTDIV
Rule 33    pos_MULTDIV -> MULT ExpT
Rule 34    pos_MULTDIV -> DIV ExpT
Rule 35    pos_MULTDIV -> <empty>
Rule 36    ExpF -> VAR_CTE
Rule 37    ExpF -> LPAREN Exp RPAREN
Rule 38    ExpF -> SLBRACKET Exp SRBRACKET
Rule 39    ExpF -> VAR_ID pos_parens
Rule 40    VAR_CTE -> VAR_INT
Rule 41    VAR_CTE -> VAR_DECIMAL
Rule 42    pos_parens -> LPAREN Exp RPAREN
Rule 43    pos_parens -> SLBRACKET Exp SRBRACKET
Rule 44    pos_parens -> <empty>
Rule 45    tipo_funciones -> Funcs_void tipo_funciones
Rule 46    tipo_funciones -> <empty>
Rule 47    Funcs_void -> VOID VAR_ID LPAREN reg_paren RPAREN LBRACKET vars_o_espacio reg_brack RBRACKET
Rule 48    reg_paren -> param
Rule 49    reg_paren -> <empty>
Rule 50    param -> Tipo VAR_ID pos_commaf
Rule 51    pos_commaf -> COMMA param
Rule 52    pos_commaf -> <empty>
Rule 53    reg_brack -> Estatutos reg_brack
Rule 54    reg_brack -> <empty>
Rule 55    Estatutos -> Condicion
Rule 56    Estatutos -> Ciclo
Rule 57    Estatutos -> Return
Rule 58    Estatutos -> Exp SEMICOLON
Rule 59    Estatutos -> Print
Rule 60    Estatutos -> Llamada_Func
Rule 61    Estatutos -> TurtleMotion
Rule 62    Condicion -> IF LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET pos_else
Rule 63    pos_else -> ELSE LBRACKET reg_brack RBRACKET
Rule 64    pos_else -> <empty>
Rule 65    Return -> RETURN Exp SEMICOLON
Rule 66    Print -> PRINT LPAREN VAR_STRING RPAREN SEMICOLON
Rule 67    Print -> PRINT LPAREN Exp RPAREN SEMICOLON
Rule 68    Llamada_Func -> VAR_ID LPAREN paramLlam RPAREN SEMICOLON
Rule 69    paramLlam -> Exp pos_commaLlam
Rule 70    pos_commaLlam -> COMMA paramLlam
Rule 71    pos_commaLlam -> <empty>
Rule 72    Ciclo -> For
Rule 73    Ciclo -> While
Rule 74    Ciclo -> DoWhile
Rule 75    While -> WHILE LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET
Rule 76    DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN Exp RPAREN SEMICOLON
Rule 77    For -> FOR LPAREN VAR_ID ASSIGN Exp SEMICOLON Exp SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
Rule 78    Exp_ciclo -> PLUS VAR_INT
Rule 79    Exp_ciclo -> MINUS VAR_INT
Rule 80    Exp_ciclo -> MULT VAR_INT
Rule 81    Exp_ciclo -> DIV VAR_INT
Rule 82    Exp_ciclo -> PLUSPLUS
Rule 83    Exp_ciclo -> MINUSMINUS
Rule 84    TurtleMotion -> Position
Rule 85    TurtleMotion -> Right
Rule 86    TurtleMotion -> Left
Rule 87    TurtleMotion -> Forward
Rule 88    TurtleMotion -> Circle
Rule 89    Position -> VAR_ID POINT POS LPAREN RPAREN SEMICOLON
Rule 90    Forward -> VAR_ID POINT FORWARD LPAREN Exp RPAREN SEMICOLON
Rule 91    Right -> VAR_ID POINT RIGHT LPAREN Exp RPAREN SEMICOLON
Rule 92    Left -> VAR_ID POINT LEFT LPAREN Exp RPAREN SEMICOLON
Rule 93    Circle -> VAR_ID POINT CIRCLE LPAREN Exp RPAREN SEMICOLON
Rule 94    Main -> MAIN LPAREN RPAREN LBRACKET vars_o_espacio reg_brack RET ZERO SEMICOLON RBRACKET

Terminals, with rules where they appear

ASSIGN               : 17 77
BOOL                 : 10
CHAR                 : 9
CIRCLE               : 93
COMMA                : 14 51 70
DECIMAL              : 7
DIV                  : 34 81
DO                   : 76
EDJO                 : 1
ELSE                 : 63
EQ                   : 27
FALSE                : 
FOR                  : 77
FORWARD              : 90
FROM                 : 2
GE                   : 26
GT                   : 23
IF                   : 62
IFELSE               : 
IMPORT               : 2
INT                  : 6
LBRACKET             : 47 62 63 75 76 77 94
LE                   : 25
LEFT                 : 92
LPAREN               : 37 42 47 62 66 67 68 75 76 77 89 90 91 92 93 94
LT                   : 22
MAIN                 : 94
MINUS                : 30 79
MINUSMINUS           : 83
MULT                 : 33 80
NE                   : 24
PLUS                 : 29 78
PLUSPLUS             : 82
POINT                : 89 90 91 92 93
POS                  : 89
PRINT                : 66 67
RBRACKET             : 47 62 63 75 76 77 94
RET                  : 94
RETURN               : 65
RIGHT                : 91
RPAREN               : 37 42 47 62 66 67 68 75 76 77 89 90 91 92 93 94
SEMICOLON            : 1 2 5 58 65 66 67 68 76 77 77 89 90 91 92 93 94
SLBRACKET            : 12 38 43
SRBRACKET            : 12 38 43
START                : 1
STRING               : 8
TRUE                 : 
TUR                  : 2
TURTLE               : 2
VAR_CHAR             : 
VAR_DECIMAL          : 41
VAR_ID               : 1 11 39 47 50 68 77 77 89 90 91 92 93
VAR_INT              : 12 40 78 79 80 81
VAR_STRING           : 66
VOID                 : 47
WHILE                : 75 76
ZERO                 : 94
error                : 

Nonterminals, with rules where they appear

Ciclo                : 56
Circle               : 88
Condicion            : 55
DoWhile              : 74
Estatutos            : 53
Exp                  : 37 38 42 43 58 62 65 67 69 75 76 77 77 90 91 92 93
ExpF                 : 32
ExpI                 : 16 17 20
ExpK                 : 19 29 30
ExpT                 : 28 33 34
Exp_ciclo            : 77
For                  : 72
Forward              : 87
Funcs_void           : 45
Left                 : 86
LibreriaT            : 1
Llamada_Func         : 60
Main                 : 1
Operandos            : 20
Position             : 84
Print                : 59
Return               : 57
Right                : 85
Tipo                 : 5 50
TurtleMotion         : 61
VAR_CTE              : 36
Vars                 : 3
While                : 73
param                : 48 51
paramLlam            : 68 70
pos_MULTDIV          : 32
pos_Operandos        : 19
pos_SUMRES           : 28
pos_comma            : 11
pos_commaLlam        : 69
pos_commaf           : 50
pos_else             : 62
pos_igual            : 16
pos_parens           : 39
pos_vec              : 11
program              : 0
reg_brack            : 47 53 62 63 75 76 77 94
reg_paren            : 47
reglas_var           : 5 14
tipo_funciones       : 1 45
vars_o_espacio       : 1 3 47 94

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . START EDJO VAR_ID SEMICOLON LibreriaT vars_o_espacio tipo_funciones Main

    START           shift and go to state 1

    program                        shift and go to state 2

state 1

    (1) program -> START . EDJO VAR_ID SEMICOLON LibreriaT vars_o_espacio tipo_funciones Main

    EDJO            shift and go to state 3


state 2

    (0) S' -> program .



state 3

    (1) program -> START EDJO . VAR_ID SEMICOLON LibreriaT vars_o_espacio tipo_funciones Main

    VAR_ID          shift and go to state 4


state 4

    (1) program -> START EDJO VAR_ID . SEMICOLON LibreriaT vars_o_espacio tipo_funciones Main

    SEMICOLON       shift and go to state 5


state 5

    (1) program -> START EDJO VAR_ID SEMICOLON . LibreriaT vars_o_espacio tipo_funciones Main
    (2) LibreriaT -> . FROM TUR IMPORT TURTLE SEMICOLON

    FROM            shift and go to state 6

    LibreriaT                      shift and go to state 7

state 6

    (2) LibreriaT -> FROM . TUR IMPORT TURTLE SEMICOLON

    TUR             shift and go to state 8


state 7

    (1) program -> START EDJO VAR_ID SEMICOLON LibreriaT . vars_o_espacio tipo_funciones Main
    (3) vars_o_espacio -> . Vars vars_o_espacio
    (4) vars_o_espacio -> .
    (5) Vars -> . Tipo reglas_var SEMICOLON
    (6) Tipo -> . INT
    (7) Tipo -> . DECIMAL
    (8) Tipo -> . STRING
    (9) Tipo -> . CHAR
    (10) Tipo -> . BOOL

    VOID            reduce using rule 4 (vars_o_espacio -> .)
    MAIN            reduce using rule 4 (vars_o_espacio -> .)
    INT             shift and go to state 10
    DECIMAL         shift and go to state 15
    STRING          shift and go to state 16
    CHAR            shift and go to state 11
    BOOL            shift and go to state 12

    Vars                           shift and go to state 13
    Tipo                           shift and go to state 9
    vars_o_espacio                 shift and go to state 14

state 8

    (2) LibreriaT -> FROM TUR . IMPORT TURTLE SEMICOLON

    IMPORT          shift and go to state 17


state 9

    (5) Vars -> Tipo . reglas_var SEMICOLON
    (11) reglas_var -> . VAR_ID pos_vec pos_comma

    VAR_ID          shift and go to state 18

    reglas_var                     shift and go to state 19

state 10

    (6) Tipo -> INT .

    VAR_ID          reduce using rule 6 (Tipo -> INT .)


state 11

    (9) Tipo -> CHAR .

    VAR_ID          reduce using rule 9 (Tipo -> CHAR .)


state 12

    (10) Tipo -> BOOL .

    VAR_ID          reduce using rule 10 (Tipo -> BOOL .)


state 13

    (3) vars_o_espacio -> Vars . vars_o_espacio
    (3) vars_o_espacio -> . Vars vars_o_espacio
    (4) vars_o_espacio -> .
    (5) Vars -> . Tipo reglas_var SEMICOLON
    (6) Tipo -> . INT
    (7) Tipo -> . DECIMAL
    (8) Tipo -> . STRING
    (9) Tipo -> . CHAR
    (10) Tipo -> . BOOL

    VOID            reduce using rule 4 (vars_o_espacio -> .)
    MAIN            reduce using rule 4 (vars_o_espacio -> .)
    IF              reduce using rule 4 (vars_o_espacio -> .)
    RETURN          reduce using rule 4 (vars_o_espacio -> .)
    PRINT           reduce using rule 4 (vars_o_espacio -> .)
    VAR_ID          reduce using rule 4 (vars_o_espacio -> .)
    FOR             reduce using rule 4 (vars_o_espacio -> .)
    WHILE           reduce using rule 4 (vars_o_espacio -> .)
    DO              reduce using rule 4 (vars_o_espacio -> .)
    LPAREN          reduce using rule 4 (vars_o_espacio -> .)
    SLBRACKET       reduce using rule 4 (vars_o_espacio -> .)
    VAR_INT         reduce using rule 4 (vars_o_espacio -> .)
    VAR_DECIMAL     reduce using rule 4 (vars_o_espacio -> .)
    RET             reduce using rule 4 (vars_o_espacio -> .)
    RBRACKET        reduce using rule 4 (vars_o_espacio -> .)
    INT             shift and go to state 10
    DECIMAL         shift and go to state 15
    STRING          shift and go to state 16
    CHAR            shift and go to state 11
    BOOL            shift and go to state 12

    Tipo                           shift and go to state 9
    Vars                           shift and go to state 13
    vars_o_espacio                 shift and go to state 20

state 14

    (1) program -> START EDJO VAR_ID SEMICOLON LibreriaT vars_o_espacio . tipo_funciones Main
    (45) tipo_funciones -> . Funcs_void tipo_funciones
    (46) tipo_funciones -> .
    (47) Funcs_void -> . VOID VAR_ID LPAREN reg_paren RPAREN LBRACKET vars_o_espacio reg_brack RBRACKET

    MAIN            reduce using rule 46 (tipo_funciones -> .)
    VOID            shift and go to state 23

    tipo_funciones                 shift and go to state 21
    Funcs_void                     shift and go to state 22

state 15

    (7) Tipo -> DECIMAL .

    VAR_ID          reduce using rule 7 (Tipo -> DECIMAL .)


state 16

    (8) Tipo -> STRING .

    VAR_ID          reduce using rule 8 (Tipo -> STRING .)


state 17

    (2) LibreriaT -> FROM TUR IMPORT . TURTLE SEMICOLON

    TURTLE          shift and go to state 24


state 18

    (11) reglas_var -> VAR_ID . pos_vec pos_comma
    (12) pos_vec -> . SLBRACKET VAR_INT SRBRACKET
    (13) pos_vec -> .

    SLBRACKET       shift and go to state 25
    COMMA           reduce using rule 13 (pos_vec -> .)
    SEMICOLON       reduce using rule 13 (pos_vec -> .)

    pos_vec                        shift and go to state 26

state 19

    (5) Vars -> Tipo reglas_var . SEMICOLON

    SEMICOLON       shift and go to state 27


state 20

    (3) vars_o_espacio -> Vars vars_o_espacio .

    VOID            reduce using rule 3 (vars_o_espacio -> Vars vars_o_espacio .)
    MAIN            reduce using rule 3 (vars_o_espacio -> Vars vars_o_espacio .)
    IF              reduce using rule 3 (vars_o_espacio -> Vars vars_o_espacio .)
    RETURN          reduce using rule 3 (vars_o_espacio -> Vars vars_o_espacio .)
    PRINT           reduce using rule 3 (vars_o_espacio -> Vars vars_o_espacio .)
    VAR_ID          reduce using rule 3 (vars_o_espacio -> Vars vars_o_espacio .)
    FOR             reduce using rule 3 (vars_o_espacio -> Vars vars_o_espacio .)
    WHILE           reduce using rule 3 (vars_o_espacio -> Vars vars_o_espacio .)
    DO              reduce using rule 3 (vars_o_espacio -> Vars vars_o_espacio .)
    LPAREN          reduce using rule 3 (vars_o_espacio -> Vars vars_o_espacio .)
    SLBRACKET       reduce using rule 3 (vars_o_espacio -> Vars vars_o_espacio .)
    VAR_INT         reduce using rule 3 (vars_o_espacio -> Vars vars_o_espacio .)
    VAR_DECIMAL     reduce using rule 3 (vars_o_espacio -> Vars vars_o_espacio .)
    RET             reduce using rule 3 (vars_o_espacio -> Vars vars_o_espacio .)
    RBRACKET        reduce using rule 3 (vars_o_espacio -> Vars vars_o_espacio .)


state 21

    (1) program -> START EDJO VAR_ID SEMICOLON LibreriaT vars_o_espacio tipo_funciones . Main
    (94) Main -> . MAIN LPAREN RPAREN LBRACKET vars_o_espacio reg_brack RET ZERO SEMICOLON RBRACKET

    MAIN            shift and go to state 28

    Main                           shift and go to state 29

state 22

    (45) tipo_funciones -> Funcs_void . tipo_funciones
    (45) tipo_funciones -> . Funcs_void tipo_funciones
    (46) tipo_funciones -> .
    (47) Funcs_void -> . VOID VAR_ID LPAREN reg_paren RPAREN LBRACKET vars_o_espacio reg_brack RBRACKET

    MAIN            reduce using rule 46 (tipo_funciones -> .)
    VOID            shift and go to state 23

    tipo_funciones                 shift and go to state 30
    Funcs_void                     shift and go to state 22

state 23

    (47) Funcs_void -> VOID . VAR_ID LPAREN reg_paren RPAREN LBRACKET vars_o_espacio reg_brack RBRACKET

    VAR_ID          shift and go to state 31


state 24

    (2) LibreriaT -> FROM TUR IMPORT TURTLE . SEMICOLON

    SEMICOLON       shift and go to state 32


state 25

    (12) pos_vec -> SLBRACKET . VAR_INT SRBRACKET

    VAR_INT         shift and go to state 33


state 26

    (11) reglas_var -> VAR_ID pos_vec . pos_comma
    (14) pos_comma -> . COMMA reglas_var
    (15) pos_comma -> .

    COMMA           shift and go to state 34
    SEMICOLON       reduce using rule 15 (pos_comma -> .)

    pos_comma                      shift and go to state 35

state 27

    (5) Vars -> Tipo reglas_var SEMICOLON .

    INT             reduce using rule 5 (Vars -> Tipo reglas_var SEMICOLON .)
    DECIMAL         reduce using rule 5 (Vars -> Tipo reglas_var SEMICOLON .)
    STRING          reduce using rule 5 (Vars -> Tipo reglas_var SEMICOLON .)
    CHAR            reduce using rule 5 (Vars -> Tipo reglas_var SEMICOLON .)
    BOOL            reduce using rule 5 (Vars -> Tipo reglas_var SEMICOLON .)
    VOID            reduce using rule 5 (Vars -> Tipo reglas_var SEMICOLON .)
    MAIN            reduce using rule 5 (Vars -> Tipo reglas_var SEMICOLON .)
    IF              reduce using rule 5 (Vars -> Tipo reglas_var SEMICOLON .)
    RETURN          reduce using rule 5 (Vars -> Tipo reglas_var SEMICOLON .)
    PRINT           reduce using rule 5 (Vars -> Tipo reglas_var SEMICOLON .)
    VAR_ID          reduce using rule 5 (Vars -> Tipo reglas_var SEMICOLON .)
    FOR             reduce using rule 5 (Vars -> Tipo reglas_var SEMICOLON .)
    WHILE           reduce using rule 5 (Vars -> Tipo reglas_var SEMICOLON .)
    DO              reduce using rule 5 (Vars -> Tipo reglas_var SEMICOLON .)
    LPAREN          reduce using rule 5 (Vars -> Tipo reglas_var SEMICOLON .)
    SLBRACKET       reduce using rule 5 (Vars -> Tipo reglas_var SEMICOLON .)
    VAR_INT         reduce using rule 5 (Vars -> Tipo reglas_var SEMICOLON .)
    VAR_DECIMAL     reduce using rule 5 (Vars -> Tipo reglas_var SEMICOLON .)
    RET             reduce using rule 5 (Vars -> Tipo reglas_var SEMICOLON .)
    RBRACKET        reduce using rule 5 (Vars -> Tipo reglas_var SEMICOLON .)


state 28

    (94) Main -> MAIN . LPAREN RPAREN LBRACKET vars_o_espacio reg_brack RET ZERO SEMICOLON RBRACKET

    LPAREN          shift and go to state 36


state 29

    (1) program -> START EDJO VAR_ID SEMICOLON LibreriaT vars_o_espacio tipo_funciones Main .

    $end            reduce using rule 1 (program -> START EDJO VAR_ID SEMICOLON LibreriaT vars_o_espacio tipo_funciones Main .)


state 30

    (45) tipo_funciones -> Funcs_void tipo_funciones .

    MAIN            reduce using rule 45 (tipo_funciones -> Funcs_void tipo_funciones .)


state 31

    (47) Funcs_void -> VOID VAR_ID . LPAREN reg_paren RPAREN LBRACKET vars_o_espacio reg_brack RBRACKET

    LPAREN          shift and go to state 37


state 32

    (2) LibreriaT -> FROM TUR IMPORT TURTLE SEMICOLON .

    INT             reduce using rule 2 (LibreriaT -> FROM TUR IMPORT TURTLE SEMICOLON .)
    DECIMAL         reduce using rule 2 (LibreriaT -> FROM TUR IMPORT TURTLE SEMICOLON .)
    STRING          reduce using rule 2 (LibreriaT -> FROM TUR IMPORT TURTLE SEMICOLON .)
    CHAR            reduce using rule 2 (LibreriaT -> FROM TUR IMPORT TURTLE SEMICOLON .)
    BOOL            reduce using rule 2 (LibreriaT -> FROM TUR IMPORT TURTLE SEMICOLON .)
    VOID            reduce using rule 2 (LibreriaT -> FROM TUR IMPORT TURTLE SEMICOLON .)
    MAIN            reduce using rule 2 (LibreriaT -> FROM TUR IMPORT TURTLE SEMICOLON .)


state 33

    (12) pos_vec -> SLBRACKET VAR_INT . SRBRACKET

    SRBRACKET       shift and go to state 38


state 34

    (14) pos_comma -> COMMA . reglas_var
    (11) reglas_var -> . VAR_ID pos_vec pos_comma

    VAR_ID          shift and go to state 18

    reglas_var                     shift and go to state 39

state 35

    (11) reglas_var -> VAR_ID pos_vec pos_comma .

    SEMICOLON       reduce using rule 11 (reglas_var -> VAR_ID pos_vec pos_comma .)


state 36

    (94) Main -> MAIN LPAREN . RPAREN LBRACKET vars_o_espacio reg_brack RET ZERO SEMICOLON RBRACKET

    RPAREN          shift and go to state 40


state 37

    (47) Funcs_void -> VOID VAR_ID LPAREN . reg_paren RPAREN LBRACKET vars_o_espacio reg_brack RBRACKET
    (48) reg_paren -> . param
    (49) reg_paren -> .
    (50) param -> . Tipo VAR_ID pos_commaf
    (6) Tipo -> . INT
    (7) Tipo -> . DECIMAL
    (8) Tipo -> . STRING
    (9) Tipo -> . CHAR
    (10) Tipo -> . BOOL

    RPAREN          reduce using rule 49 (reg_paren -> .)
    INT             shift and go to state 10
    DECIMAL         shift and go to state 15
    STRING          shift and go to state 16
    CHAR            shift and go to state 11
    BOOL            shift and go to state 12

    reg_paren                      shift and go to state 41
    Tipo                           shift and go to state 42
    param                          shift and go to state 43

state 38

    (12) pos_vec -> SLBRACKET VAR_INT SRBRACKET .

    COMMA           reduce using rule 12 (pos_vec -> SLBRACKET VAR_INT SRBRACKET .)
    SEMICOLON       reduce using rule 12 (pos_vec -> SLBRACKET VAR_INT SRBRACKET .)


state 39

    (14) pos_comma -> COMMA reglas_var .

    SEMICOLON       reduce using rule 14 (pos_comma -> COMMA reglas_var .)


state 40

    (94) Main -> MAIN LPAREN RPAREN . LBRACKET vars_o_espacio reg_brack RET ZERO SEMICOLON RBRACKET

    LBRACKET        shift and go to state 44


state 41

    (47) Funcs_void -> VOID VAR_ID LPAREN reg_paren . RPAREN LBRACKET vars_o_espacio reg_brack RBRACKET

    RPAREN          shift and go to state 45


state 42

    (50) param -> Tipo . VAR_ID pos_commaf

    VAR_ID          shift and go to state 46


state 43

    (48) reg_paren -> param .

    RPAREN          reduce using rule 48 (reg_paren -> param .)


state 44

    (94) Main -> MAIN LPAREN RPAREN LBRACKET . vars_o_espacio reg_brack RET ZERO SEMICOLON RBRACKET
    (3) vars_o_espacio -> . Vars vars_o_espacio
    (4) vars_o_espacio -> .
    (5) Vars -> . Tipo reglas_var SEMICOLON
    (6) Tipo -> . INT
    (7) Tipo -> . DECIMAL
    (8) Tipo -> . STRING
    (9) Tipo -> . CHAR
    (10) Tipo -> . BOOL

    IF              reduce using rule 4 (vars_o_espacio -> .)
    RETURN          reduce using rule 4 (vars_o_espacio -> .)
    PRINT           reduce using rule 4 (vars_o_espacio -> .)
    VAR_ID          reduce using rule 4 (vars_o_espacio -> .)
    FOR             reduce using rule 4 (vars_o_espacio -> .)
    WHILE           reduce using rule 4 (vars_o_espacio -> .)
    DO              reduce using rule 4 (vars_o_espacio -> .)
    LPAREN          reduce using rule 4 (vars_o_espacio -> .)
    SLBRACKET       reduce using rule 4 (vars_o_espacio -> .)
    VAR_INT         reduce using rule 4 (vars_o_espacio -> .)
    VAR_DECIMAL     reduce using rule 4 (vars_o_espacio -> .)
    RET             reduce using rule 4 (vars_o_espacio -> .)
    INT             shift and go to state 10
    DECIMAL         shift and go to state 15
    STRING          shift and go to state 16
    CHAR            shift and go to state 11
    BOOL            shift and go to state 12

    Tipo                           shift and go to state 9
    Vars                           shift and go to state 13
    vars_o_espacio                 shift and go to state 47

state 45

    (47) Funcs_void -> VOID VAR_ID LPAREN reg_paren RPAREN . LBRACKET vars_o_espacio reg_brack RBRACKET

    LBRACKET        shift and go to state 48


state 46

    (50) param -> Tipo VAR_ID . pos_commaf
    (51) pos_commaf -> . COMMA param
    (52) pos_commaf -> .

    COMMA           shift and go to state 50
    RPAREN          reduce using rule 52 (pos_commaf -> .)

    pos_commaf                     shift and go to state 49

state 47

    (94) Main -> MAIN LPAREN RPAREN LBRACKET vars_o_espacio . reg_brack RET ZERO SEMICOLON RBRACKET
    (53) reg_brack -> . Estatutos reg_brack
    (54) reg_brack -> .
    (55) Estatutos -> . Condicion
    (56) Estatutos -> . Ciclo
    (57) Estatutos -> . Return
    (58) Estatutos -> . Exp SEMICOLON
    (59) Estatutos -> . Print
    (60) Estatutos -> . Llamada_Func
    (61) Estatutos -> . TurtleMotion
    (62) Condicion -> . IF LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET pos_else
    (72) Ciclo -> . For
    (73) Ciclo -> . While
    (74) Ciclo -> . DoWhile
    (65) Return -> . RETURN Exp SEMICOLON
    (16) Exp -> . ExpI pos_igual
    (66) Print -> . PRINT LPAREN VAR_STRING RPAREN SEMICOLON
    (67) Print -> . PRINT LPAREN Exp RPAREN SEMICOLON
    (68) Llamada_Func -> . VAR_ID LPAREN paramLlam RPAREN SEMICOLON
    (84) TurtleMotion -> . Position
    (85) TurtleMotion -> . Right
    (86) TurtleMotion -> . Left
    (87) TurtleMotion -> . Forward
    (88) TurtleMotion -> . Circle
    (77) For -> . FOR LPAREN VAR_ID ASSIGN Exp SEMICOLON Exp SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (75) While -> . WHILE LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET
    (76) DoWhile -> . DO LBRACKET reg_brack RBRACKET WHILE LPAREN Exp RPAREN SEMICOLON
    (19) ExpI -> . ExpK pos_Operandos
    (89) Position -> . VAR_ID POINT POS LPAREN RPAREN SEMICOLON
    (91) Right -> . VAR_ID POINT RIGHT LPAREN Exp RPAREN SEMICOLON
    (92) Left -> . VAR_ID POINT LEFT LPAREN Exp RPAREN SEMICOLON
    (90) Forward -> . VAR_ID POINT FORWARD LPAREN Exp RPAREN SEMICOLON
    (93) Circle -> . VAR_ID POINT CIRCLE LPAREN Exp RPAREN SEMICOLON
    (28) ExpK -> . ExpT pos_SUMRES
    (32) ExpT -> . ExpF pos_MULTDIV
    (36) ExpF -> . VAR_CTE
    (37) ExpF -> . LPAREN Exp RPAREN
    (38) ExpF -> . SLBRACKET Exp SRBRACKET
    (39) ExpF -> . VAR_ID pos_parens
    (40) VAR_CTE -> . VAR_INT
    (41) VAR_CTE -> . VAR_DECIMAL

    RET             reduce using rule 54 (reg_brack -> .)
    IF              shift and go to state 76
    RETURN          shift and go to state 52
    PRINT           shift and go to state 56
    VAR_ID          shift and go to state 63
    FOR             shift and go to state 69
    WHILE           shift and go to state 57
    DO              shift and go to state 51
    LPAREN          shift and go to state 73
    SLBRACKET       shift and go to state 77
    VAR_INT         shift and go to state 79
    VAR_DECIMAL     shift and go to state 62

    Ciclo                          shift and go to state 53
    For                            shift and go to state 54
    reg_brack                      shift and go to state 55
    VAR_CTE                        shift and go to state 70
    Print                          shift and go to state 60
    Condicion                      shift and go to state 58
    Forward                        shift and go to state 82
    Circle                         shift and go to state 61
    Return                         shift and go to state 74
    DoWhile                        shift and go to state 65
    Estatutos                      shift and go to state 66
    TurtleMotion                   shift and go to state 68
    While                          shift and go to state 71
    Exp                            shift and go to state 72
    Position                       shift and go to state 59
    Llamada_Func                   shift and go to state 75
    Left                           shift and go to state 67
    Right                          shift and go to state 78
    ExpT                           shift and go to state 80
    ExpK                           shift and go to state 81
    ExpI                           shift and go to state 64
    ExpF                           shift and go to state 83

state 48

    (47) Funcs_void -> VOID VAR_ID LPAREN reg_paren RPAREN LBRACKET . vars_o_espacio reg_brack RBRACKET
    (3) vars_o_espacio -> . Vars vars_o_espacio
    (4) vars_o_espacio -> .
    (5) Vars -> . Tipo reglas_var SEMICOLON
    (6) Tipo -> . INT
    (7) Tipo -> . DECIMAL
    (8) Tipo -> . STRING
    (9) Tipo -> . CHAR
    (10) Tipo -> . BOOL

    IF              reduce using rule 4 (vars_o_espacio -> .)
    RETURN          reduce using rule 4 (vars_o_espacio -> .)
    PRINT           reduce using rule 4 (vars_o_espacio -> .)
    VAR_ID          reduce using rule 4 (vars_o_espacio -> .)
    FOR             reduce using rule 4 (vars_o_espacio -> .)
    WHILE           reduce using rule 4 (vars_o_espacio -> .)
    DO              reduce using rule 4 (vars_o_espacio -> .)
    LPAREN          reduce using rule 4 (vars_o_espacio -> .)
    SLBRACKET       reduce using rule 4 (vars_o_espacio -> .)
    VAR_INT         reduce using rule 4 (vars_o_espacio -> .)
    VAR_DECIMAL     reduce using rule 4 (vars_o_espacio -> .)
    RBRACKET        reduce using rule 4 (vars_o_espacio -> .)
    INT             shift and go to state 10
    DECIMAL         shift and go to state 15
    STRING          shift and go to state 16
    CHAR            shift and go to state 11
    BOOL            shift and go to state 12

    Vars                           shift and go to state 13
    Tipo                           shift and go to state 9
    vars_o_espacio                 shift and go to state 84

state 49

    (50) param -> Tipo VAR_ID pos_commaf .

    RPAREN          reduce using rule 50 (param -> Tipo VAR_ID pos_commaf .)


state 50

    (51) pos_commaf -> COMMA . param
    (50) param -> . Tipo VAR_ID pos_commaf
    (6) Tipo -> . INT
    (7) Tipo -> . DECIMAL
    (8) Tipo -> . STRING
    (9) Tipo -> . CHAR
    (10) Tipo -> . BOOL

    INT             shift and go to state 10
    DECIMAL         shift and go to state 15
    STRING          shift and go to state 16
    CHAR            shift and go to state 11
    BOOL            shift and go to state 12

    Tipo                           shift and go to state 42
    param                          shift and go to state 85

state 51

    (76) DoWhile -> DO . LBRACKET reg_brack RBRACKET WHILE LPAREN Exp RPAREN SEMICOLON

    LBRACKET        shift and go to state 86


state 52

    (65) Return -> RETURN . Exp SEMICOLON
    (16) Exp -> . ExpI pos_igual
    (19) ExpI -> . ExpK pos_Operandos
    (28) ExpK -> . ExpT pos_SUMRES
    (32) ExpT -> . ExpF pos_MULTDIV
    (36) ExpF -> . VAR_CTE
    (37) ExpF -> . LPAREN Exp RPAREN
    (38) ExpF -> . SLBRACKET Exp SRBRACKET
    (39) ExpF -> . VAR_ID pos_parens
    (40) VAR_CTE -> . VAR_INT
    (41) VAR_CTE -> . VAR_DECIMAL

    LPAREN          shift and go to state 73
    SLBRACKET       shift and go to state 77
    VAR_ID          shift and go to state 87
    VAR_INT         shift and go to state 79
    VAR_DECIMAL     shift and go to state 62

    ExpT                           shift and go to state 80
    ExpK                           shift and go to state 81
    ExpI                           shift and go to state 64
    Exp                            shift and go to state 88
    VAR_CTE                        shift and go to state 70
    ExpF                           shift and go to state 83

state 53

    (56) Estatutos -> Ciclo .

    IF              reduce using rule 56 (Estatutos -> Ciclo .)
    RETURN          reduce using rule 56 (Estatutos -> Ciclo .)
    PRINT           reduce using rule 56 (Estatutos -> Ciclo .)
    VAR_ID          reduce using rule 56 (Estatutos -> Ciclo .)
    FOR             reduce using rule 56 (Estatutos -> Ciclo .)
    WHILE           reduce using rule 56 (Estatutos -> Ciclo .)
    DO              reduce using rule 56 (Estatutos -> Ciclo .)
    LPAREN          reduce using rule 56 (Estatutos -> Ciclo .)
    SLBRACKET       reduce using rule 56 (Estatutos -> Ciclo .)
    VAR_INT         reduce using rule 56 (Estatutos -> Ciclo .)
    VAR_DECIMAL     reduce using rule 56 (Estatutos -> Ciclo .)
    RET             reduce using rule 56 (Estatutos -> Ciclo .)
    RBRACKET        reduce using rule 56 (Estatutos -> Ciclo .)


state 54

    (72) Ciclo -> For .

    IF              reduce using rule 72 (Ciclo -> For .)
    RETURN          reduce using rule 72 (Ciclo -> For .)
    PRINT           reduce using rule 72 (Ciclo -> For .)
    VAR_ID          reduce using rule 72 (Ciclo -> For .)
    FOR             reduce using rule 72 (Ciclo -> For .)
    WHILE           reduce using rule 72 (Ciclo -> For .)
    DO              reduce using rule 72 (Ciclo -> For .)
    LPAREN          reduce using rule 72 (Ciclo -> For .)
    SLBRACKET       reduce using rule 72 (Ciclo -> For .)
    VAR_INT         reduce using rule 72 (Ciclo -> For .)
    VAR_DECIMAL     reduce using rule 72 (Ciclo -> For .)
    RBRACKET        reduce using rule 72 (Ciclo -> For .)
    RET             reduce using rule 72 (Ciclo -> For .)


state 55

    (94) Main -> MAIN LPAREN RPAREN LBRACKET vars_o_espacio reg_brack . RET ZERO SEMICOLON RBRACKET

    RET             shift and go to state 89


state 56

    (66) Print -> PRINT . LPAREN VAR_STRING RPAREN SEMICOLON
    (67) Print -> PRINT . LPAREN Exp RPAREN SEMICOLON

    LPAREN          shift and go to state 90


state 57

    (75) While -> WHILE . LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET

    LPAREN          shift and go to state 91


state 58

    (55) Estatutos -> Condicion .

    IF              reduce using rule 55 (Estatutos -> Condicion .)
    RETURN          reduce using rule 55 (Estatutos -> Condicion .)
    PRINT           reduce using rule 55 (Estatutos -> Condicion .)
    VAR_ID          reduce using rule 55 (Estatutos -> Condicion .)
    FOR             reduce using rule 55 (Estatutos -> Condicion .)
    WHILE           reduce using rule 55 (Estatutos -> Condicion .)
    DO              reduce using rule 55 (Estatutos -> Condicion .)
    LPAREN          reduce using rule 55 (Estatutos -> Condicion .)
    SLBRACKET       reduce using rule 55 (Estatutos -> Condicion .)
    VAR_INT         reduce using rule 55 (Estatutos -> Condicion .)
    VAR_DECIMAL     reduce using rule 55 (Estatutos -> Condicion .)
    RET             reduce using rule 55 (Estatutos -> Condicion .)
    RBRACKET        reduce using rule 55 (Estatutos -> Condicion .)


state 59

    (84) TurtleMotion -> Position .

    IF              reduce using rule 84 (TurtleMotion -> Position .)
    RETURN          reduce using rule 84 (TurtleMotion -> Position .)
    PRINT           reduce using rule 84 (TurtleMotion -> Position .)
    VAR_ID          reduce using rule 84 (TurtleMotion -> Position .)
    FOR             reduce using rule 84 (TurtleMotion -> Position .)
    WHILE           reduce using rule 84 (TurtleMotion -> Position .)
    DO              reduce using rule 84 (TurtleMotion -> Position .)
    LPAREN          reduce using rule 84 (TurtleMotion -> Position .)
    SLBRACKET       reduce using rule 84 (TurtleMotion -> Position .)
    VAR_INT         reduce using rule 84 (TurtleMotion -> Position .)
    VAR_DECIMAL     reduce using rule 84 (TurtleMotion -> Position .)
    RBRACKET        reduce using rule 84 (TurtleMotion -> Position .)
    RET             reduce using rule 84 (TurtleMotion -> Position .)


state 60

    (59) Estatutos -> Print .

    IF              reduce using rule 59 (Estatutos -> Print .)
    RETURN          reduce using rule 59 (Estatutos -> Print .)
    PRINT           reduce using rule 59 (Estatutos -> Print .)
    VAR_ID          reduce using rule 59 (Estatutos -> Print .)
    FOR             reduce using rule 59 (Estatutos -> Print .)
    WHILE           reduce using rule 59 (Estatutos -> Print .)
    DO              reduce using rule 59 (Estatutos -> Print .)
    LPAREN          reduce using rule 59 (Estatutos -> Print .)
    SLBRACKET       reduce using rule 59 (Estatutos -> Print .)
    VAR_INT         reduce using rule 59 (Estatutos -> Print .)
    VAR_DECIMAL     reduce using rule 59 (Estatutos -> Print .)
    RET             reduce using rule 59 (Estatutos -> Print .)
    RBRACKET        reduce using rule 59 (Estatutos -> Print .)


state 61

    (88) TurtleMotion -> Circle .

    IF              reduce using rule 88 (TurtleMotion -> Circle .)
    RETURN          reduce using rule 88 (TurtleMotion -> Circle .)
    PRINT           reduce using rule 88 (TurtleMotion -> Circle .)
    VAR_ID          reduce using rule 88 (TurtleMotion -> Circle .)
    FOR             reduce using rule 88 (TurtleMotion -> Circle .)
    WHILE           reduce using rule 88 (TurtleMotion -> Circle .)
    DO              reduce using rule 88 (TurtleMotion -> Circle .)
    LPAREN          reduce using rule 88 (TurtleMotion -> Circle .)
    SLBRACKET       reduce using rule 88 (TurtleMotion -> Circle .)
    VAR_INT         reduce using rule 88 (TurtleMotion -> Circle .)
    VAR_DECIMAL     reduce using rule 88 (TurtleMotion -> Circle .)
    RBRACKET        reduce using rule 88 (TurtleMotion -> Circle .)
    RET             reduce using rule 88 (TurtleMotion -> Circle .)


state 62

    (41) VAR_CTE -> VAR_DECIMAL .

    MULT            reduce using rule 41 (VAR_CTE -> VAR_DECIMAL .)
    DIV             reduce using rule 41 (VAR_CTE -> VAR_DECIMAL .)
    PLUS            reduce using rule 41 (VAR_CTE -> VAR_DECIMAL .)
    MINUS           reduce using rule 41 (VAR_CTE -> VAR_DECIMAL .)
    LT              reduce using rule 41 (VAR_CTE -> VAR_DECIMAL .)
    GT              reduce using rule 41 (VAR_CTE -> VAR_DECIMAL .)
    NE              reduce using rule 41 (VAR_CTE -> VAR_DECIMAL .)
    LE              reduce using rule 41 (VAR_CTE -> VAR_DECIMAL .)
    GE              reduce using rule 41 (VAR_CTE -> VAR_DECIMAL .)
    EQ              reduce using rule 41 (VAR_CTE -> VAR_DECIMAL .)
    ASSIGN          reduce using rule 41 (VAR_CTE -> VAR_DECIMAL .)
    RPAREN          reduce using rule 41 (VAR_CTE -> VAR_DECIMAL .)
    SEMICOLON       reduce using rule 41 (VAR_CTE -> VAR_DECIMAL .)
    SRBRACKET       reduce using rule 41 (VAR_CTE -> VAR_DECIMAL .)
    COMMA           reduce using rule 41 (VAR_CTE -> VAR_DECIMAL .)


state 63

    (68) Llamada_Func -> VAR_ID . LPAREN paramLlam RPAREN SEMICOLON
    (89) Position -> VAR_ID . POINT POS LPAREN RPAREN SEMICOLON
    (91) Right -> VAR_ID . POINT RIGHT LPAREN Exp RPAREN SEMICOLON
    (92) Left -> VAR_ID . POINT LEFT LPAREN Exp RPAREN SEMICOLON
    (90) Forward -> VAR_ID . POINT FORWARD LPAREN Exp RPAREN SEMICOLON
    (93) Circle -> VAR_ID . POINT CIRCLE LPAREN Exp RPAREN SEMICOLON
    (39) ExpF -> VAR_ID . pos_parens
    (42) pos_parens -> . LPAREN Exp RPAREN
    (43) pos_parens -> . SLBRACKET Exp SRBRACKET
    (44) pos_parens -> .

    LPAREN          shift and go to state 95
    POINT           shift and go to state 93
    SLBRACKET       shift and go to state 92
    MULT            reduce using rule 44 (pos_parens -> .)
    DIV             reduce using rule 44 (pos_parens -> .)
    PLUS            reduce using rule 44 (pos_parens -> .)
    MINUS           reduce using rule 44 (pos_parens -> .)
    LT              reduce using rule 44 (pos_parens -> .)
    GT              reduce using rule 44 (pos_parens -> .)
    NE              reduce using rule 44 (pos_parens -> .)
    LE              reduce using rule 44 (pos_parens -> .)
    GE              reduce using rule 44 (pos_parens -> .)
    EQ              reduce using rule 44 (pos_parens -> .)
    ASSIGN          reduce using rule 44 (pos_parens -> .)
    SEMICOLON       reduce using rule 44 (pos_parens -> .)

    pos_parens                     shift and go to state 94

state 64

    (16) Exp -> ExpI . pos_igual
    (17) pos_igual -> . ASSIGN ExpI
    (18) pos_igual -> .

    ASSIGN          shift and go to state 97
    SEMICOLON       reduce using rule 18 (pos_igual -> .)
    RPAREN          reduce using rule 18 (pos_igual -> .)
    SRBRACKET       reduce using rule 18 (pos_igual -> .)
    COMMA           reduce using rule 18 (pos_igual -> .)

    pos_igual                      shift and go to state 96

state 65

    (74) Ciclo -> DoWhile .

    IF              reduce using rule 74 (Ciclo -> DoWhile .)
    RETURN          reduce using rule 74 (Ciclo -> DoWhile .)
    PRINT           reduce using rule 74 (Ciclo -> DoWhile .)
    VAR_ID          reduce using rule 74 (Ciclo -> DoWhile .)
    FOR             reduce using rule 74 (Ciclo -> DoWhile .)
    WHILE           reduce using rule 74 (Ciclo -> DoWhile .)
    DO              reduce using rule 74 (Ciclo -> DoWhile .)
    LPAREN          reduce using rule 74 (Ciclo -> DoWhile .)
    SLBRACKET       reduce using rule 74 (Ciclo -> DoWhile .)
    VAR_INT         reduce using rule 74 (Ciclo -> DoWhile .)
    VAR_DECIMAL     reduce using rule 74 (Ciclo -> DoWhile .)
    RBRACKET        reduce using rule 74 (Ciclo -> DoWhile .)
    RET             reduce using rule 74 (Ciclo -> DoWhile .)


state 66

    (53) reg_brack -> Estatutos . reg_brack
    (53) reg_brack -> . Estatutos reg_brack
    (54) reg_brack -> .
    (55) Estatutos -> . Condicion
    (56) Estatutos -> . Ciclo
    (57) Estatutos -> . Return
    (58) Estatutos -> . Exp SEMICOLON
    (59) Estatutos -> . Print
    (60) Estatutos -> . Llamada_Func
    (61) Estatutos -> . TurtleMotion
    (62) Condicion -> . IF LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET pos_else
    (72) Ciclo -> . For
    (73) Ciclo -> . While
    (74) Ciclo -> . DoWhile
    (65) Return -> . RETURN Exp SEMICOLON
    (16) Exp -> . ExpI pos_igual
    (66) Print -> . PRINT LPAREN VAR_STRING RPAREN SEMICOLON
    (67) Print -> . PRINT LPAREN Exp RPAREN SEMICOLON
    (68) Llamada_Func -> . VAR_ID LPAREN paramLlam RPAREN SEMICOLON
    (84) TurtleMotion -> . Position
    (85) TurtleMotion -> . Right
    (86) TurtleMotion -> . Left
    (87) TurtleMotion -> . Forward
    (88) TurtleMotion -> . Circle
    (77) For -> . FOR LPAREN VAR_ID ASSIGN Exp SEMICOLON Exp SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (75) While -> . WHILE LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET
    (76) DoWhile -> . DO LBRACKET reg_brack RBRACKET WHILE LPAREN Exp RPAREN SEMICOLON
    (19) ExpI -> . ExpK pos_Operandos
    (89) Position -> . VAR_ID POINT POS LPAREN RPAREN SEMICOLON
    (91) Right -> . VAR_ID POINT RIGHT LPAREN Exp RPAREN SEMICOLON
    (92) Left -> . VAR_ID POINT LEFT LPAREN Exp RPAREN SEMICOLON
    (90) Forward -> . VAR_ID POINT FORWARD LPAREN Exp RPAREN SEMICOLON
    (93) Circle -> . VAR_ID POINT CIRCLE LPAREN Exp RPAREN SEMICOLON
    (28) ExpK -> . ExpT pos_SUMRES
    (32) ExpT -> . ExpF pos_MULTDIV
    (36) ExpF -> . VAR_CTE
    (37) ExpF -> . LPAREN Exp RPAREN
    (38) ExpF -> . SLBRACKET Exp SRBRACKET
    (39) ExpF -> . VAR_ID pos_parens
    (40) VAR_CTE -> . VAR_INT
    (41) VAR_CTE -> . VAR_DECIMAL

    RET             reduce using rule 54 (reg_brack -> .)
    RBRACKET        reduce using rule 54 (reg_brack -> .)
    IF              shift and go to state 76
    RETURN          shift and go to state 52
    PRINT           shift and go to state 56
    VAR_ID          shift and go to state 63
    FOR             shift and go to state 69
    WHILE           shift and go to state 57
    DO              shift and go to state 51
    LPAREN          shift and go to state 73
    SLBRACKET       shift and go to state 77
    VAR_INT         shift and go to state 79
    VAR_DECIMAL     shift and go to state 62

    Ciclo                          shift and go to state 53
    For                            shift and go to state 54
    reg_brack                      shift and go to state 98
    VAR_CTE                        shift and go to state 70
    Print                          shift and go to state 60
    Condicion                      shift and go to state 58
    Forward                        shift and go to state 82
    Circle                         shift and go to state 61
    Return                         shift and go to state 74
    DoWhile                        shift and go to state 65
    Estatutos                      shift and go to state 66
    TurtleMotion                   shift and go to state 68
    While                          shift and go to state 71
    Exp                            shift and go to state 72
    Position                       shift and go to state 59
    Llamada_Func                   shift and go to state 75
    Left                           shift and go to state 67
    Right                          shift and go to state 78
    ExpT                           shift and go to state 80
    ExpK                           shift and go to state 81
    ExpI                           shift and go to state 64
    ExpF                           shift and go to state 83

state 67

    (86) TurtleMotion -> Left .

    IF              reduce using rule 86 (TurtleMotion -> Left .)
    RETURN          reduce using rule 86 (TurtleMotion -> Left .)
    PRINT           reduce using rule 86 (TurtleMotion -> Left .)
    VAR_ID          reduce using rule 86 (TurtleMotion -> Left .)
    FOR             reduce using rule 86 (TurtleMotion -> Left .)
    WHILE           reduce using rule 86 (TurtleMotion -> Left .)
    DO              reduce using rule 86 (TurtleMotion -> Left .)
    LPAREN          reduce using rule 86 (TurtleMotion -> Left .)
    SLBRACKET       reduce using rule 86 (TurtleMotion -> Left .)
    VAR_INT         reduce using rule 86 (TurtleMotion -> Left .)
    VAR_DECIMAL     reduce using rule 86 (TurtleMotion -> Left .)
    RBRACKET        reduce using rule 86 (TurtleMotion -> Left .)
    RET             reduce using rule 86 (TurtleMotion -> Left .)


state 68

    (61) Estatutos -> TurtleMotion .

    IF              reduce using rule 61 (Estatutos -> TurtleMotion .)
    RETURN          reduce using rule 61 (Estatutos -> TurtleMotion .)
    PRINT           reduce using rule 61 (Estatutos -> TurtleMotion .)
    VAR_ID          reduce using rule 61 (Estatutos -> TurtleMotion .)
    FOR             reduce using rule 61 (Estatutos -> TurtleMotion .)
    WHILE           reduce using rule 61 (Estatutos -> TurtleMotion .)
    DO              reduce using rule 61 (Estatutos -> TurtleMotion .)
    LPAREN          reduce using rule 61 (Estatutos -> TurtleMotion .)
    SLBRACKET       reduce using rule 61 (Estatutos -> TurtleMotion .)
    VAR_INT         reduce using rule 61 (Estatutos -> TurtleMotion .)
    VAR_DECIMAL     reduce using rule 61 (Estatutos -> TurtleMotion .)
    RET             reduce using rule 61 (Estatutos -> TurtleMotion .)
    RBRACKET        reduce using rule 61 (Estatutos -> TurtleMotion .)


state 69

    (77) For -> FOR . LPAREN VAR_ID ASSIGN Exp SEMICOLON Exp SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET

    LPAREN          shift and go to state 99


state 70

    (36) ExpF -> VAR_CTE .

    MULT            reduce using rule 36 (ExpF -> VAR_CTE .)
    DIV             reduce using rule 36 (ExpF -> VAR_CTE .)
    PLUS            reduce using rule 36 (ExpF -> VAR_CTE .)
    MINUS           reduce using rule 36 (ExpF -> VAR_CTE .)
    LT              reduce using rule 36 (ExpF -> VAR_CTE .)
    GT              reduce using rule 36 (ExpF -> VAR_CTE .)
    NE              reduce using rule 36 (ExpF -> VAR_CTE .)
    LE              reduce using rule 36 (ExpF -> VAR_CTE .)
    GE              reduce using rule 36 (ExpF -> VAR_CTE .)
    EQ              reduce using rule 36 (ExpF -> VAR_CTE .)
    ASSIGN          reduce using rule 36 (ExpF -> VAR_CTE .)
    SEMICOLON       reduce using rule 36 (ExpF -> VAR_CTE .)
    RPAREN          reduce using rule 36 (ExpF -> VAR_CTE .)
    SRBRACKET       reduce using rule 36 (ExpF -> VAR_CTE .)
    COMMA           reduce using rule 36 (ExpF -> VAR_CTE .)


state 71

    (73) Ciclo -> While .

    IF              reduce using rule 73 (Ciclo -> While .)
    RETURN          reduce using rule 73 (Ciclo -> While .)
    PRINT           reduce using rule 73 (Ciclo -> While .)
    VAR_ID          reduce using rule 73 (Ciclo -> While .)
    FOR             reduce using rule 73 (Ciclo -> While .)
    WHILE           reduce using rule 73 (Ciclo -> While .)
    DO              reduce using rule 73 (Ciclo -> While .)
    LPAREN          reduce using rule 73 (Ciclo -> While .)
    SLBRACKET       reduce using rule 73 (Ciclo -> While .)
    VAR_INT         reduce using rule 73 (Ciclo -> While .)
    VAR_DECIMAL     reduce using rule 73 (Ciclo -> While .)
    RBRACKET        reduce using rule 73 (Ciclo -> While .)
    RET             reduce using rule 73 (Ciclo -> While .)


state 72

    (58) Estatutos -> Exp . SEMICOLON

    SEMICOLON       shift and go to state 100


state 73

    (37) ExpF -> LPAREN . Exp RPAREN
    (16) Exp -> . ExpI pos_igual
    (19) ExpI -> . ExpK pos_Operandos
    (28) ExpK -> . ExpT pos_SUMRES
    (32) ExpT -> . ExpF pos_MULTDIV
    (36) ExpF -> . VAR_CTE
    (37) ExpF -> . LPAREN Exp RPAREN
    (38) ExpF -> . SLBRACKET Exp SRBRACKET
    (39) ExpF -> . VAR_ID pos_parens
    (40) VAR_CTE -> . VAR_INT
    (41) VAR_CTE -> . VAR_DECIMAL

    LPAREN          shift and go to state 73
    SLBRACKET       shift and go to state 77
    VAR_ID          shift and go to state 87
    VAR_INT         shift and go to state 79
    VAR_DECIMAL     shift and go to state 62

    ExpT                           shift and go to state 80
    ExpK                           shift and go to state 81
    ExpI                           shift and go to state 64
    Exp                            shift and go to state 101
    VAR_CTE                        shift and go to state 70
    ExpF                           shift and go to state 83

state 74

    (57) Estatutos -> Return .

    IF              reduce using rule 57 (Estatutos -> Return .)
    RETURN          reduce using rule 57 (Estatutos -> Return .)
    PRINT           reduce using rule 57 (Estatutos -> Return .)
    VAR_ID          reduce using rule 57 (Estatutos -> Return .)
    FOR             reduce using rule 57 (Estatutos -> Return .)
    WHILE           reduce using rule 57 (Estatutos -> Return .)
    DO              reduce using rule 57 (Estatutos -> Return .)
    LPAREN          reduce using rule 57 (Estatutos -> Return .)
    SLBRACKET       reduce using rule 57 (Estatutos -> Return .)
    VAR_INT         reduce using rule 57 (Estatutos -> Return .)
    VAR_DECIMAL     reduce using rule 57 (Estatutos -> Return .)
    RET             reduce using rule 57 (Estatutos -> Return .)
    RBRACKET        reduce using rule 57 (Estatutos -> Return .)


state 75

    (60) Estatutos -> Llamada_Func .

    IF              reduce using rule 60 (Estatutos -> Llamada_Func .)
    RETURN          reduce using rule 60 (Estatutos -> Llamada_Func .)
    PRINT           reduce using rule 60 (Estatutos -> Llamada_Func .)
    VAR_ID          reduce using rule 60 (Estatutos -> Llamada_Func .)
    FOR             reduce using rule 60 (Estatutos -> Llamada_Func .)
    WHILE           reduce using rule 60 (Estatutos -> Llamada_Func .)
    DO              reduce using rule 60 (Estatutos -> Llamada_Func .)
    LPAREN          reduce using rule 60 (Estatutos -> Llamada_Func .)
    SLBRACKET       reduce using rule 60 (Estatutos -> Llamada_Func .)
    VAR_INT         reduce using rule 60 (Estatutos -> Llamada_Func .)
    VAR_DECIMAL     reduce using rule 60 (Estatutos -> Llamada_Func .)
    RET             reduce using rule 60 (Estatutos -> Llamada_Func .)
    RBRACKET        reduce using rule 60 (Estatutos -> Llamada_Func .)


state 76

    (62) Condicion -> IF . LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET pos_else

    LPAREN          shift and go to state 102


state 77

    (38) ExpF -> SLBRACKET . Exp SRBRACKET
    (16) Exp -> . ExpI pos_igual
    (19) ExpI -> . ExpK pos_Operandos
    (28) ExpK -> . ExpT pos_SUMRES
    (32) ExpT -> . ExpF pos_MULTDIV
    (36) ExpF -> . VAR_CTE
    (37) ExpF -> . LPAREN Exp RPAREN
    (38) ExpF -> . SLBRACKET Exp SRBRACKET
    (39) ExpF -> . VAR_ID pos_parens
    (40) VAR_CTE -> . VAR_INT
    (41) VAR_CTE -> . VAR_DECIMAL

    LPAREN          shift and go to state 73
    SLBRACKET       shift and go to state 77
    VAR_ID          shift and go to state 87
    VAR_INT         shift and go to state 79
    VAR_DECIMAL     shift and go to state 62

    ExpT                           shift and go to state 80
    ExpK                           shift and go to state 81
    ExpI                           shift and go to state 64
    Exp                            shift and go to state 103
    VAR_CTE                        shift and go to state 70
    ExpF                           shift and go to state 83

state 78

    (85) TurtleMotion -> Right .

    IF              reduce using rule 85 (TurtleMotion -> Right .)
    RETURN          reduce using rule 85 (TurtleMotion -> Right .)
    PRINT           reduce using rule 85 (TurtleMotion -> Right .)
    VAR_ID          reduce using rule 85 (TurtleMotion -> Right .)
    FOR             reduce using rule 85 (TurtleMotion -> Right .)
    WHILE           reduce using rule 85 (TurtleMotion -> Right .)
    DO              reduce using rule 85 (TurtleMotion -> Right .)
    LPAREN          reduce using rule 85 (TurtleMotion -> Right .)
    SLBRACKET       reduce using rule 85 (TurtleMotion -> Right .)
    VAR_INT         reduce using rule 85 (TurtleMotion -> Right .)
    VAR_DECIMAL     reduce using rule 85 (TurtleMotion -> Right .)
    RBRACKET        reduce using rule 85 (TurtleMotion -> Right .)
    RET             reduce using rule 85 (TurtleMotion -> Right .)


state 79

    (40) VAR_CTE -> VAR_INT .

    MULT            reduce using rule 40 (VAR_CTE -> VAR_INT .)
    DIV             reduce using rule 40 (VAR_CTE -> VAR_INT .)
    PLUS            reduce using rule 40 (VAR_CTE -> VAR_INT .)
    MINUS           reduce using rule 40 (VAR_CTE -> VAR_INT .)
    LT              reduce using rule 40 (VAR_CTE -> VAR_INT .)
    GT              reduce using rule 40 (VAR_CTE -> VAR_INT .)
    NE              reduce using rule 40 (VAR_CTE -> VAR_INT .)
    LE              reduce using rule 40 (VAR_CTE -> VAR_INT .)
    GE              reduce using rule 40 (VAR_CTE -> VAR_INT .)
    EQ              reduce using rule 40 (VAR_CTE -> VAR_INT .)
    ASSIGN          reduce using rule 40 (VAR_CTE -> VAR_INT .)
    RPAREN          reduce using rule 40 (VAR_CTE -> VAR_INT .)
    SEMICOLON       reduce using rule 40 (VAR_CTE -> VAR_INT .)
    SRBRACKET       reduce using rule 40 (VAR_CTE -> VAR_INT .)
    COMMA           reduce using rule 40 (VAR_CTE -> VAR_INT .)


state 80

    (28) ExpK -> ExpT . pos_SUMRES
    (29) pos_SUMRES -> . PLUS ExpK
    (30) pos_SUMRES -> . MINUS ExpK
    (31) pos_SUMRES -> .

    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    LT              reduce using rule 31 (pos_SUMRES -> .)
    GT              reduce using rule 31 (pos_SUMRES -> .)
    NE              reduce using rule 31 (pos_SUMRES -> .)
    LE              reduce using rule 31 (pos_SUMRES -> .)
    GE              reduce using rule 31 (pos_SUMRES -> .)
    EQ              reduce using rule 31 (pos_SUMRES -> .)
    ASSIGN          reduce using rule 31 (pos_SUMRES -> .)
    SEMICOLON       reduce using rule 31 (pos_SUMRES -> .)
    RPAREN          reduce using rule 31 (pos_SUMRES -> .)
    SRBRACKET       reduce using rule 31 (pos_SUMRES -> .)
    COMMA           reduce using rule 31 (pos_SUMRES -> .)

    pos_SUMRES                     shift and go to state 106

state 81

    (19) ExpI -> ExpK . pos_Operandos
    (20) pos_Operandos -> . Operandos ExpI
    (21) pos_Operandos -> .
    (22) Operandos -> . LT
    (23) Operandos -> . GT
    (24) Operandos -> . NE
    (25) Operandos -> . LE
    (26) Operandos -> . GE
    (27) Operandos -> . EQ

    ASSIGN          reduce using rule 21 (pos_Operandos -> .)
    SEMICOLON       reduce using rule 21 (pos_Operandos -> .)
    RPAREN          reduce using rule 21 (pos_Operandos -> .)
    SRBRACKET       reduce using rule 21 (pos_Operandos -> .)
    COMMA           reduce using rule 21 (pos_Operandos -> .)
    LT              shift and go to state 111
    GT              shift and go to state 108
    NE              shift and go to state 112
    LE              shift and go to state 107
    GE              shift and go to state 109
    EQ              shift and go to state 114

    pos_Operandos                  shift and go to state 113
    Operandos                      shift and go to state 110

state 82

    (87) TurtleMotion -> Forward .

    IF              reduce using rule 87 (TurtleMotion -> Forward .)
    RETURN          reduce using rule 87 (TurtleMotion -> Forward .)
    PRINT           reduce using rule 87 (TurtleMotion -> Forward .)
    VAR_ID          reduce using rule 87 (TurtleMotion -> Forward .)
    FOR             reduce using rule 87 (TurtleMotion -> Forward .)
    WHILE           reduce using rule 87 (TurtleMotion -> Forward .)
    DO              reduce using rule 87 (TurtleMotion -> Forward .)
    LPAREN          reduce using rule 87 (TurtleMotion -> Forward .)
    SLBRACKET       reduce using rule 87 (TurtleMotion -> Forward .)
    VAR_INT         reduce using rule 87 (TurtleMotion -> Forward .)
    VAR_DECIMAL     reduce using rule 87 (TurtleMotion -> Forward .)
    RBRACKET        reduce using rule 87 (TurtleMotion -> Forward .)
    RET             reduce using rule 87 (TurtleMotion -> Forward .)


state 83

    (32) ExpT -> ExpF . pos_MULTDIV
    (33) pos_MULTDIV -> . MULT ExpT
    (34) pos_MULTDIV -> . DIV ExpT
    (35) pos_MULTDIV -> .

    MULT            shift and go to state 116
    DIV             shift and go to state 115
    PLUS            reduce using rule 35 (pos_MULTDIV -> .)
    MINUS           reduce using rule 35 (pos_MULTDIV -> .)
    LT              reduce using rule 35 (pos_MULTDIV -> .)
    GT              reduce using rule 35 (pos_MULTDIV -> .)
    NE              reduce using rule 35 (pos_MULTDIV -> .)
    LE              reduce using rule 35 (pos_MULTDIV -> .)
    GE              reduce using rule 35 (pos_MULTDIV -> .)
    EQ              reduce using rule 35 (pos_MULTDIV -> .)
    ASSIGN          reduce using rule 35 (pos_MULTDIV -> .)
    SEMICOLON       reduce using rule 35 (pos_MULTDIV -> .)
    RPAREN          reduce using rule 35 (pos_MULTDIV -> .)
    SRBRACKET       reduce using rule 35 (pos_MULTDIV -> .)
    COMMA           reduce using rule 35 (pos_MULTDIV -> .)

    pos_MULTDIV                    shift and go to state 117

state 84

    (47) Funcs_void -> VOID VAR_ID LPAREN reg_paren RPAREN LBRACKET vars_o_espacio . reg_brack RBRACKET
    (53) reg_brack -> . Estatutos reg_brack
    (54) reg_brack -> .
    (55) Estatutos -> . Condicion
    (56) Estatutos -> . Ciclo
    (57) Estatutos -> . Return
    (58) Estatutos -> . Exp SEMICOLON
    (59) Estatutos -> . Print
    (60) Estatutos -> . Llamada_Func
    (61) Estatutos -> . TurtleMotion
    (62) Condicion -> . IF LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET pos_else
    (72) Ciclo -> . For
    (73) Ciclo -> . While
    (74) Ciclo -> . DoWhile
    (65) Return -> . RETURN Exp SEMICOLON
    (16) Exp -> . ExpI pos_igual
    (66) Print -> . PRINT LPAREN VAR_STRING RPAREN SEMICOLON
    (67) Print -> . PRINT LPAREN Exp RPAREN SEMICOLON
    (68) Llamada_Func -> . VAR_ID LPAREN paramLlam RPAREN SEMICOLON
    (84) TurtleMotion -> . Position
    (85) TurtleMotion -> . Right
    (86) TurtleMotion -> . Left
    (87) TurtleMotion -> . Forward
    (88) TurtleMotion -> . Circle
    (77) For -> . FOR LPAREN VAR_ID ASSIGN Exp SEMICOLON Exp SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (75) While -> . WHILE LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET
    (76) DoWhile -> . DO LBRACKET reg_brack RBRACKET WHILE LPAREN Exp RPAREN SEMICOLON
    (19) ExpI -> . ExpK pos_Operandos
    (89) Position -> . VAR_ID POINT POS LPAREN RPAREN SEMICOLON
    (91) Right -> . VAR_ID POINT RIGHT LPAREN Exp RPAREN SEMICOLON
    (92) Left -> . VAR_ID POINT LEFT LPAREN Exp RPAREN SEMICOLON
    (90) Forward -> . VAR_ID POINT FORWARD LPAREN Exp RPAREN SEMICOLON
    (93) Circle -> . VAR_ID POINT CIRCLE LPAREN Exp RPAREN SEMICOLON
    (28) ExpK -> . ExpT pos_SUMRES
    (32) ExpT -> . ExpF pos_MULTDIV
    (36) ExpF -> . VAR_CTE
    (37) ExpF -> . LPAREN Exp RPAREN
    (38) ExpF -> . SLBRACKET Exp SRBRACKET
    (39) ExpF -> . VAR_ID pos_parens
    (40) VAR_CTE -> . VAR_INT
    (41) VAR_CTE -> . VAR_DECIMAL

    RBRACKET        reduce using rule 54 (reg_brack -> .)
    IF              shift and go to state 76
    RETURN          shift and go to state 52
    PRINT           shift and go to state 56
    VAR_ID          shift and go to state 63
    FOR             shift and go to state 69
    WHILE           shift and go to state 57
    DO              shift and go to state 51
    LPAREN          shift and go to state 73
    SLBRACKET       shift and go to state 77
    VAR_INT         shift and go to state 79
    VAR_DECIMAL     shift and go to state 62

    Ciclo                          shift and go to state 53
    For                            shift and go to state 54
    reg_brack                      shift and go to state 118
    VAR_CTE                        shift and go to state 70
    Print                          shift and go to state 60
    Condicion                      shift and go to state 58
    Forward                        shift and go to state 82
    Circle                         shift and go to state 61
    Return                         shift and go to state 74
    DoWhile                        shift and go to state 65
    Estatutos                      shift and go to state 66
    TurtleMotion                   shift and go to state 68
    While                          shift and go to state 71
    Exp                            shift and go to state 72
    Position                       shift and go to state 59
    Llamada_Func                   shift and go to state 75
    Left                           shift and go to state 67
    Right                          shift and go to state 78
    ExpT                           shift and go to state 80
    ExpK                           shift and go to state 81
    ExpI                           shift and go to state 64
    ExpF                           shift and go to state 83

state 85

    (51) pos_commaf -> COMMA param .

    RPAREN          reduce using rule 51 (pos_commaf -> COMMA param .)


state 86

    (76) DoWhile -> DO LBRACKET . reg_brack RBRACKET WHILE LPAREN Exp RPAREN SEMICOLON
    (53) reg_brack -> . Estatutos reg_brack
    (54) reg_brack -> .
    (55) Estatutos -> . Condicion
    (56) Estatutos -> . Ciclo
    (57) Estatutos -> . Return
    (58) Estatutos -> . Exp SEMICOLON
    (59) Estatutos -> . Print
    (60) Estatutos -> . Llamada_Func
    (61) Estatutos -> . TurtleMotion
    (62) Condicion -> . IF LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET pos_else
    (72) Ciclo -> . For
    (73) Ciclo -> . While
    (74) Ciclo -> . DoWhile
    (65) Return -> . RETURN Exp SEMICOLON
    (16) Exp -> . ExpI pos_igual
    (66) Print -> . PRINT LPAREN VAR_STRING RPAREN SEMICOLON
    (67) Print -> . PRINT LPAREN Exp RPAREN SEMICOLON
    (68) Llamada_Func -> . VAR_ID LPAREN paramLlam RPAREN SEMICOLON
    (84) TurtleMotion -> . Position
    (85) TurtleMotion -> . Right
    (86) TurtleMotion -> . Left
    (87) TurtleMotion -> . Forward
    (88) TurtleMotion -> . Circle
    (77) For -> . FOR LPAREN VAR_ID ASSIGN Exp SEMICOLON Exp SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (75) While -> . WHILE LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET
    (76) DoWhile -> . DO LBRACKET reg_brack RBRACKET WHILE LPAREN Exp RPAREN SEMICOLON
    (19) ExpI -> . ExpK pos_Operandos
    (89) Position -> . VAR_ID POINT POS LPAREN RPAREN SEMICOLON
    (91) Right -> . VAR_ID POINT RIGHT LPAREN Exp RPAREN SEMICOLON
    (92) Left -> . VAR_ID POINT LEFT LPAREN Exp RPAREN SEMICOLON
    (90) Forward -> . VAR_ID POINT FORWARD LPAREN Exp RPAREN SEMICOLON
    (93) Circle -> . VAR_ID POINT CIRCLE LPAREN Exp RPAREN SEMICOLON
    (28) ExpK -> . ExpT pos_SUMRES
    (32) ExpT -> . ExpF pos_MULTDIV
    (36) ExpF -> . VAR_CTE
    (37) ExpF -> . LPAREN Exp RPAREN
    (38) ExpF -> . SLBRACKET Exp SRBRACKET
    (39) ExpF -> . VAR_ID pos_parens
    (40) VAR_CTE -> . VAR_INT
    (41) VAR_CTE -> . VAR_DECIMAL

    RBRACKET        reduce using rule 54 (reg_brack -> .)
    IF              shift and go to state 76
    RETURN          shift and go to state 52
    PRINT           shift and go to state 56
    VAR_ID          shift and go to state 63
    FOR             shift and go to state 69
    WHILE           shift and go to state 57
    DO              shift and go to state 51
    LPAREN          shift and go to state 73
    SLBRACKET       shift and go to state 77
    VAR_INT         shift and go to state 79
    VAR_DECIMAL     shift and go to state 62

    Ciclo                          shift and go to state 53
    For                            shift and go to state 54
    reg_brack                      shift and go to state 119
    VAR_CTE                        shift and go to state 70
    Print                          shift and go to state 60
    Condicion                      shift and go to state 58
    Forward                        shift and go to state 82
    Circle                         shift and go to state 61
    Return                         shift and go to state 74
    DoWhile                        shift and go to state 65
    Estatutos                      shift and go to state 66
    TurtleMotion                   shift and go to state 68
    While                          shift and go to state 71
    Exp                            shift and go to state 72
    Position                       shift and go to state 59
    Llamada_Func                   shift and go to state 75
    Left                           shift and go to state 67
    Right                          shift and go to state 78
    ExpT                           shift and go to state 80
    ExpK                           shift and go to state 81
    ExpI                           shift and go to state 64
    ExpF                           shift and go to state 83

state 87

    (39) ExpF -> VAR_ID . pos_parens
    (42) pos_parens -> . LPAREN Exp RPAREN
    (43) pos_parens -> . SLBRACKET Exp SRBRACKET
    (44) pos_parens -> .

    LPAREN          shift and go to state 120
    SLBRACKET       shift and go to state 92
    MULT            reduce using rule 44 (pos_parens -> .)
    DIV             reduce using rule 44 (pos_parens -> .)
    PLUS            reduce using rule 44 (pos_parens -> .)
    MINUS           reduce using rule 44 (pos_parens -> .)
    LT              reduce using rule 44 (pos_parens -> .)
    GT              reduce using rule 44 (pos_parens -> .)
    NE              reduce using rule 44 (pos_parens -> .)
    LE              reduce using rule 44 (pos_parens -> .)
    GE              reduce using rule 44 (pos_parens -> .)
    EQ              reduce using rule 44 (pos_parens -> .)
    ASSIGN          reduce using rule 44 (pos_parens -> .)
    SEMICOLON       reduce using rule 44 (pos_parens -> .)
    RPAREN          reduce using rule 44 (pos_parens -> .)
    SRBRACKET       reduce using rule 44 (pos_parens -> .)
    COMMA           reduce using rule 44 (pos_parens -> .)

    pos_parens                     shift and go to state 94

state 88

    (65) Return -> RETURN Exp . SEMICOLON

    SEMICOLON       shift and go to state 121


state 89

    (94) Main -> MAIN LPAREN RPAREN LBRACKET vars_o_espacio reg_brack RET . ZERO SEMICOLON RBRACKET

    ZERO            shift and go to state 122


state 90

    (66) Print -> PRINT LPAREN . VAR_STRING RPAREN SEMICOLON
    (67) Print -> PRINT LPAREN . Exp RPAREN SEMICOLON
    (16) Exp -> . ExpI pos_igual
    (19) ExpI -> . ExpK pos_Operandos
    (28) ExpK -> . ExpT pos_SUMRES
    (32) ExpT -> . ExpF pos_MULTDIV
    (36) ExpF -> . VAR_CTE
    (37) ExpF -> . LPAREN Exp RPAREN
    (38) ExpF -> . SLBRACKET Exp SRBRACKET
    (39) ExpF -> . VAR_ID pos_parens
    (40) VAR_CTE -> . VAR_INT
    (41) VAR_CTE -> . VAR_DECIMAL

    VAR_STRING      shift and go to state 123
    LPAREN          shift and go to state 73
    SLBRACKET       shift and go to state 77
    VAR_ID          shift and go to state 87
    VAR_INT         shift and go to state 79
    VAR_DECIMAL     shift and go to state 62

    ExpT                           shift and go to state 80
    ExpK                           shift and go to state 81
    ExpI                           shift and go to state 64
    Exp                            shift and go to state 124
    VAR_CTE                        shift and go to state 70
    ExpF                           shift and go to state 83

state 91

    (75) While -> WHILE LPAREN . Exp RPAREN LBRACKET reg_brack RBRACKET
    (16) Exp -> . ExpI pos_igual
    (19) ExpI -> . ExpK pos_Operandos
    (28) ExpK -> . ExpT pos_SUMRES
    (32) ExpT -> . ExpF pos_MULTDIV
    (36) ExpF -> . VAR_CTE
    (37) ExpF -> . LPAREN Exp RPAREN
    (38) ExpF -> . SLBRACKET Exp SRBRACKET
    (39) ExpF -> . VAR_ID pos_parens
    (40) VAR_CTE -> . VAR_INT
    (41) VAR_CTE -> . VAR_DECIMAL

    LPAREN          shift and go to state 73
    SLBRACKET       shift and go to state 77
    VAR_ID          shift and go to state 87
    VAR_INT         shift and go to state 79
    VAR_DECIMAL     shift and go to state 62

    ExpT                           shift and go to state 80
    ExpK                           shift and go to state 81
    ExpI                           shift and go to state 64
    Exp                            shift and go to state 125
    VAR_CTE                        shift and go to state 70
    ExpF                           shift and go to state 83

state 92

    (43) pos_parens -> SLBRACKET . Exp SRBRACKET
    (16) Exp -> . ExpI pos_igual
    (19) ExpI -> . ExpK pos_Operandos
    (28) ExpK -> . ExpT pos_SUMRES
    (32) ExpT -> . ExpF pos_MULTDIV
    (36) ExpF -> . VAR_CTE
    (37) ExpF -> . LPAREN Exp RPAREN
    (38) ExpF -> . SLBRACKET Exp SRBRACKET
    (39) ExpF -> . VAR_ID pos_parens
    (40) VAR_CTE -> . VAR_INT
    (41) VAR_CTE -> . VAR_DECIMAL

    LPAREN          shift and go to state 73
    SLBRACKET       shift and go to state 77
    VAR_ID          shift and go to state 87
    VAR_INT         shift and go to state 79
    VAR_DECIMAL     shift and go to state 62

    ExpT                           shift and go to state 80
    ExpK                           shift and go to state 81
    ExpI                           shift and go to state 64
    Exp                            shift and go to state 126
    VAR_CTE                        shift and go to state 70
    ExpF                           shift and go to state 83

state 93

    (89) Position -> VAR_ID POINT . POS LPAREN RPAREN SEMICOLON
    (91) Right -> VAR_ID POINT . RIGHT LPAREN Exp RPAREN SEMICOLON
    (92) Left -> VAR_ID POINT . LEFT LPAREN Exp RPAREN SEMICOLON
    (90) Forward -> VAR_ID POINT . FORWARD LPAREN Exp RPAREN SEMICOLON
    (93) Circle -> VAR_ID POINT . CIRCLE LPAREN Exp RPAREN SEMICOLON

    POS             shift and go to state 128
    RIGHT           shift and go to state 127
    LEFT            shift and go to state 131
    FORWARD         shift and go to state 129
    CIRCLE          shift and go to state 130


state 94

    (39) ExpF -> VAR_ID pos_parens .

    MULT            reduce using rule 39 (ExpF -> VAR_ID pos_parens .)
    DIV             reduce using rule 39 (ExpF -> VAR_ID pos_parens .)
    PLUS            reduce using rule 39 (ExpF -> VAR_ID pos_parens .)
    MINUS           reduce using rule 39 (ExpF -> VAR_ID pos_parens .)
    LT              reduce using rule 39 (ExpF -> VAR_ID pos_parens .)
    GT              reduce using rule 39 (ExpF -> VAR_ID pos_parens .)
    NE              reduce using rule 39 (ExpF -> VAR_ID pos_parens .)
    LE              reduce using rule 39 (ExpF -> VAR_ID pos_parens .)
    GE              reduce using rule 39 (ExpF -> VAR_ID pos_parens .)
    EQ              reduce using rule 39 (ExpF -> VAR_ID pos_parens .)
    ASSIGN          reduce using rule 39 (ExpF -> VAR_ID pos_parens .)
    SEMICOLON       reduce using rule 39 (ExpF -> VAR_ID pos_parens .)
    RPAREN          reduce using rule 39 (ExpF -> VAR_ID pos_parens .)
    SRBRACKET       reduce using rule 39 (ExpF -> VAR_ID pos_parens .)
    COMMA           reduce using rule 39 (ExpF -> VAR_ID pos_parens .)


state 95

    (68) Llamada_Func -> VAR_ID LPAREN . paramLlam RPAREN SEMICOLON
    (42) pos_parens -> LPAREN . Exp RPAREN
    (69) paramLlam -> . Exp pos_commaLlam
    (16) Exp -> . ExpI pos_igual
    (19) ExpI -> . ExpK pos_Operandos
    (28) ExpK -> . ExpT pos_SUMRES
    (32) ExpT -> . ExpF pos_MULTDIV
    (36) ExpF -> . VAR_CTE
    (37) ExpF -> . LPAREN Exp RPAREN
    (38) ExpF -> . SLBRACKET Exp SRBRACKET
    (39) ExpF -> . VAR_ID pos_parens
    (40) VAR_CTE -> . VAR_INT
    (41) VAR_CTE -> . VAR_DECIMAL

    LPAREN          shift and go to state 73
    SLBRACKET       shift and go to state 77
    VAR_ID          shift and go to state 87
    VAR_INT         shift and go to state 79
    VAR_DECIMAL     shift and go to state 62

    paramLlam                      shift and go to state 133
    ExpT                           shift and go to state 80
    ExpK                           shift and go to state 81
    ExpI                           shift and go to state 64
    Exp                            shift and go to state 132
    VAR_CTE                        shift and go to state 70
    ExpF                           shift and go to state 83

state 96

    (16) Exp -> ExpI pos_igual .

    RPAREN          reduce using rule 16 (Exp -> ExpI pos_igual .)
    SEMICOLON       reduce using rule 16 (Exp -> ExpI pos_igual .)
    SRBRACKET       reduce using rule 16 (Exp -> ExpI pos_igual .)
    COMMA           reduce using rule 16 (Exp -> ExpI pos_igual .)


state 97

    (17) pos_igual -> ASSIGN . ExpI
    (19) ExpI -> . ExpK pos_Operandos
    (28) ExpK -> . ExpT pos_SUMRES
    (32) ExpT -> . ExpF pos_MULTDIV
    (36) ExpF -> . VAR_CTE
    (37) ExpF -> . LPAREN Exp RPAREN
    (38) ExpF -> . SLBRACKET Exp SRBRACKET
    (39) ExpF -> . VAR_ID pos_parens
    (40) VAR_CTE -> . VAR_INT
    (41) VAR_CTE -> . VAR_DECIMAL

    LPAREN          shift and go to state 73
    SLBRACKET       shift and go to state 77
    VAR_ID          shift and go to state 87
    VAR_INT         shift and go to state 79
    VAR_DECIMAL     shift and go to state 62

    ExpT                           shift and go to state 80
    ExpK                           shift and go to state 81
    ExpI                           shift and go to state 134
    VAR_CTE                        shift and go to state 70
    ExpF                           shift and go to state 83

state 98

    (53) reg_brack -> Estatutos reg_brack .

    RET             reduce using rule 53 (reg_brack -> Estatutos reg_brack .)
    RBRACKET        reduce using rule 53 (reg_brack -> Estatutos reg_brack .)


state 99

    (77) For -> FOR LPAREN . VAR_ID ASSIGN Exp SEMICOLON Exp SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET

    VAR_ID          shift and go to state 135


state 100

    (58) Estatutos -> Exp SEMICOLON .

    IF              reduce using rule 58 (Estatutos -> Exp SEMICOLON .)
    RETURN          reduce using rule 58 (Estatutos -> Exp SEMICOLON .)
    PRINT           reduce using rule 58 (Estatutos -> Exp SEMICOLON .)
    VAR_ID          reduce using rule 58 (Estatutos -> Exp SEMICOLON .)
    FOR             reduce using rule 58 (Estatutos -> Exp SEMICOLON .)
    WHILE           reduce using rule 58 (Estatutos -> Exp SEMICOLON .)
    DO              reduce using rule 58 (Estatutos -> Exp SEMICOLON .)
    LPAREN          reduce using rule 58 (Estatutos -> Exp SEMICOLON .)
    SLBRACKET       reduce using rule 58 (Estatutos -> Exp SEMICOLON .)
    VAR_INT         reduce using rule 58 (Estatutos -> Exp SEMICOLON .)
    VAR_DECIMAL     reduce using rule 58 (Estatutos -> Exp SEMICOLON .)
    RET             reduce using rule 58 (Estatutos -> Exp SEMICOLON .)
    RBRACKET        reduce using rule 58 (Estatutos -> Exp SEMICOLON .)


state 101

    (37) ExpF -> LPAREN Exp . RPAREN

    RPAREN          shift and go to state 136


state 102

    (62) Condicion -> IF LPAREN . Exp RPAREN LBRACKET reg_brack RBRACKET pos_else
    (16) Exp -> . ExpI pos_igual
    (19) ExpI -> . ExpK pos_Operandos
    (28) ExpK -> . ExpT pos_SUMRES
    (32) ExpT -> . ExpF pos_MULTDIV
    (36) ExpF -> . VAR_CTE
    (37) ExpF -> . LPAREN Exp RPAREN
    (38) ExpF -> . SLBRACKET Exp SRBRACKET
    (39) ExpF -> . VAR_ID pos_parens
    (40) VAR_CTE -> . VAR_INT
    (41) VAR_CTE -> . VAR_DECIMAL

    LPAREN          shift and go to state 73
    SLBRACKET       shift and go to state 77
    VAR_ID          shift and go to state 87
    VAR_INT         shift and go to state 79
    VAR_DECIMAL     shift and go to state 62

    ExpI                           shift and go to state 64
    ExpT                           shift and go to state 80
    ExpK                           shift and go to state 81
    Exp                            shift and go to state 137
    VAR_CTE                        shift and go to state 70
    ExpF                           shift and go to state 83

state 103

    (38) ExpF -> SLBRACKET Exp . SRBRACKET

    SRBRACKET       shift and go to state 138


state 104

    (29) pos_SUMRES -> PLUS . ExpK
    (28) ExpK -> . ExpT pos_SUMRES
    (32) ExpT -> . ExpF pos_MULTDIV
    (36) ExpF -> . VAR_CTE
    (37) ExpF -> . LPAREN Exp RPAREN
    (38) ExpF -> . SLBRACKET Exp SRBRACKET
    (39) ExpF -> . VAR_ID pos_parens
    (40) VAR_CTE -> . VAR_INT
    (41) VAR_CTE -> . VAR_DECIMAL

    LPAREN          shift and go to state 73
    SLBRACKET       shift and go to state 77
    VAR_ID          shift and go to state 87
    VAR_INT         shift and go to state 79
    VAR_DECIMAL     shift and go to state 62

    VAR_CTE                        shift and go to state 70
    ExpK                           shift and go to state 139
    ExpT                           shift and go to state 80
    ExpF                           shift and go to state 83

state 105

    (30) pos_SUMRES -> MINUS . ExpK
    (28) ExpK -> . ExpT pos_SUMRES
    (32) ExpT -> . ExpF pos_MULTDIV
    (36) ExpF -> . VAR_CTE
    (37) ExpF -> . LPAREN Exp RPAREN
    (38) ExpF -> . SLBRACKET Exp SRBRACKET
    (39) ExpF -> . VAR_ID pos_parens
    (40) VAR_CTE -> . VAR_INT
    (41) VAR_CTE -> . VAR_DECIMAL

    LPAREN          shift and go to state 73
    SLBRACKET       shift and go to state 77
    VAR_ID          shift and go to state 87
    VAR_INT         shift and go to state 79
    VAR_DECIMAL     shift and go to state 62

    VAR_CTE                        shift and go to state 70
    ExpK                           shift and go to state 140
    ExpT                           shift and go to state 80
    ExpF                           shift and go to state 83

state 106

    (28) ExpK -> ExpT pos_SUMRES .

    LT              reduce using rule 28 (ExpK -> ExpT pos_SUMRES .)
    GT              reduce using rule 28 (ExpK -> ExpT pos_SUMRES .)
    NE              reduce using rule 28 (ExpK -> ExpT pos_SUMRES .)
    LE              reduce using rule 28 (ExpK -> ExpT pos_SUMRES .)
    GE              reduce using rule 28 (ExpK -> ExpT pos_SUMRES .)
    EQ              reduce using rule 28 (ExpK -> ExpT pos_SUMRES .)
    ASSIGN          reduce using rule 28 (ExpK -> ExpT pos_SUMRES .)
    SEMICOLON       reduce using rule 28 (ExpK -> ExpT pos_SUMRES .)
    RPAREN          reduce using rule 28 (ExpK -> ExpT pos_SUMRES .)
    SRBRACKET       reduce using rule 28 (ExpK -> ExpT pos_SUMRES .)
    COMMA           reduce using rule 28 (ExpK -> ExpT pos_SUMRES .)


state 107

    (25) Operandos -> LE .

    LPAREN          reduce using rule 25 (Operandos -> LE .)
    SLBRACKET       reduce using rule 25 (Operandos -> LE .)
    VAR_ID          reduce using rule 25 (Operandos -> LE .)
    VAR_INT         reduce using rule 25 (Operandos -> LE .)
    VAR_DECIMAL     reduce using rule 25 (Operandos -> LE .)


state 108

    (23) Operandos -> GT .

    LPAREN          reduce using rule 23 (Operandos -> GT .)
    SLBRACKET       reduce using rule 23 (Operandos -> GT .)
    VAR_ID          reduce using rule 23 (Operandos -> GT .)
    VAR_INT         reduce using rule 23 (Operandos -> GT .)
    VAR_DECIMAL     reduce using rule 23 (Operandos -> GT .)


state 109

    (26) Operandos -> GE .

    LPAREN          reduce using rule 26 (Operandos -> GE .)
    SLBRACKET       reduce using rule 26 (Operandos -> GE .)
    VAR_ID          reduce using rule 26 (Operandos -> GE .)
    VAR_INT         reduce using rule 26 (Operandos -> GE .)
    VAR_DECIMAL     reduce using rule 26 (Operandos -> GE .)


state 110

    (20) pos_Operandos -> Operandos . ExpI
    (19) ExpI -> . ExpK pos_Operandos
    (28) ExpK -> . ExpT pos_SUMRES
    (32) ExpT -> . ExpF pos_MULTDIV
    (36) ExpF -> . VAR_CTE
    (37) ExpF -> . LPAREN Exp RPAREN
    (38) ExpF -> . SLBRACKET Exp SRBRACKET
    (39) ExpF -> . VAR_ID pos_parens
    (40) VAR_CTE -> . VAR_INT
    (41) VAR_CTE -> . VAR_DECIMAL

    LPAREN          shift and go to state 73
    SLBRACKET       shift and go to state 77
    VAR_ID          shift and go to state 87
    VAR_INT         shift and go to state 79
    VAR_DECIMAL     shift and go to state 62

    ExpT                           shift and go to state 80
    ExpK                           shift and go to state 81
    ExpI                           shift and go to state 141
    VAR_CTE                        shift and go to state 70
    ExpF                           shift and go to state 83

state 111

    (22) Operandos -> LT .

    LPAREN          reduce using rule 22 (Operandos -> LT .)
    SLBRACKET       reduce using rule 22 (Operandos -> LT .)
    VAR_ID          reduce using rule 22 (Operandos -> LT .)
    VAR_INT         reduce using rule 22 (Operandos -> LT .)
    VAR_DECIMAL     reduce using rule 22 (Operandos -> LT .)


state 112

    (24) Operandos -> NE .

    LPAREN          reduce using rule 24 (Operandos -> NE .)
    SLBRACKET       reduce using rule 24 (Operandos -> NE .)
    VAR_ID          reduce using rule 24 (Operandos -> NE .)
    VAR_INT         reduce using rule 24 (Operandos -> NE .)
    VAR_DECIMAL     reduce using rule 24 (Operandos -> NE .)


state 113

    (19) ExpI -> ExpK pos_Operandos .

    ASSIGN          reduce using rule 19 (ExpI -> ExpK pos_Operandos .)
    SEMICOLON       reduce using rule 19 (ExpI -> ExpK pos_Operandos .)
    RPAREN          reduce using rule 19 (ExpI -> ExpK pos_Operandos .)
    SRBRACKET       reduce using rule 19 (ExpI -> ExpK pos_Operandos .)
    COMMA           reduce using rule 19 (ExpI -> ExpK pos_Operandos .)


state 114

    (27) Operandos -> EQ .

    LPAREN          reduce using rule 27 (Operandos -> EQ .)
    SLBRACKET       reduce using rule 27 (Operandos -> EQ .)
    VAR_ID          reduce using rule 27 (Operandos -> EQ .)
    VAR_INT         reduce using rule 27 (Operandos -> EQ .)
    VAR_DECIMAL     reduce using rule 27 (Operandos -> EQ .)


state 115

    (34) pos_MULTDIV -> DIV . ExpT
    (32) ExpT -> . ExpF pos_MULTDIV
    (36) ExpF -> . VAR_CTE
    (37) ExpF -> . LPAREN Exp RPAREN
    (38) ExpF -> . SLBRACKET Exp SRBRACKET
    (39) ExpF -> . VAR_ID pos_parens
    (40) VAR_CTE -> . VAR_INT
    (41) VAR_CTE -> . VAR_DECIMAL

    LPAREN          shift and go to state 73
    SLBRACKET       shift and go to state 77
    VAR_ID          shift and go to state 87
    VAR_INT         shift and go to state 79
    VAR_DECIMAL     shift and go to state 62

    VAR_CTE                        shift and go to state 70
    ExpT                           shift and go to state 142
    ExpF                           shift and go to state 83

state 116

    (33) pos_MULTDIV -> MULT . ExpT
    (32) ExpT -> . ExpF pos_MULTDIV
    (36) ExpF -> . VAR_CTE
    (37) ExpF -> . LPAREN Exp RPAREN
    (38) ExpF -> . SLBRACKET Exp SRBRACKET
    (39) ExpF -> . VAR_ID pos_parens
    (40) VAR_CTE -> . VAR_INT
    (41) VAR_CTE -> . VAR_DECIMAL

    LPAREN          shift and go to state 73
    SLBRACKET       shift and go to state 77
    VAR_ID          shift and go to state 87
    VAR_INT         shift and go to state 79
    VAR_DECIMAL     shift and go to state 62

    VAR_CTE                        shift and go to state 70
    ExpT                           shift and go to state 143
    ExpF                           shift and go to state 83

state 117

    (32) ExpT -> ExpF pos_MULTDIV .

    PLUS            reduce using rule 32 (ExpT -> ExpF pos_MULTDIV .)
    MINUS           reduce using rule 32 (ExpT -> ExpF pos_MULTDIV .)
    LT              reduce using rule 32 (ExpT -> ExpF pos_MULTDIV .)
    GT              reduce using rule 32 (ExpT -> ExpF pos_MULTDIV .)
    NE              reduce using rule 32 (ExpT -> ExpF pos_MULTDIV .)
    LE              reduce using rule 32 (ExpT -> ExpF pos_MULTDIV .)
    GE              reduce using rule 32 (ExpT -> ExpF pos_MULTDIV .)
    EQ              reduce using rule 32 (ExpT -> ExpF pos_MULTDIV .)
    ASSIGN          reduce using rule 32 (ExpT -> ExpF pos_MULTDIV .)
    SEMICOLON       reduce using rule 32 (ExpT -> ExpF pos_MULTDIV .)
    RPAREN          reduce using rule 32 (ExpT -> ExpF pos_MULTDIV .)
    SRBRACKET       reduce using rule 32 (ExpT -> ExpF pos_MULTDIV .)
    COMMA           reduce using rule 32 (ExpT -> ExpF pos_MULTDIV .)


state 118

    (47) Funcs_void -> VOID VAR_ID LPAREN reg_paren RPAREN LBRACKET vars_o_espacio reg_brack . RBRACKET

    RBRACKET        shift and go to state 144


state 119

    (76) DoWhile -> DO LBRACKET reg_brack . RBRACKET WHILE LPAREN Exp RPAREN SEMICOLON

    RBRACKET        shift and go to state 145


state 120

    (42) pos_parens -> LPAREN . Exp RPAREN
    (16) Exp -> . ExpI pos_igual
    (19) ExpI -> . ExpK pos_Operandos
    (28) ExpK -> . ExpT pos_SUMRES
    (32) ExpT -> . ExpF pos_MULTDIV
    (36) ExpF -> . VAR_CTE
    (37) ExpF -> . LPAREN Exp RPAREN
    (38) ExpF -> . SLBRACKET Exp SRBRACKET
    (39) ExpF -> . VAR_ID pos_parens
    (40) VAR_CTE -> . VAR_INT
    (41) VAR_CTE -> . VAR_DECIMAL

    LPAREN          shift and go to state 73
    SLBRACKET       shift and go to state 77
    VAR_ID          shift and go to state 87
    VAR_INT         shift and go to state 79
    VAR_DECIMAL     shift and go to state 62

    ExpT                           shift and go to state 80
    ExpK                           shift and go to state 81
    ExpI                           shift and go to state 64
    Exp                            shift and go to state 146
    VAR_CTE                        shift and go to state 70
    ExpF                           shift and go to state 83

state 121

    (65) Return -> RETURN Exp SEMICOLON .

    IF              reduce using rule 65 (Return -> RETURN Exp SEMICOLON .)
    RETURN          reduce using rule 65 (Return -> RETURN Exp SEMICOLON .)
    PRINT           reduce using rule 65 (Return -> RETURN Exp SEMICOLON .)
    VAR_ID          reduce using rule 65 (Return -> RETURN Exp SEMICOLON .)
    FOR             reduce using rule 65 (Return -> RETURN Exp SEMICOLON .)
    WHILE           reduce using rule 65 (Return -> RETURN Exp SEMICOLON .)
    DO              reduce using rule 65 (Return -> RETURN Exp SEMICOLON .)
    LPAREN          reduce using rule 65 (Return -> RETURN Exp SEMICOLON .)
    SLBRACKET       reduce using rule 65 (Return -> RETURN Exp SEMICOLON .)
    VAR_INT         reduce using rule 65 (Return -> RETURN Exp SEMICOLON .)
    VAR_DECIMAL     reduce using rule 65 (Return -> RETURN Exp SEMICOLON .)
    RBRACKET        reduce using rule 65 (Return -> RETURN Exp SEMICOLON .)
    RET             reduce using rule 65 (Return -> RETURN Exp SEMICOLON .)


state 122

    (94) Main -> MAIN LPAREN RPAREN LBRACKET vars_o_espacio reg_brack RET ZERO . SEMICOLON RBRACKET

    SEMICOLON       shift and go to state 147


state 123

    (66) Print -> PRINT LPAREN VAR_STRING . RPAREN SEMICOLON

    RPAREN          shift and go to state 148


state 124

    (67) Print -> PRINT LPAREN Exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 149


state 125

    (75) While -> WHILE LPAREN Exp . RPAREN LBRACKET reg_brack RBRACKET

    RPAREN          shift and go to state 150


state 126

    (43) pos_parens -> SLBRACKET Exp . SRBRACKET

    SRBRACKET       shift and go to state 151


state 127

    (91) Right -> VAR_ID POINT RIGHT . LPAREN Exp RPAREN SEMICOLON

    LPAREN          shift and go to state 152


state 128

    (89) Position -> VAR_ID POINT POS . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 153


state 129

    (90) Forward -> VAR_ID POINT FORWARD . LPAREN Exp RPAREN SEMICOLON

    LPAREN          shift and go to state 154


state 130

    (93) Circle -> VAR_ID POINT CIRCLE . LPAREN Exp RPAREN SEMICOLON

    LPAREN          shift and go to state 155


state 131

    (92) Left -> VAR_ID POINT LEFT . LPAREN Exp RPAREN SEMICOLON

    LPAREN          shift and go to state 156


state 132

    (42) pos_parens -> LPAREN Exp . RPAREN
    (69) paramLlam -> Exp . pos_commaLlam
    (70) pos_commaLlam -> . COMMA paramLlam
    (71) pos_commaLlam -> .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 159
    COMMA           shift and go to state 158

  ! RPAREN          [ reduce using rule 71 (pos_commaLlam -> .) ]

    pos_commaLlam                  shift and go to state 157

state 133

    (68) Llamada_Func -> VAR_ID LPAREN paramLlam . RPAREN SEMICOLON

    RPAREN          shift and go to state 160


state 134

    (17) pos_igual -> ASSIGN ExpI .

    SEMICOLON       reduce using rule 17 (pos_igual -> ASSIGN ExpI .)
    RPAREN          reduce using rule 17 (pos_igual -> ASSIGN ExpI .)
    SRBRACKET       reduce using rule 17 (pos_igual -> ASSIGN ExpI .)
    COMMA           reduce using rule 17 (pos_igual -> ASSIGN ExpI .)


state 135

    (77) For -> FOR LPAREN VAR_ID . ASSIGN Exp SEMICOLON Exp SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET

    ASSIGN          shift and go to state 161


state 136

    (37) ExpF -> LPAREN Exp RPAREN .

    MULT            reduce using rule 37 (ExpF -> LPAREN Exp RPAREN .)
    DIV             reduce using rule 37 (ExpF -> LPAREN Exp RPAREN .)
    PLUS            reduce using rule 37 (ExpF -> LPAREN Exp RPAREN .)
    MINUS           reduce using rule 37 (ExpF -> LPAREN Exp RPAREN .)
    LT              reduce using rule 37 (ExpF -> LPAREN Exp RPAREN .)
    GT              reduce using rule 37 (ExpF -> LPAREN Exp RPAREN .)
    NE              reduce using rule 37 (ExpF -> LPAREN Exp RPAREN .)
    LE              reduce using rule 37 (ExpF -> LPAREN Exp RPAREN .)
    GE              reduce using rule 37 (ExpF -> LPAREN Exp RPAREN .)
    EQ              reduce using rule 37 (ExpF -> LPAREN Exp RPAREN .)
    ASSIGN          reduce using rule 37 (ExpF -> LPAREN Exp RPAREN .)
    SEMICOLON       reduce using rule 37 (ExpF -> LPAREN Exp RPAREN .)
    RPAREN          reduce using rule 37 (ExpF -> LPAREN Exp RPAREN .)
    SRBRACKET       reduce using rule 37 (ExpF -> LPAREN Exp RPAREN .)
    COMMA           reduce using rule 37 (ExpF -> LPAREN Exp RPAREN .)


state 137

    (62) Condicion -> IF LPAREN Exp . RPAREN LBRACKET reg_brack RBRACKET pos_else

    RPAREN          shift and go to state 162


state 138

    (38) ExpF -> SLBRACKET Exp SRBRACKET .

    MULT            reduce using rule 38 (ExpF -> SLBRACKET Exp SRBRACKET .)
    DIV             reduce using rule 38 (ExpF -> SLBRACKET Exp SRBRACKET .)
    PLUS            reduce using rule 38 (ExpF -> SLBRACKET Exp SRBRACKET .)
    MINUS           reduce using rule 38 (ExpF -> SLBRACKET Exp SRBRACKET .)
    LT              reduce using rule 38 (ExpF -> SLBRACKET Exp SRBRACKET .)
    GT              reduce using rule 38 (ExpF -> SLBRACKET Exp SRBRACKET .)
    NE              reduce using rule 38 (ExpF -> SLBRACKET Exp SRBRACKET .)
    LE              reduce using rule 38 (ExpF -> SLBRACKET Exp SRBRACKET .)
    GE              reduce using rule 38 (ExpF -> SLBRACKET Exp SRBRACKET .)
    EQ              reduce using rule 38 (ExpF -> SLBRACKET Exp SRBRACKET .)
    ASSIGN          reduce using rule 38 (ExpF -> SLBRACKET Exp SRBRACKET .)
    SEMICOLON       reduce using rule 38 (ExpF -> SLBRACKET Exp SRBRACKET .)
    RPAREN          reduce using rule 38 (ExpF -> SLBRACKET Exp SRBRACKET .)
    SRBRACKET       reduce using rule 38 (ExpF -> SLBRACKET Exp SRBRACKET .)
    COMMA           reduce using rule 38 (ExpF -> SLBRACKET Exp SRBRACKET .)


state 139

    (29) pos_SUMRES -> PLUS ExpK .

    LT              reduce using rule 29 (pos_SUMRES -> PLUS ExpK .)
    GT              reduce using rule 29 (pos_SUMRES -> PLUS ExpK .)
    NE              reduce using rule 29 (pos_SUMRES -> PLUS ExpK .)
    LE              reduce using rule 29 (pos_SUMRES -> PLUS ExpK .)
    GE              reduce using rule 29 (pos_SUMRES -> PLUS ExpK .)
    EQ              reduce using rule 29 (pos_SUMRES -> PLUS ExpK .)
    ASSIGN          reduce using rule 29 (pos_SUMRES -> PLUS ExpK .)
    SEMICOLON       reduce using rule 29 (pos_SUMRES -> PLUS ExpK .)
    RPAREN          reduce using rule 29 (pos_SUMRES -> PLUS ExpK .)
    SRBRACKET       reduce using rule 29 (pos_SUMRES -> PLUS ExpK .)
    COMMA           reduce using rule 29 (pos_SUMRES -> PLUS ExpK .)


state 140

    (30) pos_SUMRES -> MINUS ExpK .

    LT              reduce using rule 30 (pos_SUMRES -> MINUS ExpK .)
    GT              reduce using rule 30 (pos_SUMRES -> MINUS ExpK .)
    NE              reduce using rule 30 (pos_SUMRES -> MINUS ExpK .)
    LE              reduce using rule 30 (pos_SUMRES -> MINUS ExpK .)
    GE              reduce using rule 30 (pos_SUMRES -> MINUS ExpK .)
    EQ              reduce using rule 30 (pos_SUMRES -> MINUS ExpK .)
    ASSIGN          reduce using rule 30 (pos_SUMRES -> MINUS ExpK .)
    SEMICOLON       reduce using rule 30 (pos_SUMRES -> MINUS ExpK .)
    RPAREN          reduce using rule 30 (pos_SUMRES -> MINUS ExpK .)
    SRBRACKET       reduce using rule 30 (pos_SUMRES -> MINUS ExpK .)
    COMMA           reduce using rule 30 (pos_SUMRES -> MINUS ExpK .)


state 141

    (20) pos_Operandos -> Operandos ExpI .

    ASSIGN          reduce using rule 20 (pos_Operandos -> Operandos ExpI .)
    SEMICOLON       reduce using rule 20 (pos_Operandos -> Operandos ExpI .)
    RPAREN          reduce using rule 20 (pos_Operandos -> Operandos ExpI .)
    SRBRACKET       reduce using rule 20 (pos_Operandos -> Operandos ExpI .)
    COMMA           reduce using rule 20 (pos_Operandos -> Operandos ExpI .)


state 142

    (34) pos_MULTDIV -> DIV ExpT .

    PLUS            reduce using rule 34 (pos_MULTDIV -> DIV ExpT .)
    MINUS           reduce using rule 34 (pos_MULTDIV -> DIV ExpT .)
    LT              reduce using rule 34 (pos_MULTDIV -> DIV ExpT .)
    GT              reduce using rule 34 (pos_MULTDIV -> DIV ExpT .)
    NE              reduce using rule 34 (pos_MULTDIV -> DIV ExpT .)
    LE              reduce using rule 34 (pos_MULTDIV -> DIV ExpT .)
    GE              reduce using rule 34 (pos_MULTDIV -> DIV ExpT .)
    EQ              reduce using rule 34 (pos_MULTDIV -> DIV ExpT .)
    ASSIGN          reduce using rule 34 (pos_MULTDIV -> DIV ExpT .)
    SEMICOLON       reduce using rule 34 (pos_MULTDIV -> DIV ExpT .)
    RPAREN          reduce using rule 34 (pos_MULTDIV -> DIV ExpT .)
    SRBRACKET       reduce using rule 34 (pos_MULTDIV -> DIV ExpT .)
    COMMA           reduce using rule 34 (pos_MULTDIV -> DIV ExpT .)


state 143

    (33) pos_MULTDIV -> MULT ExpT .

    PLUS            reduce using rule 33 (pos_MULTDIV -> MULT ExpT .)
    MINUS           reduce using rule 33 (pos_MULTDIV -> MULT ExpT .)
    LT              reduce using rule 33 (pos_MULTDIV -> MULT ExpT .)
    GT              reduce using rule 33 (pos_MULTDIV -> MULT ExpT .)
    NE              reduce using rule 33 (pos_MULTDIV -> MULT ExpT .)
    LE              reduce using rule 33 (pos_MULTDIV -> MULT ExpT .)
    GE              reduce using rule 33 (pos_MULTDIV -> MULT ExpT .)
    EQ              reduce using rule 33 (pos_MULTDIV -> MULT ExpT .)
    ASSIGN          reduce using rule 33 (pos_MULTDIV -> MULT ExpT .)
    SEMICOLON       reduce using rule 33 (pos_MULTDIV -> MULT ExpT .)
    RPAREN          reduce using rule 33 (pos_MULTDIV -> MULT ExpT .)
    SRBRACKET       reduce using rule 33 (pos_MULTDIV -> MULT ExpT .)
    COMMA           reduce using rule 33 (pos_MULTDIV -> MULT ExpT .)


state 144

    (47) Funcs_void -> VOID VAR_ID LPAREN reg_paren RPAREN LBRACKET vars_o_espacio reg_brack RBRACKET .

    VOID            reduce using rule 47 (Funcs_void -> VOID VAR_ID LPAREN reg_paren RPAREN LBRACKET vars_o_espacio reg_brack RBRACKET .)
    MAIN            reduce using rule 47 (Funcs_void -> VOID VAR_ID LPAREN reg_paren RPAREN LBRACKET vars_o_espacio reg_brack RBRACKET .)


state 145

    (76) DoWhile -> DO LBRACKET reg_brack RBRACKET . WHILE LPAREN Exp RPAREN SEMICOLON

    WHILE           shift and go to state 163


state 146

    (42) pos_parens -> LPAREN Exp . RPAREN

    RPAREN          shift and go to state 159


state 147

    (94) Main -> MAIN LPAREN RPAREN LBRACKET vars_o_espacio reg_brack RET ZERO SEMICOLON . RBRACKET

    RBRACKET        shift and go to state 164


state 148

    (66) Print -> PRINT LPAREN VAR_STRING RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 165


state 149

    (67) Print -> PRINT LPAREN Exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 166


state 150

    (75) While -> WHILE LPAREN Exp RPAREN . LBRACKET reg_brack RBRACKET

    LBRACKET        shift and go to state 167


state 151

    (43) pos_parens -> SLBRACKET Exp SRBRACKET .

    MULT            reduce using rule 43 (pos_parens -> SLBRACKET Exp SRBRACKET .)
    DIV             reduce using rule 43 (pos_parens -> SLBRACKET Exp SRBRACKET .)
    PLUS            reduce using rule 43 (pos_parens -> SLBRACKET Exp SRBRACKET .)
    MINUS           reduce using rule 43 (pos_parens -> SLBRACKET Exp SRBRACKET .)
    LT              reduce using rule 43 (pos_parens -> SLBRACKET Exp SRBRACKET .)
    GT              reduce using rule 43 (pos_parens -> SLBRACKET Exp SRBRACKET .)
    NE              reduce using rule 43 (pos_parens -> SLBRACKET Exp SRBRACKET .)
    LE              reduce using rule 43 (pos_parens -> SLBRACKET Exp SRBRACKET .)
    GE              reduce using rule 43 (pos_parens -> SLBRACKET Exp SRBRACKET .)
    EQ              reduce using rule 43 (pos_parens -> SLBRACKET Exp SRBRACKET .)
    ASSIGN          reduce using rule 43 (pos_parens -> SLBRACKET Exp SRBRACKET .)
    SEMICOLON       reduce using rule 43 (pos_parens -> SLBRACKET Exp SRBRACKET .)
    RPAREN          reduce using rule 43 (pos_parens -> SLBRACKET Exp SRBRACKET .)
    SRBRACKET       reduce using rule 43 (pos_parens -> SLBRACKET Exp SRBRACKET .)
    COMMA           reduce using rule 43 (pos_parens -> SLBRACKET Exp SRBRACKET .)


state 152

    (91) Right -> VAR_ID POINT RIGHT LPAREN . Exp RPAREN SEMICOLON
    (16) Exp -> . ExpI pos_igual
    (19) ExpI -> . ExpK pos_Operandos
    (28) ExpK -> . ExpT pos_SUMRES
    (32) ExpT -> . ExpF pos_MULTDIV
    (36) ExpF -> . VAR_CTE
    (37) ExpF -> . LPAREN Exp RPAREN
    (38) ExpF -> . SLBRACKET Exp SRBRACKET
    (39) ExpF -> . VAR_ID pos_parens
    (40) VAR_CTE -> . VAR_INT
    (41) VAR_CTE -> . VAR_DECIMAL

    LPAREN          shift and go to state 73
    SLBRACKET       shift and go to state 77
    VAR_ID          shift and go to state 87
    VAR_INT         shift and go to state 79
    VAR_DECIMAL     shift and go to state 62

    ExpT                           shift and go to state 80
    ExpK                           shift and go to state 81
    ExpI                           shift and go to state 64
    Exp                            shift and go to state 168
    VAR_CTE                        shift and go to state 70
    ExpF                           shift and go to state 83

state 153

    (89) Position -> VAR_ID POINT POS LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 169


state 154

    (90) Forward -> VAR_ID POINT FORWARD LPAREN . Exp RPAREN SEMICOLON
    (16) Exp -> . ExpI pos_igual
    (19) ExpI -> . ExpK pos_Operandos
    (28) ExpK -> . ExpT pos_SUMRES
    (32) ExpT -> . ExpF pos_MULTDIV
    (36) ExpF -> . VAR_CTE
    (37) ExpF -> . LPAREN Exp RPAREN
    (38) ExpF -> . SLBRACKET Exp SRBRACKET
    (39) ExpF -> . VAR_ID pos_parens
    (40) VAR_CTE -> . VAR_INT
    (41) VAR_CTE -> . VAR_DECIMAL

    LPAREN          shift and go to state 73
    SLBRACKET       shift and go to state 77
    VAR_ID          shift and go to state 87
    VAR_INT         shift and go to state 79
    VAR_DECIMAL     shift and go to state 62

    ExpT                           shift and go to state 80
    ExpK                           shift and go to state 81
    ExpI                           shift and go to state 64
    Exp                            shift and go to state 170
    VAR_CTE                        shift and go to state 70
    ExpF                           shift and go to state 83

state 155

    (93) Circle -> VAR_ID POINT CIRCLE LPAREN . Exp RPAREN SEMICOLON
    (16) Exp -> . ExpI pos_igual
    (19) ExpI -> . ExpK pos_Operandos
    (28) ExpK -> . ExpT pos_SUMRES
    (32) ExpT -> . ExpF pos_MULTDIV
    (36) ExpF -> . VAR_CTE
    (37) ExpF -> . LPAREN Exp RPAREN
    (38) ExpF -> . SLBRACKET Exp SRBRACKET
    (39) ExpF -> . VAR_ID pos_parens
    (40) VAR_CTE -> . VAR_INT
    (41) VAR_CTE -> . VAR_DECIMAL

    LPAREN          shift and go to state 73
    SLBRACKET       shift and go to state 77
    VAR_ID          shift and go to state 87
    VAR_INT         shift and go to state 79
    VAR_DECIMAL     shift and go to state 62

    ExpT                           shift and go to state 80
    ExpK                           shift and go to state 81
    ExpI                           shift and go to state 64
    Exp                            shift and go to state 171
    VAR_CTE                        shift and go to state 70
    ExpF                           shift and go to state 83

state 156

    (92) Left -> VAR_ID POINT LEFT LPAREN . Exp RPAREN SEMICOLON
    (16) Exp -> . ExpI pos_igual
    (19) ExpI -> . ExpK pos_Operandos
    (28) ExpK -> . ExpT pos_SUMRES
    (32) ExpT -> . ExpF pos_MULTDIV
    (36) ExpF -> . VAR_CTE
    (37) ExpF -> . LPAREN Exp RPAREN
    (38) ExpF -> . SLBRACKET Exp SRBRACKET
    (39) ExpF -> . VAR_ID pos_parens
    (40) VAR_CTE -> . VAR_INT
    (41) VAR_CTE -> . VAR_DECIMAL

    LPAREN          shift and go to state 73
    SLBRACKET       shift and go to state 77
    VAR_ID          shift and go to state 87
    VAR_INT         shift and go to state 79
    VAR_DECIMAL     shift and go to state 62

    ExpT                           shift and go to state 80
    ExpK                           shift and go to state 81
    ExpI                           shift and go to state 64
    Exp                            shift and go to state 172
    VAR_CTE                        shift and go to state 70
    ExpF                           shift and go to state 83

state 157

    (69) paramLlam -> Exp pos_commaLlam .

    RPAREN          reduce using rule 69 (paramLlam -> Exp pos_commaLlam .)


state 158

    (70) pos_commaLlam -> COMMA . paramLlam
    (69) paramLlam -> . Exp pos_commaLlam
    (16) Exp -> . ExpI pos_igual
    (19) ExpI -> . ExpK pos_Operandos
    (28) ExpK -> . ExpT pos_SUMRES
    (32) ExpT -> . ExpF pos_MULTDIV
    (36) ExpF -> . VAR_CTE
    (37) ExpF -> . LPAREN Exp RPAREN
    (38) ExpF -> . SLBRACKET Exp SRBRACKET
    (39) ExpF -> . VAR_ID pos_parens
    (40) VAR_CTE -> . VAR_INT
    (41) VAR_CTE -> . VAR_DECIMAL

    LPAREN          shift and go to state 73
    SLBRACKET       shift and go to state 77
    VAR_ID          shift and go to state 87
    VAR_INT         shift and go to state 79
    VAR_DECIMAL     shift and go to state 62

    paramLlam                      shift and go to state 173
    ExpT                           shift and go to state 80
    ExpK                           shift and go to state 81
    ExpI                           shift and go to state 64
    Exp                            shift and go to state 174
    VAR_CTE                        shift and go to state 70
    ExpF                           shift and go to state 83

state 159

    (42) pos_parens -> LPAREN Exp RPAREN .

    MULT            reduce using rule 42 (pos_parens -> LPAREN Exp RPAREN .)
    DIV             reduce using rule 42 (pos_parens -> LPAREN Exp RPAREN .)
    PLUS            reduce using rule 42 (pos_parens -> LPAREN Exp RPAREN .)
    MINUS           reduce using rule 42 (pos_parens -> LPAREN Exp RPAREN .)
    LT              reduce using rule 42 (pos_parens -> LPAREN Exp RPAREN .)
    GT              reduce using rule 42 (pos_parens -> LPAREN Exp RPAREN .)
    NE              reduce using rule 42 (pos_parens -> LPAREN Exp RPAREN .)
    LE              reduce using rule 42 (pos_parens -> LPAREN Exp RPAREN .)
    GE              reduce using rule 42 (pos_parens -> LPAREN Exp RPAREN .)
    EQ              reduce using rule 42 (pos_parens -> LPAREN Exp RPAREN .)
    ASSIGN          reduce using rule 42 (pos_parens -> LPAREN Exp RPAREN .)
    SEMICOLON       reduce using rule 42 (pos_parens -> LPAREN Exp RPAREN .)
    RPAREN          reduce using rule 42 (pos_parens -> LPAREN Exp RPAREN .)
    SRBRACKET       reduce using rule 42 (pos_parens -> LPAREN Exp RPAREN .)
    COMMA           reduce using rule 42 (pos_parens -> LPAREN Exp RPAREN .)


state 160

    (68) Llamada_Func -> VAR_ID LPAREN paramLlam RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 175


state 161

    (77) For -> FOR LPAREN VAR_ID ASSIGN . Exp SEMICOLON Exp SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (16) Exp -> . ExpI pos_igual
    (19) ExpI -> . ExpK pos_Operandos
    (28) ExpK -> . ExpT pos_SUMRES
    (32) ExpT -> . ExpF pos_MULTDIV
    (36) ExpF -> . VAR_CTE
    (37) ExpF -> . LPAREN Exp RPAREN
    (38) ExpF -> . SLBRACKET Exp SRBRACKET
    (39) ExpF -> . VAR_ID pos_parens
    (40) VAR_CTE -> . VAR_INT
    (41) VAR_CTE -> . VAR_DECIMAL

    LPAREN          shift and go to state 73
    SLBRACKET       shift and go to state 77
    VAR_ID          shift and go to state 87
    VAR_INT         shift and go to state 79
    VAR_DECIMAL     shift and go to state 62

    ExpT                           shift and go to state 80
    ExpK                           shift and go to state 81
    ExpI                           shift and go to state 64
    Exp                            shift and go to state 176
    VAR_CTE                        shift and go to state 70
    ExpF                           shift and go to state 83

state 162

    (62) Condicion -> IF LPAREN Exp RPAREN . LBRACKET reg_brack RBRACKET pos_else

    LBRACKET        shift and go to state 177


state 163

    (76) DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE . LPAREN Exp RPAREN SEMICOLON

    LPAREN          shift and go to state 178


state 164

    (94) Main -> MAIN LPAREN RPAREN LBRACKET vars_o_espacio reg_brack RET ZERO SEMICOLON RBRACKET .

    $end            reduce using rule 94 (Main -> MAIN LPAREN RPAREN LBRACKET vars_o_espacio reg_brack RET ZERO SEMICOLON RBRACKET .)


state 165

    (66) Print -> PRINT LPAREN VAR_STRING RPAREN SEMICOLON .

    IF              reduce using rule 66 (Print -> PRINT LPAREN VAR_STRING RPAREN SEMICOLON .)
    RETURN          reduce using rule 66 (Print -> PRINT LPAREN VAR_STRING RPAREN SEMICOLON .)
    PRINT           reduce using rule 66 (Print -> PRINT LPAREN VAR_STRING RPAREN SEMICOLON .)
    VAR_ID          reduce using rule 66 (Print -> PRINT LPAREN VAR_STRING RPAREN SEMICOLON .)
    FOR             reduce using rule 66 (Print -> PRINT LPAREN VAR_STRING RPAREN SEMICOLON .)
    WHILE           reduce using rule 66 (Print -> PRINT LPAREN VAR_STRING RPAREN SEMICOLON .)
    DO              reduce using rule 66 (Print -> PRINT LPAREN VAR_STRING RPAREN SEMICOLON .)
    LPAREN          reduce using rule 66 (Print -> PRINT LPAREN VAR_STRING RPAREN SEMICOLON .)
    SLBRACKET       reduce using rule 66 (Print -> PRINT LPAREN VAR_STRING RPAREN SEMICOLON .)
    VAR_INT         reduce using rule 66 (Print -> PRINT LPAREN VAR_STRING RPAREN SEMICOLON .)
    VAR_DECIMAL     reduce using rule 66 (Print -> PRINT LPAREN VAR_STRING RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 66 (Print -> PRINT LPAREN VAR_STRING RPAREN SEMICOLON .)
    RET             reduce using rule 66 (Print -> PRINT LPAREN VAR_STRING RPAREN SEMICOLON .)


state 166

    (67) Print -> PRINT LPAREN Exp RPAREN SEMICOLON .

    IF              reduce using rule 67 (Print -> PRINT LPAREN Exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 67 (Print -> PRINT LPAREN Exp RPAREN SEMICOLON .)
    PRINT           reduce using rule 67 (Print -> PRINT LPAREN Exp RPAREN SEMICOLON .)
    VAR_ID          reduce using rule 67 (Print -> PRINT LPAREN Exp RPAREN SEMICOLON .)
    FOR             reduce using rule 67 (Print -> PRINT LPAREN Exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 67 (Print -> PRINT LPAREN Exp RPAREN SEMICOLON .)
    DO              reduce using rule 67 (Print -> PRINT LPAREN Exp RPAREN SEMICOLON .)
    LPAREN          reduce using rule 67 (Print -> PRINT LPAREN Exp RPAREN SEMICOLON .)
    SLBRACKET       reduce using rule 67 (Print -> PRINT LPAREN Exp RPAREN SEMICOLON .)
    VAR_INT         reduce using rule 67 (Print -> PRINT LPAREN Exp RPAREN SEMICOLON .)
    VAR_DECIMAL     reduce using rule 67 (Print -> PRINT LPAREN Exp RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 67 (Print -> PRINT LPAREN Exp RPAREN SEMICOLON .)
    RET             reduce using rule 67 (Print -> PRINT LPAREN Exp RPAREN SEMICOLON .)


state 167

    (75) While -> WHILE LPAREN Exp RPAREN LBRACKET . reg_brack RBRACKET
    (53) reg_brack -> . Estatutos reg_brack
    (54) reg_brack -> .
    (55) Estatutos -> . Condicion
    (56) Estatutos -> . Ciclo
    (57) Estatutos -> . Return
    (58) Estatutos -> . Exp SEMICOLON
    (59) Estatutos -> . Print
    (60) Estatutos -> . Llamada_Func
    (61) Estatutos -> . TurtleMotion
    (62) Condicion -> . IF LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET pos_else
    (72) Ciclo -> . For
    (73) Ciclo -> . While
    (74) Ciclo -> . DoWhile
    (65) Return -> . RETURN Exp SEMICOLON
    (16) Exp -> . ExpI pos_igual
    (66) Print -> . PRINT LPAREN VAR_STRING RPAREN SEMICOLON
    (67) Print -> . PRINT LPAREN Exp RPAREN SEMICOLON
    (68) Llamada_Func -> . VAR_ID LPAREN paramLlam RPAREN SEMICOLON
    (84) TurtleMotion -> . Position
    (85) TurtleMotion -> . Right
    (86) TurtleMotion -> . Left
    (87) TurtleMotion -> . Forward
    (88) TurtleMotion -> . Circle
    (77) For -> . FOR LPAREN VAR_ID ASSIGN Exp SEMICOLON Exp SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (75) While -> . WHILE LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET
    (76) DoWhile -> . DO LBRACKET reg_brack RBRACKET WHILE LPAREN Exp RPAREN SEMICOLON
    (19) ExpI -> . ExpK pos_Operandos
    (89) Position -> . VAR_ID POINT POS LPAREN RPAREN SEMICOLON
    (91) Right -> . VAR_ID POINT RIGHT LPAREN Exp RPAREN SEMICOLON
    (92) Left -> . VAR_ID POINT LEFT LPAREN Exp RPAREN SEMICOLON
    (90) Forward -> . VAR_ID POINT FORWARD LPAREN Exp RPAREN SEMICOLON
    (93) Circle -> . VAR_ID POINT CIRCLE LPAREN Exp RPAREN SEMICOLON
    (28) ExpK -> . ExpT pos_SUMRES
    (32) ExpT -> . ExpF pos_MULTDIV
    (36) ExpF -> . VAR_CTE
    (37) ExpF -> . LPAREN Exp RPAREN
    (38) ExpF -> . SLBRACKET Exp SRBRACKET
    (39) ExpF -> . VAR_ID pos_parens
    (40) VAR_CTE -> . VAR_INT
    (41) VAR_CTE -> . VAR_DECIMAL

    RBRACKET        reduce using rule 54 (reg_brack -> .)
    IF              shift and go to state 76
    RETURN          shift and go to state 52
    PRINT           shift and go to state 56
    VAR_ID          shift and go to state 63
    FOR             shift and go to state 69
    WHILE           shift and go to state 57
    DO              shift and go to state 51
    LPAREN          shift and go to state 73
    SLBRACKET       shift and go to state 77
    VAR_INT         shift and go to state 79
    VAR_DECIMAL     shift and go to state 62

    Ciclo                          shift and go to state 53
    For                            shift and go to state 54
    reg_brack                      shift and go to state 179
    VAR_CTE                        shift and go to state 70
    Print                          shift and go to state 60
    Condicion                      shift and go to state 58
    Forward                        shift and go to state 82
    Circle                         shift and go to state 61
    Return                         shift and go to state 74
    DoWhile                        shift and go to state 65
    Estatutos                      shift and go to state 66
    TurtleMotion                   shift and go to state 68
    While                          shift and go to state 71
    Exp                            shift and go to state 72
    Position                       shift and go to state 59
    Llamada_Func                   shift and go to state 75
    Left                           shift and go to state 67
    Right                          shift and go to state 78
    ExpT                           shift and go to state 80
    ExpK                           shift and go to state 81
    ExpI                           shift and go to state 64
    ExpF                           shift and go to state 83

state 168

    (91) Right -> VAR_ID POINT RIGHT LPAREN Exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 180


state 169

    (89) Position -> VAR_ID POINT POS LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 181


state 170

    (90) Forward -> VAR_ID POINT FORWARD LPAREN Exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 182


state 171

    (93) Circle -> VAR_ID POINT CIRCLE LPAREN Exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 183


state 172

    (92) Left -> VAR_ID POINT LEFT LPAREN Exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 184


state 173

    (70) pos_commaLlam -> COMMA paramLlam .

    RPAREN          reduce using rule 70 (pos_commaLlam -> COMMA paramLlam .)


state 174

    (69) paramLlam -> Exp . pos_commaLlam
    (70) pos_commaLlam -> . COMMA paramLlam
    (71) pos_commaLlam -> .

    COMMA           shift and go to state 158
    RPAREN          reduce using rule 71 (pos_commaLlam -> .)

    pos_commaLlam                  shift and go to state 157

state 175

    (68) Llamada_Func -> VAR_ID LPAREN paramLlam RPAREN SEMICOLON .

    IF              reduce using rule 68 (Llamada_Func -> VAR_ID LPAREN paramLlam RPAREN SEMICOLON .)
    RETURN          reduce using rule 68 (Llamada_Func -> VAR_ID LPAREN paramLlam RPAREN SEMICOLON .)
    PRINT           reduce using rule 68 (Llamada_Func -> VAR_ID LPAREN paramLlam RPAREN SEMICOLON .)
    VAR_ID          reduce using rule 68 (Llamada_Func -> VAR_ID LPAREN paramLlam RPAREN SEMICOLON .)
    FOR             reduce using rule 68 (Llamada_Func -> VAR_ID LPAREN paramLlam RPAREN SEMICOLON .)
    WHILE           reduce using rule 68 (Llamada_Func -> VAR_ID LPAREN paramLlam RPAREN SEMICOLON .)
    DO              reduce using rule 68 (Llamada_Func -> VAR_ID LPAREN paramLlam RPAREN SEMICOLON .)
    LPAREN          reduce using rule 68 (Llamada_Func -> VAR_ID LPAREN paramLlam RPAREN SEMICOLON .)
    SLBRACKET       reduce using rule 68 (Llamada_Func -> VAR_ID LPAREN paramLlam RPAREN SEMICOLON .)
    VAR_INT         reduce using rule 68 (Llamada_Func -> VAR_ID LPAREN paramLlam RPAREN SEMICOLON .)
    VAR_DECIMAL     reduce using rule 68 (Llamada_Func -> VAR_ID LPAREN paramLlam RPAREN SEMICOLON .)
    RET             reduce using rule 68 (Llamada_Func -> VAR_ID LPAREN paramLlam RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 68 (Llamada_Func -> VAR_ID LPAREN paramLlam RPAREN SEMICOLON .)


state 176

    (77) For -> FOR LPAREN VAR_ID ASSIGN Exp . SEMICOLON Exp SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET

    SEMICOLON       shift and go to state 185


state 177

    (62) Condicion -> IF LPAREN Exp RPAREN LBRACKET . reg_brack RBRACKET pos_else
    (53) reg_brack -> . Estatutos reg_brack
    (54) reg_brack -> .
    (55) Estatutos -> . Condicion
    (56) Estatutos -> . Ciclo
    (57) Estatutos -> . Return
    (58) Estatutos -> . Exp SEMICOLON
    (59) Estatutos -> . Print
    (60) Estatutos -> . Llamada_Func
    (61) Estatutos -> . TurtleMotion
    (62) Condicion -> . IF LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET pos_else
    (72) Ciclo -> . For
    (73) Ciclo -> . While
    (74) Ciclo -> . DoWhile
    (65) Return -> . RETURN Exp SEMICOLON
    (16) Exp -> . ExpI pos_igual
    (66) Print -> . PRINT LPAREN VAR_STRING RPAREN SEMICOLON
    (67) Print -> . PRINT LPAREN Exp RPAREN SEMICOLON
    (68) Llamada_Func -> . VAR_ID LPAREN paramLlam RPAREN SEMICOLON
    (84) TurtleMotion -> . Position
    (85) TurtleMotion -> . Right
    (86) TurtleMotion -> . Left
    (87) TurtleMotion -> . Forward
    (88) TurtleMotion -> . Circle
    (77) For -> . FOR LPAREN VAR_ID ASSIGN Exp SEMICOLON Exp SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (75) While -> . WHILE LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET
    (76) DoWhile -> . DO LBRACKET reg_brack RBRACKET WHILE LPAREN Exp RPAREN SEMICOLON
    (19) ExpI -> . ExpK pos_Operandos
    (89) Position -> . VAR_ID POINT POS LPAREN RPAREN SEMICOLON
    (91) Right -> . VAR_ID POINT RIGHT LPAREN Exp RPAREN SEMICOLON
    (92) Left -> . VAR_ID POINT LEFT LPAREN Exp RPAREN SEMICOLON
    (90) Forward -> . VAR_ID POINT FORWARD LPAREN Exp RPAREN SEMICOLON
    (93) Circle -> . VAR_ID POINT CIRCLE LPAREN Exp RPAREN SEMICOLON
    (28) ExpK -> . ExpT pos_SUMRES
    (32) ExpT -> . ExpF pos_MULTDIV
    (36) ExpF -> . VAR_CTE
    (37) ExpF -> . LPAREN Exp RPAREN
    (38) ExpF -> . SLBRACKET Exp SRBRACKET
    (39) ExpF -> . VAR_ID pos_parens
    (40) VAR_CTE -> . VAR_INT
    (41) VAR_CTE -> . VAR_DECIMAL

    RBRACKET        reduce using rule 54 (reg_brack -> .)
    IF              shift and go to state 76
    RETURN          shift and go to state 52
    PRINT           shift and go to state 56
    VAR_ID          shift and go to state 63
    FOR             shift and go to state 69
    WHILE           shift and go to state 57
    DO              shift and go to state 51
    LPAREN          shift and go to state 73
    SLBRACKET       shift and go to state 77
    VAR_INT         shift and go to state 79
    VAR_DECIMAL     shift and go to state 62

    Ciclo                          shift and go to state 53
    For                            shift and go to state 54
    reg_brack                      shift and go to state 186
    VAR_CTE                        shift and go to state 70
    Print                          shift and go to state 60
    Condicion                      shift and go to state 58
    Forward                        shift and go to state 82
    Circle                         shift and go to state 61
    Return                         shift and go to state 74
    DoWhile                        shift and go to state 65
    Estatutos                      shift and go to state 66
    TurtleMotion                   shift and go to state 68
    While                          shift and go to state 71
    Exp                            shift and go to state 72
    Position                       shift and go to state 59
    Llamada_Func                   shift and go to state 75
    Left                           shift and go to state 67
    Right                          shift and go to state 78
    ExpT                           shift and go to state 80
    ExpK                           shift and go to state 81
    ExpI                           shift and go to state 64
    ExpF                           shift and go to state 83

state 178

    (76) DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN . Exp RPAREN SEMICOLON
    (16) Exp -> . ExpI pos_igual
    (19) ExpI -> . ExpK pos_Operandos
    (28) ExpK -> . ExpT pos_SUMRES
    (32) ExpT -> . ExpF pos_MULTDIV
    (36) ExpF -> . VAR_CTE
    (37) ExpF -> . LPAREN Exp RPAREN
    (38) ExpF -> . SLBRACKET Exp SRBRACKET
    (39) ExpF -> . VAR_ID pos_parens
    (40) VAR_CTE -> . VAR_INT
    (41) VAR_CTE -> . VAR_DECIMAL

    LPAREN          shift and go to state 73
    SLBRACKET       shift and go to state 77
    VAR_ID          shift and go to state 87
    VAR_INT         shift and go to state 79
    VAR_DECIMAL     shift and go to state 62

    ExpT                           shift and go to state 80
    ExpK                           shift and go to state 81
    ExpI                           shift and go to state 64
    Exp                            shift and go to state 187
    VAR_CTE                        shift and go to state 70
    ExpF                           shift and go to state 83

state 179

    (75) While -> WHILE LPAREN Exp RPAREN LBRACKET reg_brack . RBRACKET

    RBRACKET        shift and go to state 188


state 180

    (91) Right -> VAR_ID POINT RIGHT LPAREN Exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 189


state 181

    (89) Position -> VAR_ID POINT POS LPAREN RPAREN SEMICOLON .

    IF              reduce using rule 89 (Position -> VAR_ID POINT POS LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 89 (Position -> VAR_ID POINT POS LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 89 (Position -> VAR_ID POINT POS LPAREN RPAREN SEMICOLON .)
    VAR_ID          reduce using rule 89 (Position -> VAR_ID POINT POS LPAREN RPAREN SEMICOLON .)
    FOR             reduce using rule 89 (Position -> VAR_ID POINT POS LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 89 (Position -> VAR_ID POINT POS LPAREN RPAREN SEMICOLON .)
    DO              reduce using rule 89 (Position -> VAR_ID POINT POS LPAREN RPAREN SEMICOLON .)
    LPAREN          reduce using rule 89 (Position -> VAR_ID POINT POS LPAREN RPAREN SEMICOLON .)
    SLBRACKET       reduce using rule 89 (Position -> VAR_ID POINT POS LPAREN RPAREN SEMICOLON .)
    VAR_INT         reduce using rule 89 (Position -> VAR_ID POINT POS LPAREN RPAREN SEMICOLON .)
    VAR_DECIMAL     reduce using rule 89 (Position -> VAR_ID POINT POS LPAREN RPAREN SEMICOLON .)
    RET             reduce using rule 89 (Position -> VAR_ID POINT POS LPAREN RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 89 (Position -> VAR_ID POINT POS LPAREN RPAREN SEMICOLON .)


state 182

    (90) Forward -> VAR_ID POINT FORWARD LPAREN Exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 190


state 183

    (93) Circle -> VAR_ID POINT CIRCLE LPAREN Exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 191


state 184

    (92) Left -> VAR_ID POINT LEFT LPAREN Exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 192


state 185

    (77) For -> FOR LPAREN VAR_ID ASSIGN Exp SEMICOLON . Exp SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (16) Exp -> . ExpI pos_igual
    (19) ExpI -> . ExpK pos_Operandos
    (28) ExpK -> . ExpT pos_SUMRES
    (32) ExpT -> . ExpF pos_MULTDIV
    (36) ExpF -> . VAR_CTE
    (37) ExpF -> . LPAREN Exp RPAREN
    (38) ExpF -> . SLBRACKET Exp SRBRACKET
    (39) ExpF -> . VAR_ID pos_parens
    (40) VAR_CTE -> . VAR_INT
    (41) VAR_CTE -> . VAR_DECIMAL

    LPAREN          shift and go to state 73
    SLBRACKET       shift and go to state 77
    VAR_ID          shift and go to state 87
    VAR_INT         shift and go to state 79
    VAR_DECIMAL     shift and go to state 62

    ExpT                           shift and go to state 80
    ExpK                           shift and go to state 81
    ExpI                           shift and go to state 64
    Exp                            shift and go to state 193
    VAR_CTE                        shift and go to state 70
    ExpF                           shift and go to state 83

state 186

    (62) Condicion -> IF LPAREN Exp RPAREN LBRACKET reg_brack . RBRACKET pos_else

    RBRACKET        shift and go to state 194


state 187

    (76) DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN Exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 195


state 188

    (75) While -> WHILE LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET .

    IF              reduce using rule 75 (While -> WHILE LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET .)
    RETURN          reduce using rule 75 (While -> WHILE LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET .)
    PRINT           reduce using rule 75 (While -> WHILE LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET .)
    VAR_ID          reduce using rule 75 (While -> WHILE LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET .)
    FOR             reduce using rule 75 (While -> WHILE LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET .)
    WHILE           reduce using rule 75 (While -> WHILE LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET .)
    DO              reduce using rule 75 (While -> WHILE LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET .)
    LPAREN          reduce using rule 75 (While -> WHILE LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET .)
    SLBRACKET       reduce using rule 75 (While -> WHILE LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET .)
    VAR_INT         reduce using rule 75 (While -> WHILE LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET .)
    VAR_DECIMAL     reduce using rule 75 (While -> WHILE LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET .)
    RBRACKET        reduce using rule 75 (While -> WHILE LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET .)
    RET             reduce using rule 75 (While -> WHILE LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET .)


state 189

    (91) Right -> VAR_ID POINT RIGHT LPAREN Exp RPAREN SEMICOLON .

    IF              reduce using rule 91 (Right -> VAR_ID POINT RIGHT LPAREN Exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 91 (Right -> VAR_ID POINT RIGHT LPAREN Exp RPAREN SEMICOLON .)
    PRINT           reduce using rule 91 (Right -> VAR_ID POINT RIGHT LPAREN Exp RPAREN SEMICOLON .)
    VAR_ID          reduce using rule 91 (Right -> VAR_ID POINT RIGHT LPAREN Exp RPAREN SEMICOLON .)
    FOR             reduce using rule 91 (Right -> VAR_ID POINT RIGHT LPAREN Exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 91 (Right -> VAR_ID POINT RIGHT LPAREN Exp RPAREN SEMICOLON .)
    DO              reduce using rule 91 (Right -> VAR_ID POINT RIGHT LPAREN Exp RPAREN SEMICOLON .)
    LPAREN          reduce using rule 91 (Right -> VAR_ID POINT RIGHT LPAREN Exp RPAREN SEMICOLON .)
    SLBRACKET       reduce using rule 91 (Right -> VAR_ID POINT RIGHT LPAREN Exp RPAREN SEMICOLON .)
    VAR_INT         reduce using rule 91 (Right -> VAR_ID POINT RIGHT LPAREN Exp RPAREN SEMICOLON .)
    VAR_DECIMAL     reduce using rule 91 (Right -> VAR_ID POINT RIGHT LPAREN Exp RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 91 (Right -> VAR_ID POINT RIGHT LPAREN Exp RPAREN SEMICOLON .)
    RET             reduce using rule 91 (Right -> VAR_ID POINT RIGHT LPAREN Exp RPAREN SEMICOLON .)


state 190

    (90) Forward -> VAR_ID POINT FORWARD LPAREN Exp RPAREN SEMICOLON .

    IF              reduce using rule 90 (Forward -> VAR_ID POINT FORWARD LPAREN Exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 90 (Forward -> VAR_ID POINT FORWARD LPAREN Exp RPAREN SEMICOLON .)
    PRINT           reduce using rule 90 (Forward -> VAR_ID POINT FORWARD LPAREN Exp RPAREN SEMICOLON .)
    VAR_ID          reduce using rule 90 (Forward -> VAR_ID POINT FORWARD LPAREN Exp RPAREN SEMICOLON .)
    FOR             reduce using rule 90 (Forward -> VAR_ID POINT FORWARD LPAREN Exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 90 (Forward -> VAR_ID POINT FORWARD LPAREN Exp RPAREN SEMICOLON .)
    DO              reduce using rule 90 (Forward -> VAR_ID POINT FORWARD LPAREN Exp RPAREN SEMICOLON .)
    LPAREN          reduce using rule 90 (Forward -> VAR_ID POINT FORWARD LPAREN Exp RPAREN SEMICOLON .)
    SLBRACKET       reduce using rule 90 (Forward -> VAR_ID POINT FORWARD LPAREN Exp RPAREN SEMICOLON .)
    VAR_INT         reduce using rule 90 (Forward -> VAR_ID POINT FORWARD LPAREN Exp RPAREN SEMICOLON .)
    VAR_DECIMAL     reduce using rule 90 (Forward -> VAR_ID POINT FORWARD LPAREN Exp RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 90 (Forward -> VAR_ID POINT FORWARD LPAREN Exp RPAREN SEMICOLON .)
    RET             reduce using rule 90 (Forward -> VAR_ID POINT FORWARD LPAREN Exp RPAREN SEMICOLON .)


state 191

    (93) Circle -> VAR_ID POINT CIRCLE LPAREN Exp RPAREN SEMICOLON .

    IF              reduce using rule 93 (Circle -> VAR_ID POINT CIRCLE LPAREN Exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 93 (Circle -> VAR_ID POINT CIRCLE LPAREN Exp RPAREN SEMICOLON .)
    PRINT           reduce using rule 93 (Circle -> VAR_ID POINT CIRCLE LPAREN Exp RPAREN SEMICOLON .)
    VAR_ID          reduce using rule 93 (Circle -> VAR_ID POINT CIRCLE LPAREN Exp RPAREN SEMICOLON .)
    FOR             reduce using rule 93 (Circle -> VAR_ID POINT CIRCLE LPAREN Exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 93 (Circle -> VAR_ID POINT CIRCLE LPAREN Exp RPAREN SEMICOLON .)
    DO              reduce using rule 93 (Circle -> VAR_ID POINT CIRCLE LPAREN Exp RPAREN SEMICOLON .)
    LPAREN          reduce using rule 93 (Circle -> VAR_ID POINT CIRCLE LPAREN Exp RPAREN SEMICOLON .)
    SLBRACKET       reduce using rule 93 (Circle -> VAR_ID POINT CIRCLE LPAREN Exp RPAREN SEMICOLON .)
    VAR_INT         reduce using rule 93 (Circle -> VAR_ID POINT CIRCLE LPAREN Exp RPAREN SEMICOLON .)
    VAR_DECIMAL     reduce using rule 93 (Circle -> VAR_ID POINT CIRCLE LPAREN Exp RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 93 (Circle -> VAR_ID POINT CIRCLE LPAREN Exp RPAREN SEMICOLON .)
    RET             reduce using rule 93 (Circle -> VAR_ID POINT CIRCLE LPAREN Exp RPAREN SEMICOLON .)


state 192

    (92) Left -> VAR_ID POINT LEFT LPAREN Exp RPAREN SEMICOLON .

    IF              reduce using rule 92 (Left -> VAR_ID POINT LEFT LPAREN Exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 92 (Left -> VAR_ID POINT LEFT LPAREN Exp RPAREN SEMICOLON .)
    PRINT           reduce using rule 92 (Left -> VAR_ID POINT LEFT LPAREN Exp RPAREN SEMICOLON .)
    VAR_ID          reduce using rule 92 (Left -> VAR_ID POINT LEFT LPAREN Exp RPAREN SEMICOLON .)
    FOR             reduce using rule 92 (Left -> VAR_ID POINT LEFT LPAREN Exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 92 (Left -> VAR_ID POINT LEFT LPAREN Exp RPAREN SEMICOLON .)
    DO              reduce using rule 92 (Left -> VAR_ID POINT LEFT LPAREN Exp RPAREN SEMICOLON .)
    LPAREN          reduce using rule 92 (Left -> VAR_ID POINT LEFT LPAREN Exp RPAREN SEMICOLON .)
    SLBRACKET       reduce using rule 92 (Left -> VAR_ID POINT LEFT LPAREN Exp RPAREN SEMICOLON .)
    VAR_INT         reduce using rule 92 (Left -> VAR_ID POINT LEFT LPAREN Exp RPAREN SEMICOLON .)
    VAR_DECIMAL     reduce using rule 92 (Left -> VAR_ID POINT LEFT LPAREN Exp RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 92 (Left -> VAR_ID POINT LEFT LPAREN Exp RPAREN SEMICOLON .)
    RET             reduce using rule 92 (Left -> VAR_ID POINT LEFT LPAREN Exp RPAREN SEMICOLON .)


state 193

    (77) For -> FOR LPAREN VAR_ID ASSIGN Exp SEMICOLON Exp . SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET

    SEMICOLON       shift and go to state 196


state 194

    (62) Condicion -> IF LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET . pos_else
    (63) pos_else -> . ELSE LBRACKET reg_brack RBRACKET
    (64) pos_else -> .

    ELSE            shift and go to state 197
    IF              reduce using rule 64 (pos_else -> .)
    RETURN          reduce using rule 64 (pos_else -> .)
    PRINT           reduce using rule 64 (pos_else -> .)
    VAR_ID          reduce using rule 64 (pos_else -> .)
    FOR             reduce using rule 64 (pos_else -> .)
    WHILE           reduce using rule 64 (pos_else -> .)
    DO              reduce using rule 64 (pos_else -> .)
    LPAREN          reduce using rule 64 (pos_else -> .)
    SLBRACKET       reduce using rule 64 (pos_else -> .)
    VAR_INT         reduce using rule 64 (pos_else -> .)
    VAR_DECIMAL     reduce using rule 64 (pos_else -> .)
    RET             reduce using rule 64 (pos_else -> .)
    RBRACKET        reduce using rule 64 (pos_else -> .)

    pos_else                       shift and go to state 198

state 195

    (76) DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN Exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 199


state 196

    (77) For -> FOR LPAREN VAR_ID ASSIGN Exp SEMICOLON Exp SEMICOLON . VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET

    VAR_ID          shift and go to state 200


state 197

    (63) pos_else -> ELSE . LBRACKET reg_brack RBRACKET

    LBRACKET        shift and go to state 201


state 198

    (62) Condicion -> IF LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET pos_else .

    IF              reduce using rule 62 (Condicion -> IF LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET pos_else .)
    RETURN          reduce using rule 62 (Condicion -> IF LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET pos_else .)
    PRINT           reduce using rule 62 (Condicion -> IF LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET pos_else .)
    VAR_ID          reduce using rule 62 (Condicion -> IF LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET pos_else .)
    FOR             reduce using rule 62 (Condicion -> IF LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET pos_else .)
    WHILE           reduce using rule 62 (Condicion -> IF LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET pos_else .)
    DO              reduce using rule 62 (Condicion -> IF LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET pos_else .)
    LPAREN          reduce using rule 62 (Condicion -> IF LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET pos_else .)
    SLBRACKET       reduce using rule 62 (Condicion -> IF LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET pos_else .)
    VAR_INT         reduce using rule 62 (Condicion -> IF LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET pos_else .)
    VAR_DECIMAL     reduce using rule 62 (Condicion -> IF LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET pos_else .)
    RBRACKET        reduce using rule 62 (Condicion -> IF LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET pos_else .)
    RET             reduce using rule 62 (Condicion -> IF LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET pos_else .)


state 199

    (76) DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN Exp RPAREN SEMICOLON .

    IF              reduce using rule 76 (DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN Exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 76 (DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN Exp RPAREN SEMICOLON .)
    PRINT           reduce using rule 76 (DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN Exp RPAREN SEMICOLON .)
    VAR_ID          reduce using rule 76 (DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN Exp RPAREN SEMICOLON .)
    FOR             reduce using rule 76 (DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN Exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 76 (DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN Exp RPAREN SEMICOLON .)
    DO              reduce using rule 76 (DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN Exp RPAREN SEMICOLON .)
    LPAREN          reduce using rule 76 (DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN Exp RPAREN SEMICOLON .)
    SLBRACKET       reduce using rule 76 (DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN Exp RPAREN SEMICOLON .)
    VAR_INT         reduce using rule 76 (DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN Exp RPAREN SEMICOLON .)
    VAR_DECIMAL     reduce using rule 76 (DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN Exp RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 76 (DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN Exp RPAREN SEMICOLON .)
    RET             reduce using rule 76 (DoWhile -> DO LBRACKET reg_brack RBRACKET WHILE LPAREN Exp RPAREN SEMICOLON .)


state 200

    (77) For -> FOR LPAREN VAR_ID ASSIGN Exp SEMICOLON Exp SEMICOLON VAR_ID . Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (78) Exp_ciclo -> . PLUS VAR_INT
    (79) Exp_ciclo -> . MINUS VAR_INT
    (80) Exp_ciclo -> . MULT VAR_INT
    (81) Exp_ciclo -> . DIV VAR_INT
    (82) Exp_ciclo -> . PLUSPLUS
    (83) Exp_ciclo -> . MINUSMINUS

    PLUS            shift and go to state 207
    MINUS           shift and go to state 206
    MULT            shift and go to state 208
    DIV             shift and go to state 205
    PLUSPLUS        shift and go to state 203
    MINUSMINUS      shift and go to state 202

    Exp_ciclo                      shift and go to state 204

state 201

    (63) pos_else -> ELSE LBRACKET . reg_brack RBRACKET
    (53) reg_brack -> . Estatutos reg_brack
    (54) reg_brack -> .
    (55) Estatutos -> . Condicion
    (56) Estatutos -> . Ciclo
    (57) Estatutos -> . Return
    (58) Estatutos -> . Exp SEMICOLON
    (59) Estatutos -> . Print
    (60) Estatutos -> . Llamada_Func
    (61) Estatutos -> . TurtleMotion
    (62) Condicion -> . IF LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET pos_else
    (72) Ciclo -> . For
    (73) Ciclo -> . While
    (74) Ciclo -> . DoWhile
    (65) Return -> . RETURN Exp SEMICOLON
    (16) Exp -> . ExpI pos_igual
    (66) Print -> . PRINT LPAREN VAR_STRING RPAREN SEMICOLON
    (67) Print -> . PRINT LPAREN Exp RPAREN SEMICOLON
    (68) Llamada_Func -> . VAR_ID LPAREN paramLlam RPAREN SEMICOLON
    (84) TurtleMotion -> . Position
    (85) TurtleMotion -> . Right
    (86) TurtleMotion -> . Left
    (87) TurtleMotion -> . Forward
    (88) TurtleMotion -> . Circle
    (77) For -> . FOR LPAREN VAR_ID ASSIGN Exp SEMICOLON Exp SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (75) While -> . WHILE LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET
    (76) DoWhile -> . DO LBRACKET reg_brack RBRACKET WHILE LPAREN Exp RPAREN SEMICOLON
    (19) ExpI -> . ExpK pos_Operandos
    (89) Position -> . VAR_ID POINT POS LPAREN RPAREN SEMICOLON
    (91) Right -> . VAR_ID POINT RIGHT LPAREN Exp RPAREN SEMICOLON
    (92) Left -> . VAR_ID POINT LEFT LPAREN Exp RPAREN SEMICOLON
    (90) Forward -> . VAR_ID POINT FORWARD LPAREN Exp RPAREN SEMICOLON
    (93) Circle -> . VAR_ID POINT CIRCLE LPAREN Exp RPAREN SEMICOLON
    (28) ExpK -> . ExpT pos_SUMRES
    (32) ExpT -> . ExpF pos_MULTDIV
    (36) ExpF -> . VAR_CTE
    (37) ExpF -> . LPAREN Exp RPAREN
    (38) ExpF -> . SLBRACKET Exp SRBRACKET
    (39) ExpF -> . VAR_ID pos_parens
    (40) VAR_CTE -> . VAR_INT
    (41) VAR_CTE -> . VAR_DECIMAL

    RBRACKET        reduce using rule 54 (reg_brack -> .)
    IF              shift and go to state 76
    RETURN          shift and go to state 52
    PRINT           shift and go to state 56
    VAR_ID          shift and go to state 63
    FOR             shift and go to state 69
    WHILE           shift and go to state 57
    DO              shift and go to state 51
    LPAREN          shift and go to state 73
    SLBRACKET       shift and go to state 77
    VAR_INT         shift and go to state 79
    VAR_DECIMAL     shift and go to state 62

    Ciclo                          shift and go to state 53
    For                            shift and go to state 54
    reg_brack                      shift and go to state 209
    VAR_CTE                        shift and go to state 70
    Print                          shift and go to state 60
    Condicion                      shift and go to state 58
    Forward                        shift and go to state 82
    Circle                         shift and go to state 61
    Return                         shift and go to state 74
    DoWhile                        shift and go to state 65
    Estatutos                      shift and go to state 66
    TurtleMotion                   shift and go to state 68
    While                          shift and go to state 71
    Exp                            shift and go to state 72
    Position                       shift and go to state 59
    Llamada_Func                   shift and go to state 75
    Left                           shift and go to state 67
    Right                          shift and go to state 78
    ExpT                           shift and go to state 80
    ExpK                           shift and go to state 81
    ExpI                           shift and go to state 64
    ExpF                           shift and go to state 83

state 202

    (83) Exp_ciclo -> MINUSMINUS .

    RPAREN          reduce using rule 83 (Exp_ciclo -> MINUSMINUS .)


state 203

    (82) Exp_ciclo -> PLUSPLUS .

    RPAREN          reduce using rule 82 (Exp_ciclo -> PLUSPLUS .)


state 204

    (77) For -> FOR LPAREN VAR_ID ASSIGN Exp SEMICOLON Exp SEMICOLON VAR_ID Exp_ciclo . RPAREN LBRACKET reg_brack RBRACKET

    RPAREN          shift and go to state 210


state 205

    (81) Exp_ciclo -> DIV . VAR_INT

    VAR_INT         shift and go to state 211


state 206

    (79) Exp_ciclo -> MINUS . VAR_INT

    VAR_INT         shift and go to state 212


state 207

    (78) Exp_ciclo -> PLUS . VAR_INT

    VAR_INT         shift and go to state 213


state 208

    (80) Exp_ciclo -> MULT . VAR_INT

    VAR_INT         shift and go to state 214


state 209

    (63) pos_else -> ELSE LBRACKET reg_brack . RBRACKET

    RBRACKET        shift and go to state 215


state 210

    (77) For -> FOR LPAREN VAR_ID ASSIGN Exp SEMICOLON Exp SEMICOLON VAR_ID Exp_ciclo RPAREN . LBRACKET reg_brack RBRACKET

    LBRACKET        shift and go to state 216


state 211

    (81) Exp_ciclo -> DIV VAR_INT .

    RPAREN          reduce using rule 81 (Exp_ciclo -> DIV VAR_INT .)


state 212

    (79) Exp_ciclo -> MINUS VAR_INT .

    RPAREN          reduce using rule 79 (Exp_ciclo -> MINUS VAR_INT .)


state 213

    (78) Exp_ciclo -> PLUS VAR_INT .

    RPAREN          reduce using rule 78 (Exp_ciclo -> PLUS VAR_INT .)


state 214

    (80) Exp_ciclo -> MULT VAR_INT .

    RPAREN          reduce using rule 80 (Exp_ciclo -> MULT VAR_INT .)


state 215

    (63) pos_else -> ELSE LBRACKET reg_brack RBRACKET .

    IF              reduce using rule 63 (pos_else -> ELSE LBRACKET reg_brack RBRACKET .)
    RETURN          reduce using rule 63 (pos_else -> ELSE LBRACKET reg_brack RBRACKET .)
    PRINT           reduce using rule 63 (pos_else -> ELSE LBRACKET reg_brack RBRACKET .)
    VAR_ID          reduce using rule 63 (pos_else -> ELSE LBRACKET reg_brack RBRACKET .)
    FOR             reduce using rule 63 (pos_else -> ELSE LBRACKET reg_brack RBRACKET .)
    WHILE           reduce using rule 63 (pos_else -> ELSE LBRACKET reg_brack RBRACKET .)
    DO              reduce using rule 63 (pos_else -> ELSE LBRACKET reg_brack RBRACKET .)
    LPAREN          reduce using rule 63 (pos_else -> ELSE LBRACKET reg_brack RBRACKET .)
    SLBRACKET       reduce using rule 63 (pos_else -> ELSE LBRACKET reg_brack RBRACKET .)
    VAR_INT         reduce using rule 63 (pos_else -> ELSE LBRACKET reg_brack RBRACKET .)
    VAR_DECIMAL     reduce using rule 63 (pos_else -> ELSE LBRACKET reg_brack RBRACKET .)
    RET             reduce using rule 63 (pos_else -> ELSE LBRACKET reg_brack RBRACKET .)
    RBRACKET        reduce using rule 63 (pos_else -> ELSE LBRACKET reg_brack RBRACKET .)


state 216

    (77) For -> FOR LPAREN VAR_ID ASSIGN Exp SEMICOLON Exp SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET . reg_brack RBRACKET
    (53) reg_brack -> . Estatutos reg_brack
    (54) reg_brack -> .
    (55) Estatutos -> . Condicion
    (56) Estatutos -> . Ciclo
    (57) Estatutos -> . Return
    (58) Estatutos -> . Exp SEMICOLON
    (59) Estatutos -> . Print
    (60) Estatutos -> . Llamada_Func
    (61) Estatutos -> . TurtleMotion
    (62) Condicion -> . IF LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET pos_else
    (72) Ciclo -> . For
    (73) Ciclo -> . While
    (74) Ciclo -> . DoWhile
    (65) Return -> . RETURN Exp SEMICOLON
    (16) Exp -> . ExpI pos_igual
    (66) Print -> . PRINT LPAREN VAR_STRING RPAREN SEMICOLON
    (67) Print -> . PRINT LPAREN Exp RPAREN SEMICOLON
    (68) Llamada_Func -> . VAR_ID LPAREN paramLlam RPAREN SEMICOLON
    (84) TurtleMotion -> . Position
    (85) TurtleMotion -> . Right
    (86) TurtleMotion -> . Left
    (87) TurtleMotion -> . Forward
    (88) TurtleMotion -> . Circle
    (77) For -> . FOR LPAREN VAR_ID ASSIGN Exp SEMICOLON Exp SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET
    (75) While -> . WHILE LPAREN Exp RPAREN LBRACKET reg_brack RBRACKET
    (76) DoWhile -> . DO LBRACKET reg_brack RBRACKET WHILE LPAREN Exp RPAREN SEMICOLON
    (19) ExpI -> . ExpK pos_Operandos
    (89) Position -> . VAR_ID POINT POS LPAREN RPAREN SEMICOLON
    (91) Right -> . VAR_ID POINT RIGHT LPAREN Exp RPAREN SEMICOLON
    (92) Left -> . VAR_ID POINT LEFT LPAREN Exp RPAREN SEMICOLON
    (90) Forward -> . VAR_ID POINT FORWARD LPAREN Exp RPAREN SEMICOLON
    (93) Circle -> . VAR_ID POINT CIRCLE LPAREN Exp RPAREN SEMICOLON
    (28) ExpK -> . ExpT pos_SUMRES
    (32) ExpT -> . ExpF pos_MULTDIV
    (36) ExpF -> . VAR_CTE
    (37) ExpF -> . LPAREN Exp RPAREN
    (38) ExpF -> . SLBRACKET Exp SRBRACKET
    (39) ExpF -> . VAR_ID pos_parens
    (40) VAR_CTE -> . VAR_INT
    (41) VAR_CTE -> . VAR_DECIMAL

    RBRACKET        reduce using rule 54 (reg_brack -> .)
    IF              shift and go to state 76
    RETURN          shift and go to state 52
    PRINT           shift and go to state 56
    VAR_ID          shift and go to state 63
    FOR             shift and go to state 69
    WHILE           shift and go to state 57
    DO              shift and go to state 51
    LPAREN          shift and go to state 73
    SLBRACKET       shift and go to state 77
    VAR_INT         shift and go to state 79
    VAR_DECIMAL     shift and go to state 62

    Ciclo                          shift and go to state 53
    For                            shift and go to state 54
    VAR_CTE                        shift and go to state 70
    Print                          shift and go to state 60
    Condicion                      shift and go to state 58
    Forward                        shift and go to state 82
    Circle                         shift and go to state 61
    Return                         shift and go to state 74
    DoWhile                        shift and go to state 65
    Estatutos                      shift and go to state 66
    reg_brack                      shift and go to state 217
    TurtleMotion                   shift and go to state 68
    While                          shift and go to state 71
    Exp                            shift and go to state 72
    Position                       shift and go to state 59
    Llamada_Func                   shift and go to state 75
    Left                           shift and go to state 67
    Right                          shift and go to state 78
    ExpT                           shift and go to state 80
    ExpK                           shift and go to state 81
    ExpI                           shift and go to state 64
    ExpF                           shift and go to state 83

state 217

    (77) For -> FOR LPAREN VAR_ID ASSIGN Exp SEMICOLON Exp SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack . RBRACKET

    RBRACKET        shift and go to state 218


state 218

    (77) For -> FOR LPAREN VAR_ID ASSIGN Exp SEMICOLON Exp SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .

    IF              reduce using rule 77 (For -> FOR LPAREN VAR_ID ASSIGN Exp SEMICOLON Exp SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    RETURN          reduce using rule 77 (For -> FOR LPAREN VAR_ID ASSIGN Exp SEMICOLON Exp SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    PRINT           reduce using rule 77 (For -> FOR LPAREN VAR_ID ASSIGN Exp SEMICOLON Exp SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    VAR_ID          reduce using rule 77 (For -> FOR LPAREN VAR_ID ASSIGN Exp SEMICOLON Exp SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    FOR             reduce using rule 77 (For -> FOR LPAREN VAR_ID ASSIGN Exp SEMICOLON Exp SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    WHILE           reduce using rule 77 (For -> FOR LPAREN VAR_ID ASSIGN Exp SEMICOLON Exp SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    DO              reduce using rule 77 (For -> FOR LPAREN VAR_ID ASSIGN Exp SEMICOLON Exp SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    LPAREN          reduce using rule 77 (For -> FOR LPAREN VAR_ID ASSIGN Exp SEMICOLON Exp SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    SLBRACKET       reduce using rule 77 (For -> FOR LPAREN VAR_ID ASSIGN Exp SEMICOLON Exp SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    VAR_INT         reduce using rule 77 (For -> FOR LPAREN VAR_ID ASSIGN Exp SEMICOLON Exp SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    VAR_DECIMAL     reduce using rule 77 (For -> FOR LPAREN VAR_ID ASSIGN Exp SEMICOLON Exp SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    RBRACKET        reduce using rule 77 (For -> FOR LPAREN VAR_ID ASSIGN Exp SEMICOLON Exp SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)
    RET             reduce using rule 77 (For -> FOR LPAREN VAR_ID ASSIGN Exp SEMICOLON Exp SEMICOLON VAR_ID Exp_ciclo RPAREN LBRACKET reg_brack RBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RPAREN in state 132 resolved as shift
